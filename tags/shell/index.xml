<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on 空树之空</title><link>https://yezihack.github.io/tags/shell/</link><description>Recent content in shell on 空树之空</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 23 Apr 2022 09:58:14 +0800</lastBuildDate><atom:link href="https://yezihack.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 安装 zsh 和 oh-my-zsh</title><link>https://yezihack.github.io/posts/zsh/</link><pubDate>Sat, 23 Apr 2022 09:58:14 +0800</pubDate><guid>https://yezihack.github.io/posts/zsh/</guid><description>.1. 介绍 .2. 安装 ZSH .3. 安装 oh-my-zsh .4. 设置主题 .5. 一键安装 zsh + oh-my-zsh .6. 推荐一个华丽主题 .1. 介绍 Zsh 是 Shell 脚本的天花板，个人觉得目前没有之一。华丽的外衣，丰富的内含，让你的终端操作如行云流水一般，好不快活，何不尝试一下 Oh-my-zsh。
.2. 安装 ZSH Zsh 全称 Z-shell，是一款用于交互式使用的shell，也可以作为脚本解释器来使用。其包含了 bash，ksh，tcsh 等其他shell中许多优秀功能，也拥有诸多自身特色。
# CentOS sudo yum -y install zsh # Ubuntu sudo apt-get -y install zsh # 查看系统支持哪些 shell cat /etc/shells # 设置默认shell chsh -s /bin/zsh # 查看当前默认shell echo $SHELL .3. 安装 oh-my-zsh # 官网下载 sh -c &amp;#34;$(curl -fsSL https://raw.</description></item><item><title>Docker Enter 进入容器脚本</title><link>https://yezihack.github.io/posts/sh-docker-enter/</link><pubDate>Fri, 06 Nov 2020 11:26:24 +0800</pubDate><guid>https://yezihack.github.io/posts/sh-docker-enter/</guid><description>快捷进入容器内部命令.只需要填写容器ID即可. enter containerID
脚本 创建 /usr/bin/enter文件
touch /usr/bin/enter &amp;amp;&amp;amp; chmod +x /usr/bin/enter enter 文件内容
#!/bin/sh if [ -e $(dirname &amp;#34;$0&amp;#34;)/nsenter ]; then # with boot2docker, nsenter is not in the PATH but it is in the same folder NSENTER=$(dirname &amp;#34;$0&amp;#34;)/nsenter else NSENTER=nsenter fi if [ -z &amp;#34;$1&amp;#34; ]; then echo &amp;#34;Usage: `basename &amp;#34;$0&amp;#34;` CONTAINER [COMMAND [ARG]...]&amp;#34; echo &amp;#34;&amp;#34; echo &amp;#34;Enters the Docker CONTAINER and executes the specified COMMAND.&amp;#34; echo &amp;#34;If COMMAND is not specified, runs an interactive shell in CONTAINER.</description></item><item><title>mysqld_export 一键安装</title><link>https://yezihack.github.io/posts/onekey-mysqld-exporter/</link><pubDate>Thu, 22 Oct 2020 14:32:37 +0800</pubDate><guid>https://yezihack.github.io/posts/onekey-mysqld-exporter/</guid><description>仅适用 CentOS 7
mysqld_export 安装 prometheus 监听 mysql 服务
一键安装
curl -sSL http://s1.sgfoot.com/sh/mysql_exporter.sh | sudo bash 验证 # 验证进程是否启动 netstat -nplt |grep mysqld_exporter # 验证是否可以获取 metrics curl http://localhost:9104/metrics 配置nginx安全访问 如果涉及到外网访问则需要配置密码访问
参考：nginx 添加权限验证
htpasswd -bc /etc/nginx/htpasswd.users sgfoot sgfoot.pass # sgfoot 是帐号名 # sgfoot.pass 是密码 nginx 的vhost配置 mysqld_exporter.conf
server { listen 80; server_name mysqld_exporter.io; location / { auth_basic &amp;#34;Prometheus&amp;#34;; auth_basic_user_file /etc/nginx/htpasswd.users;# 验证文件 proxy_pass http://127.0.0.1:9104; } } 添加 prometheus 节点 配置 host</description></item><item><title>node_export 一键安装</title><link>https://yezihack.github.io/posts/onekey-node_export/</link><pubDate>Thu, 15 Oct 2020 16:49:55 +0800</pubDate><guid>https://yezihack.github.io/posts/onekey-node_export/</guid><description>仅适合用 CentOS 7
node_export 安装 linux 服务器信息等资源收集安装包
一键安装
curl -sSL http://s1.sgfoot.com/sh/node_exporter.sh |sh 验证 netstat -nplt |grep node_exporter 配置nginx安全访问 如果涉及到外网访问则需要配置密码访问
参考：nginx 添加权限验证
htpasswd -bc /etc/nginx/htpasswd.users sgfoot sgfoot.pass # sgfoot 是帐号名 # sgfoot.pass 是密码 nginx 的vhost配置 node_exporter.conf
server { listen 80; server_name node_exporter.io; location / { auth_basic &amp;#34;Prometheus&amp;#34;; auth_basic_user_file /etc/nginx/htpasswd.users;# 验证文件 proxy_pass http://127.0.0.1:9100; } } 添加 prometheus 节点 配置 host
vim /etc/hosts 127.0.0.1 mysqld_exporter.io vim /data/local/prometheus/prometheus.yml 在 node_exporter.targets 添加 host:port
scrape_configs: - job_name: &amp;#39;node_exporter&amp;#39; static_configs: - targets: [&amp;#39;sgfoot.</description></item><item><title>Shell运算符</title><link>https://yezihack.github.io/posts/shell/</link><pubDate>Thu, 04 Jun 2020 11:03:14 +0800</pubDate><guid>https://yezihack.github.io/posts/shell/</guid><description>运算符 算术运算符 八种运算符号 +, -, *, /, %, =, ==, !=
采用此表达式: `expr $a + $b` 计算加法, 其它类似
数字判断相等: [ $a == $b ] 数字判断不相等: [ $a != $b ] 乘号比较特殊: val=`expr $a \* $b` 需要加\才能运算
不使用expr, 可以使用$((表达式))代替
例: a=10
b=20
val=`expr $a + $b`
echo &amp;#34;a + b : $val&amp;#34; 关系运算符 关系运算符只支持数字, 不支持字符串,除非字符串是数字
六种运算符号
-eq 判断左边等于右边
-ne 判断左边不相等右边
-gt 判断左边大于右边
-lt 判断左边小于右边
-ge 判断左边大于等于右边
-le 判断左边小于等于右边
例: a=10
b=20
if [ $a -eq $b ]; then
echo &amp;#34;a与b相等&amp;#34;
else
echo &amp;#34;a与b不相等&amp;#34;
fi 布尔运算符 共三种符号: !</description></item></channel></rss>