<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>脚本 on 空树之空</title><link>https://yezihack.github.io/tags/%E8%84%9A%E6%9C%AC/</link><description>Recent content in 脚本 on 空树之空</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 06 Dec 2022 16:46:57 +0800</lastBuildDate><atom:link href="https://yezihack.github.io/tags/%E8%84%9A%E6%9C%AC/index.xml" rel="self" type="application/rss+xml"/><item><title>云运维笔记(6) k1s 工具使用教程</title><link>https://yezihack.github.io/posts/k1s/</link><pubDate>Tue, 06 Dec 2022 16:46:57 +0800</pubDate><guid>https://yezihack.github.io/posts/k1s/</guid><description>.1. k1s 是 kubectl 辅助工具 .2. 什么是 k1s .3. k1s 特色 .4. 安装 .5. 快速上手 .6. 功能 .6.1. Resources 列表( kubectl 系统对应) .6.2. Resources 列表(扩展功能) .6.3. Action 列表 .6.4. Extend 扩展功能 .6.5. 环境变量 .7. 使用说明 .7.1. 设置环境变量 .7.2. 日志查看 .7.3. 进入容器 .7.4. 资源操作 .7.4.1. nodes 资源 .7.4.2. pods 资源 .7.4.3. deployments 资源 .7.4.4. daemonsets 资源 .7.4.5. services 资源 .7.4.6. 清理垃圾 .8. 关于作者 .1. k1s 是 kubectl 辅助工具 so easy, so fast.</description></item><item><title>Docker笔记(七) 安装 Redis</title><link>https://yezihack.github.io/posts/docker-redis/</link><pubDate>Tue, 23 Mar 2021 11:49:46 +0800</pubDate><guid>https://yezihack.github.io/posts/docker-redis/</guid><description>下载镜像 docker search redis docker pull redis # 下载最新的 redis 安装脚本 #!/bin/bash ################ # DOCKER 创建 Redis 实例 # ################ name=$1 # Docker 名称 home=$2 # 安装目录 port=6379 # 端口号 host=&amp;#34;0.0.0.0&amp;#34; # 绑定HOST password=&amp;#34;123456&amp;#34; # 密码 # docker 名称必须输入 if test -z $name; then echo &amp;#34;docker name is null&amp;#34; exit 0 fi # 未设置安装目录则默认 /data/docker if test -z $home;then home=/data/docker/ fi # redis 存储目录 redis_home=&amp;#34;${home}redis/&amp;#34; # 持久化存储目录 append_home=&amp;#34;${redis_home}data/&amp;#34; # 配置存储目录 conf_home=&amp;#34;${redis_home}conf/&amp;#34; # 配置文件名 conf_filename=&amp;#34;${conf_home}redis.</description></item><item><title>Systemd 管理 Golang 进程</title><link>https://yezihack.github.io/posts/systemd-golang/</link><pubDate>Mon, 15 Mar 2021 20:13:44 +0800</pubDate><guid>https://yezihack.github.io/posts/systemd-golang/</guid><description>systemd 脚本 #!/bin/bash project_name=&amp;#34;mygo&amp;#34; project_path=&amp;#34;/data/backend/&amp;#34; exec_path=&amp;#34;${project_path}${project_name}&amp;#34; cat &amp;gt; /lib/systemd/system/${project_name}.service &amp;lt;&amp;lt; EOF [Unit] Description=mygo systemd Documentation=https://yezihack.github.io After=network.target [Service] Type=simple User=root # 启动命令 ExecStart=${exec_path} # 重启命令 ExecReload=/bin/kill -SIGINT # 环境变量 Environment=&amp;#34;SGFOOT_ENV=pro&amp;#34; Environment=&amp;#34;SGFOOT_PATH=/data/conf&amp;#34; KillMode=process Restart=on-failure RestartSec=3s [Install] WantedBy=multi-user.targe EOF 管理 systemctl daemon-reload # 更新配置 systemctl start mygo # 启动 systemctl stop mygo # 停止 systemctl restart mygo # 重启 systemctl enable mygo # 加入开机启动 关于我 我的博客：https://yezihack.github.io
欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~</description></item><item><title>Docker Enter 进入容器脚本</title><link>https://yezihack.github.io/posts/sh-docker-enter/</link><pubDate>Fri, 06 Nov 2020 11:26:24 +0800</pubDate><guid>https://yezihack.github.io/posts/sh-docker-enter/</guid><description>快捷进入容器内部命令.只需要填写容器ID即可. enter containerID
脚本 创建 /usr/bin/enter文件
touch /usr/bin/enter &amp;amp;&amp;amp; chmod +x /usr/bin/enter enter 文件内容
#!/bin/sh if [ -e $(dirname &amp;#34;$0&amp;#34;)/nsenter ]; then # with boot2docker, nsenter is not in the PATH but it is in the same folder NSENTER=$(dirname &amp;#34;$0&amp;#34;)/nsenter else NSENTER=nsenter fi if [ -z &amp;#34;$1&amp;#34; ]; then echo &amp;#34;Usage: `basename &amp;#34;$0&amp;#34;` CONTAINER [COMMAND [ARG]...]&amp;#34; echo &amp;#34;&amp;#34; echo &amp;#34;Enters the Docker CONTAINER and executes the specified COMMAND.&amp;#34; echo &amp;#34;If COMMAND is not specified, runs an interactive shell in CONTAINER.</description></item><item><title>mysqld_export 一键安装</title><link>https://yezihack.github.io/posts/onekey-mysqld-exporter/</link><pubDate>Thu, 22 Oct 2020 14:32:37 +0800</pubDate><guid>https://yezihack.github.io/posts/onekey-mysqld-exporter/</guid><description>仅适用 CentOS 7
mysqld_export 安装 prometheus 监听 mysql 服务
一键安装
curl -sSL http://s1.sgfoot.com/sh/mysql_exporter.sh | sudo bash 验证 # 验证进程是否启动 netstat -nplt |grep mysqld_exporter # 验证是否可以获取 metrics curl http://localhost:9104/metrics 配置nginx安全访问 如果涉及到外网访问则需要配置密码访问
参考：nginx 添加权限验证
htpasswd -bc /etc/nginx/htpasswd.users sgfoot sgfoot.pass # sgfoot 是帐号名 # sgfoot.pass 是密码 nginx 的vhost配置 mysqld_exporter.conf
server { listen 80; server_name mysqld_exporter.io; location / { auth_basic &amp;#34;Prometheus&amp;#34;; auth_basic_user_file /etc/nginx/htpasswd.users;# 验证文件 proxy_pass http://127.0.0.1:9104; } } 添加 prometheus 节点 配置 host</description></item><item><title>node_export 一键安装</title><link>https://yezihack.github.io/posts/onekey-node_export/</link><pubDate>Thu, 15 Oct 2020 16:49:55 +0800</pubDate><guid>https://yezihack.github.io/posts/onekey-node_export/</guid><description>仅适合用 CentOS 7
node_export 安装 linux 服务器信息等资源收集安装包
一键安装
curl -sSL http://s1.sgfoot.com/sh/node_exporter.sh |sh 验证 netstat -nplt |grep node_exporter 配置nginx安全访问 如果涉及到外网访问则需要配置密码访问
参考：nginx 添加权限验证
htpasswd -bc /etc/nginx/htpasswd.users sgfoot sgfoot.pass # sgfoot 是帐号名 # sgfoot.pass 是密码 nginx 的vhost配置 node_exporter.conf
server { listen 80; server_name node_exporter.io; location / { auth_basic &amp;#34;Prometheus&amp;#34;; auth_basic_user_file /etc/nginx/htpasswd.users;# 验证文件 proxy_pass http://127.0.0.1:9100; } } 添加 prometheus 节点 配置 host
vim /etc/hosts 127.0.0.1 mysqld_exporter.io vim /data/local/prometheus/prometheus.yml 在 node_exporter.targets 添加 host:port
scrape_configs: - job_name: &amp;#39;node_exporter&amp;#39; static_configs: - targets: [&amp;#39;sgfoot.</description></item></channel></rss>