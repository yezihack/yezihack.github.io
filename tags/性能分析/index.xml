<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>性能分析 on 空樹之空的博客</title><link>/tags/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.html</link><description>Recent content in 性能分析 on 空樹之空的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&lt;a href='https://www.sgfoot.com'>空樹之空&lt;/a></copyright><lastBuildDate>Wed, 01 Jul 2020 19:06:01 +0800</lastBuildDate><atom:link href="/tags/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>zerolog 占大量内存剖析</title><link>/optimize-zerolog.html</link><pubDate>Wed, 01 Jul 2020 19:06:01 +0800</pubDate><guid>/optimize-zerolog.html</guid><description>分析过程 使用 pprof top分析 可见 json.Marshal占第一内存. 为什么呢? 我们进一步分析 使用 tree 分析 查看到 zerolog AppendInterface 方法占用 73.32%的内存量. 而</description></item><item><title>Redis 性能分析</title><link>/optimize-redis.html</link><pubDate>Tue, 30 Jun 2020 16:17:44 +0800</pubDate><guid>/optimize-redis.html</guid><description>查看 Clients 属性 1 127.0.0.1:6379&amp;gt;info clients 1 2 3 4 5 # Clients connected_clients:1 # 已连接客户端的数量（不包括通过从属服务器连接的客户端） client_recent_max_input_buffer:2 # 当前连接的客户端当中，最长的输出列表 client_recent_max_output_buffer:0 # 当前连接</description></item><item><title>Top</title><link>/top.html</link><pubDate>Mon, 22 Jun 2020 10:21:47 +0800</pubDate><guid>/top.html</guid><description>top 是 linux 最常用的命令, 包括很多少直观的信息, 有利于我们对系统运行状态的把握. top 使用 top 系统自带命令,可以直接使用. 1 top top 详情 a. 如图编号(1) 1 top</description></item><item><title>MySQL 性能优化</title><link>/mysql-optimize.html</link><pubDate>Fri, 19 Jun 2020 20:23:17 +0800</pubDate><guid>/mysql-optimize.html</guid><description>MySQL 并发参数调整 max_connections 参数 该参数设置mysql连接最大数量. max_connections 默认151个连接. 1 show variables like &amp;#39;max_connections&amp;#39; 服务器性能优时可以调节这个参数, 范围: 500~1000 注 当连接过大时,</description></item><item><title>MySQL 性能分析</title><link>/mysql-analysis.html</link><pubDate>Fri, 19 Jun 2020 19:13:48 +0800</pubDate><guid>/mysql-analysis.html</guid><description>MySQL 运行的状态 重点关注以下参数 1 2 3 4 show status like &amp;#39;Queries&amp;#39;; show status like &amp;#39;Threads_connected&amp;#39;; show status like &amp;#39;Threads_running&amp;#39;; show status like &amp;#39;Connection_errors_max_connections&amp;#39;; MySQL 运行线程 1 show processlist 开启慢查询日志 一、参数查询 slow_query_log 开启慢查询 1 2 3 4 5 6 7 8 mysql&amp;gt;</description></item><item><title>pprof火焰图性能分析利器之入门</title><link>/pprof.html</link><pubDate>Fri, 05 Jun 2020 19:16:31 +0800</pubDate><guid>/pprof.html</guid><description>前言 如果你的应用是一直运行的，比如 web 应用，那么可以使用 net/http/pprof 库，它能够在提供 HTTP 服务进行分析。而非一直运行的程序可以使用 runtime/pprof 库 可以先看下pprof入</description></item></channel></rss>