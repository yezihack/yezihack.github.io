<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 空樹之空的博客</title><link>/post.html</link><description>Recent content in Posts on 空樹之空的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&lt;a href='https://www.sgfoot.com'>空樹之空&lt;/a></copyright><lastBuildDate>Mon, 25 Apr 2022 09:58:14 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux DNS 略解</title><link>/dns.html</link><pubDate>Mon, 25 Apr 2022 09:58:14 +0800</pubDate><guid>/dns.html</guid><description>DNS 域名系统 DNS 全称：Domain Name System 域名系统相当于一个“翻译官”，将域名翻译成对应的IP地址，然后再请求目标IP。 Linux 设置 DNS /etc/resolv 设置DNS无须重新</description></item><item><title>Linux 安装 zsh 和 oh-my-zsh</title><link>/zsh.html</link><pubDate>Sat, 23 Apr 2022 09:58:14 +0800</pubDate><guid>/zsh.html</guid><description>.1. 介绍 .2. 安装 ZSH .3. 安装 oh-my-zsh .4. 设置主题 .5. 一键安装 zsh + oh-my-zsh .6. 推荐一个华丽主题 .1. 介绍 Zsh 是 Shell 脚本的天花板，个人觉得目前没有之一。华丽的外衣，丰富的内含，让</description></item><item><title>Docker busybox 镜像工具</title><link>/docker-tools.html</link><pubDate>Thu, 31 Mar 2022 14:20:11 +0800</pubDate><guid>/docker-tools.html</guid><description>busybox progrium/busybox Alpine Alpine 替换国内源 Dockerfile 升级&amp;amp;安装软件 busybox 本身集成了300多个常用工具命令. 用于日常开发,维护.也是体积比较小. 但是 busybox 本身不支持 curl,</description></item><item><title>查看 Linux 系统资源</title><link>/linux-system-info.html</link><pubDate>Thu, 17 Feb 2022 15:36:03 +0800</pubDate><guid>/linux-system-info.html</guid><description>1. 系统 1 2 3 4 5 6 uname -a # 查看系统版本全部信息 uname -r # 查看内核版本 hostname # 查看主机名称 cat /etc/redhat-release # 打印系统类型，只对红帽系统有用, 如 CentOS env # 显示环境变量 lspci #</description></item><item><title>算法入门(一) 基础概念</title><link>/algo-01.html</link><pubDate>Mon, 17 Jan 2022 22:47:10 +0800</pubDate><guid>/algo-01.html</guid><description>.1. 数据结构与算法 .2. 基本概念与术语 .2.1. 数据 .2.2. 数据元素 .2.3. 数据项 .2.4. 数据对象 .2.5. 总结 .3. 逻辑结构与物理结构 .3.1. 逻辑结构 .3.2. 物理结构 .3.3. 总结 .4. 算法 .4.1. 算法的特征 .4.2. 算</description></item><item><title>优质软件 SOFT</title><link>/soft-awesome.html</link><pubDate>Fri, 14 Jan 2022 13:40:23 +0800</pubDate><guid>/soft-awesome.html</guid><description>优质软件，一枝独秀，供提参考。 开发软件 官网 使用参考 平台 描述 Tabby 介绍 macOS(M1),Linux,Windows SSH客户端 PicGo 文档 macOS(M1),Linux,Windows 图床工具 日常软件 官网 使用参考 平台 描述 Free Download Manager 特色 MacOS(M1),Linux,Windows,Android 下载工</description></item><item><title>Git Ignore 常用文件</title><link>/gitignore.html</link><pubDate>Fri, 14 Jan 2022 10:05:18 +0800</pubDate><guid>/gitignore.html</guid><description>在开发中，代码管理常用 git，做为优秀的分布式代码管理工具，有着优秀的设计， 其中一项就是 .gitignore 的功能。主要用于忽略某此文件或敏感文件，以防 泄漏。</description></item><item><title>Harbor 安装（TLS）</title><link>/harbor-install.html</link><pubDate>Sat, 01 Jan 2022 23:00:33 +0800</pubDate><guid>/harbor-install.html</guid><description>.1. 前提准备 .2. 安装 Docker 和 Docker-Compose .3. 离线安装之非安全模式 .3.1. 下载安装软件 .3.2. 编辑配置文件 .3.3. 运行安装脚本 .3.4. 查看验证 .3.5. 登陆 Harbor 管理页面 .3.6. Docker 配置 .3.7. Docker 登陆 harbor .3.8. 测试上传</description></item><item><title>第十二章 Minikube 安装</title><link>/k8s-minikube.html</link><pubDate>Tue, 28 Dec 2021 17:39:06 +0800</pubDate><guid>/k8s-minikube.html</guid><description>Minikube 安装 仅用于开产使用，生产不能使用。 以下仅以 macOS 系统演示 1.1 Docker 安装 官方下载，直接安装即可。 https://docs.docker.com/desktop/mac/install/ 使用国内镜像源，推荐阿里云的。 参考：https://</description></item><item><title>Kubernetes 总纲及脑图</title><link>/k8s-mindmap.html</link><pubDate>Tue, 09 Nov 2021 18:42:18 +0800</pubDate><guid>/k8s-mindmap.html</guid><description>kubernetes 导航目录 第一章 kubernetes 介绍 第二章 Kubernetes 安装 第三章 Kubernetes 资源管理 第四章 Kubernetes 实战操作 第五章 Kubernetes Pod 介绍 第六章 Kubernetes Pod 控制器 第七章 Kubernetes Service 介绍 第八章 Kubernetes Ingress 介绍 第九章 Kubernetes 数据存储</description></item><item><title>第十一章 Kubernetes Dashboard</title><link>/k8s-dashboard.html</link><pubDate>Thu, 28 Oct 2021 18:18:16 +0800</pubDate><guid>/k8s-dashboard.html</guid><description>本章节主要介绍 kubernetes 的 Dashboard。 找不到目录, 传送门：Kubernetes 总纲及脑图 下载yaml，并运行Dashboard 1 2 3 4 5 6 7</description></item><item><title>第十章 Kubernetes 权限认证</title><link>/k8s-permission.html</link><pubDate>Thu, 28 Oct 2021 18:18:07 +0800</pubDate><guid>/k8s-permission.html</guid><description>本章节主要介绍Kubernetes的安全认证机制。 找不到目录, 传送门：Kubernetes 总纲及脑图 访问控制概述 ​ Kubernetes作为一</description></item><item><title>第九章 Kubernetes 数据存储</title><link>/k8s-storage.html</link><pubDate>Thu, 28 Oct 2021 18:08:54 +0800</pubDate><guid>/k8s-storage.html</guid><description>本章节主要介绍kubernetes的数据存储。 在前面已经提到，容器的生命周期可能很短，会被频繁地创建和销毁。那么容器在销毁时，保存在容器中的</description></item><item><title>第八章 Kubernetes Ingress 介绍</title><link>/k8s-ingress.html</link><pubDate>Thu, 28 Oct 2021 17:58:04 +0800</pubDate><guid>/k8s-ingress.html</guid><description>本章节主要介绍kubernetes的流量负载组件：Ingress。 找不到目录, 传送门：Kubernetes 总纲及脑图 在前面课程中已经提到，S</description></item><item><title>第七章 Kubernetes Service 介绍</title><link>/k8s-service.html</link><pubDate>Thu, 28 Oct 2021 17:54:44 +0800</pubDate><guid>/k8s-service.html</guid><description>本章节主要介绍kubernetes的流量负载组件：Service。 Service介绍 ​ 在kubernetes中，pod是应用程序的载体，我们</description></item><item><title>第六章 Kubernetes Pod 控制器</title><link>/k8s-pod-controller.html</link><pubDate>Thu, 28 Oct 2021 17:45:21 +0800</pubDate><guid>/k8s-pod-controller.html</guid><description>本章节主要介绍各种Pod控制器的详细使用。 Pod控制器介绍 Pod是kubernetes的最小管理单元，在kubernetes中，按照pod的</description></item><item><title>第五章 Kubernetes Pod 介绍</title><link>/k8s-pod.html</link><pubDate>Thu, 28 Oct 2021 16:37:55 +0800</pubDate><guid>/k8s-pod.html</guid><description>本章节将详细介绍Pod资源的各种配置（yaml）和原理。 Pod结构 每个Pod中都可以包含一个或者多个容器，这些容器可以分为两类： 用户程序所在</description></item><item><title>第四章 Kubernetes 实战操作</title><link>/k8s-operation.html</link><pubDate>Thu, 28 Oct 2021 16:33:37 +0800</pubDate><guid>/k8s-operation.html</guid><description>本章节将介绍如何在kubernetes集群中部署一个nginx服务，并且能够对其进行访问。 找不到目录, 传送门：Kubernetes 总纲及脑图</description></item><item><title>第三章 Kubernetes 资源管理</title><link>/k8s-resource.html</link><pubDate>Thu, 28 Oct 2021 16:19:54 +0800</pubDate><guid>/k8s-resource.html</guid><description>本章节主要介绍yaml语法和kubernetes的资源管理方式 资源管理介绍 在kubernetes中，所有的内容都抽象为资源，用户需要通过操作</description></item><item><title>第二章 Kubernetes 安装</title><link>/k8s-install.html</link><pubDate>Thu, 28 Oct 2021 15:24:42 +0800</pubDate><guid>/k8s-install.html</guid><description>kubectl 安装 kind 安装 创建一个集群 查看集群 删除集群 kubernetes 安装比较复杂，用于学习可以搭建单机集群安装。 推荐使用 linux 系统安装实验。 找不到目录, 传送门：Kuber</description></item><item><title>第一章 kubernetes 介绍</title><link>/k8s-intro.html</link><pubDate>Thu, 28 Oct 2021 14:57:31 +0800</pubDate><guid>/k8s-intro.html</guid><description>应用部署方式演变 kubernetes简介 kubernetes组件 kubernetes概念 参考 本章节主要介绍应用程序在服务器上部署方式演变以及</description></item><item><title>如何搭建博客</title><link>/how-blog.html</link><pubDate>Thu, 21 Oct 2021 11:02:22 +0800</pubDate><guid>/how-blog.html</guid><description>关于作者 我的博客：https://www.sgfoot.com 欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~</description></item><item><title>Awesome Go</title><link>/awesome-go.html</link><pubDate>Tue, 28 Sep 2021 20:35:09 +0800</pubDate><guid>/awesome-go.html</guid><description>收录极好的Golang库及框架，也是本人使用过，认为不错的。分享给大家。 框架类 名称 网址 Gin Web 框架 https://github.com/gin-gonic/gin Colly 爬虫框架 https://github.com/gocolly/colly 工具类 名称 网址 Gjson 动态获取JSON</description></item><item><title>Prometheus: Grafana 监控 Node Exporter 主机</title><link>/node-exporter.html</link><pubDate>Fri, 24 Sep 2021 17:05:06 +0800</pubDate><guid>/node-exporter.html</guid><description>node_exporter 安装 监控远程 linux 服务器CPU、内存、磁盘、I/O等信息 下载慢，请查看软件下载列表 https://prometheus.io/download/ 1 2 3 4 5 6 cd /usr/local/src wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz tar -zxvf node_exporter-1.0.1.linux-amd64.tar.gz -C /usr/local/ cd /usr/local/ mv node_exporter-1.0.1.linux-amd64 node_exporter cd node_exporter 运行 先创建 systemd 服</description></item><item><title>Prometheus: 安装</title><link>/prometheus-install.html</link><pubDate>Fri, 24 Sep 2021 17:04:51 +0800</pubDate><guid>/prometheus-install.html</guid><description>.1. 安装 .1.1. 下载 .1.2. 运行 .1.3. 预览 .1.4. nginx 反向代理 .2. Docker 安装 .3. 关于作者 .1. 安装 .1.1. 下载 prometheus提供二进制,直接解压即可用.由 go 编写 官网下载: https://prometheus.io/download/ Centos 64x 选</description></item><item><title>再述 SOLID 原则</title><link>/again-solid.html</link><pubDate>Thu, 06 May 2021 16:40:10 +0800</pubDate><guid>/again-solid.html</guid><description>再述 SOLID 原则，因为这些原则是设计模式的基石，所有的模式都是基于这些原则展开的。 单一职责原则 经典定义：应该有且仅有一个原因引起”类“的变更。(不</description></item><item><title>Docker 安装 php 环境</title><link>/docker-php.html</link><pubDate>Tue, 06 Apr 2021 11:38:33 +0800</pubDate><guid>/docker-php.html</guid><description>php 环境需要与 nginx 配合安装，共享 nginx 解析的目录(www) 基本参数 -d 后台启动 --name 定义一个别名 -v 挂载目录 --link 链接其它 docker 容器名称 安装 php 即安装 php-fpm 环境 docker search php 1 docker</description></item><item><title>Docker笔记(七) 安装 Redis</title><link>/docker-redis.html</link><pubDate>Tue, 23 Mar 2021 11:49:46 +0800</pubDate><guid>/docker-redis.html</guid><description>下载镜像 1 2 docker search redis docker pull redis # 下载最新的 redis 安装脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</description></item><item><title>Systemd 管理 Golang 进程</title><link>/systemd-golang.html</link><pubDate>Mon, 15 Mar 2021 20:13:44 +0800</pubDate><guid>/systemd-golang.html</guid><description>systemd 脚本 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 #!/bin/bash project_name=&amp;#34;mygo&amp;#34; project_path=&amp;#34;/data/backend/&amp;#34; exec_path=&amp;#34;${project_path}${project_name}&amp;#34; cat &amp;gt; /lib/systemd/system/${project_name}.service &amp;lt;&amp;lt; EOF [Unit] Description=mygo systemd Documentation=https://www.sgfoot.com After=network.target [Service] Type=simple User=root # 启动命令 ExecStart=${exec_path} # 重启命令 ExecReload=/bin/kill -SIGINT # 环境变量 Environment=&amp;#34;SGFOOT_ENV=pro&amp;#34;</description></item><item><title>linux 忘记密码</title><link>/linux-forget-password.html</link><pubDate>Wed, 03 Mar 2021 15:57:12 +0800</pubDate><guid>/linux-forget-password.html</guid><description>启动 使用上下键选择不同的内核（可能有些机器就只有一个内核） 选中内核后，按e 键进入编辑状态 编辑 以下内容都是可以编辑，添加或删除的代码。（谨慎操</description></item><item><title>设计模式-设计原则与思想总结(二十)</title><link>/gof-think-summary.html</link><pubDate>Fri, 26 Feb 2021 21:12:54 +0800</pubDate><guid>/gof-think-summary.html</guid><description>编写高质量代码 代码质量评判标准 面向对象 设计原则 规范与重构 以上脑图来自极客时间 关于我 我的博客：https://www.sgfoot.com 欢迎</description></item><item><title>Iptables 防火墙基础操作(一)</title><link>/iptables.html</link><pubDate>Tue, 23 Feb 2021 11:53:51 +0800</pubDate><guid>/iptables.html</guid><description>基于 linxu centos 7 查看防火墙 iptables 命令大小写敏感 1 iptables -nL 添加一条规则 添加一条开放 9090 端口的规则 1 2 3 4 5 6 7 8 # 插入最前面 iptables -I INPUT -p tcp --dport 9090 -j ACCEPT # 追加最后面 iptables -A</description></item><item><title>设计模式-重构-15条编程规范(十九)</title><link>/gof-refactor-4.html</link><pubDate>Mon, 22 Feb 2021 19:48:31 +0800</pubDate><guid>/gof-refactor-4.html</guid><description>为什么要编程规范 构建一个大型项目，往往是很多人一起参与，堆砌的代码行数都是成千上万行。如何保证代码的健壮性？编程规范必不可少。 命名 命名能力体</description></item><item><title>设计模式-重构-解耦(十八)</title><link>/gof-refactor-3.html</link><pubDate>Sat, 20 Feb 2021 21:22:55 +0800</pubDate><guid>/gof-refactor-3.html</guid><description>解耦为何如此重要 解耦是保证代码的松耦合，高内聚。防止代码质量腐化到不可救药地步的有效手段。 代码”高内聚，松耦合“也就意味着，代码结构清晰，分</description></item><item><title>设计模式-重构-单元测试(十七)</title><link>/gof-refactor-2.html</link><pubDate>Fri, 19 Feb 2021 21:06:22 +0800</pubDate><guid>/gof-refactor-2.html</guid><description>什么是单元测试 单元测试是代码层面的测试，由研发自己来编写，用于测试“自己”编写的代码逻辑的正确性。 单元测试主要测试范围： 类 函数 单元测试有别于</description></item><item><title>设计模式-重构(十六)</title><link>/gof-refactor-1.html</link><pubDate>Thu, 18 Feb 2021 19:48:20 +0800</pubDate><guid>/gof-refactor-1.html</guid><description>纲要 3W1H why 为什么重构 what 重构什么 when 什么时候重构 how 如何重构 重构的定义 软件设计大师 Martin Fowler 这样定义重构： “重构是一种对软件内部结构的改善，目的是在不改变</description></item><item><title>小狗钱钱</title><link>/puppy-money.html</link><pubDate>Sat, 13 Feb 2021 21:50:42 +0800</pubDate><guid>/puppy-money.html</guid><description>《小狗钱钱》是一本让孩子和家长共同成长的金钱童话，非常有趣，故事性很强，也很容易读。 本书的副标题：从此拥有财富，开启富足快乐的人生。 大纲 正视</description></item><item><title>设计模式-通用系统开发(十五)</title><link>/gof-common-dev.html</link><pubDate>Wed, 10 Feb 2021 17:37:59 +0800</pubDate><guid>/gof-common-dev.html</guid><description>针对非业务通用框架开发，需要做到尽量通用，适合百变的场景，做到良好的扩展。 需求分析 功能性需求分析 满足使用者的需求，尽量通用。 借助设计产品线框</description></item><item><title>设计模式-业务系统开发(十四)</title><link>/gof-business-dev.html</link><pubDate>Wed, 10 Feb 2021 15:13:23 +0800</pubDate><guid>/gof-business-dev.html</guid><description>纲要 完整的系统流程包括： 前期的需求沟通分析 中期的代码设计实现 后期的系统上线维护 需求分析 做为技术人员不仅仅是等着产品设计文档，线框图，照着实现</description></item><item><title>Proxy</title><link>/proxy.html</link><pubDate>Tue, 09 Feb 2021 10:51:23 +0800</pubDate><guid>/proxy.html</guid><description>设置GIT代理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 查看当前代理设置 git config --global http.proxy git config --global https.proxy // 设置当前代理为 http://127.0.0.1:1080 或 socket5://127.0.0.1:1080 git config --global http.proxy &amp;#39;http://127.0.0.1:1080&amp;#39; git config --global https.proxy &amp;#39;http://127.0.0.1:1080&amp;#39; git config --global http.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; git config --global https.proxy &amp;#39;socks5://127.0.0.1:1080&amp;#39; //</description></item><item><title>设计模式-KISS,YAGNI,DRY,LOD 原则(十三)</title><link>/gof-principle-other.html</link><pubDate>Mon, 08 Feb 2021 12:21:28 +0800</pubDate><guid>/gof-principle-other.html</guid><description>纲要 KISS原则 Keep It Simple and Stupid 尽量保持简单 代码行数越少就越“简单”吗？ 答案是否定的，实现逻辑需要简单，易维护，不过度优化 代码逻辑复杂就违背 Kiss 原则</description></item><item><title>设计模式-控制反转IOC.Go实例(十二)</title><link>/gof-ioc-code.html</link><pubDate>Mon, 08 Feb 2021 11:23:01 +0800</pubDate><guid>/gof-ioc-code.html</guid><description>控制反转(IOC) Inversion Of Control “控制”是指对程序执行流程的控制 ”反转“ 指没有使用框架之前，程序员自己控制整个程序的执行。在使用框架之后，整个程序的</description></item><item><title>设计模式-依赖注入DI.Go实例(十一)</title><link>/gof-di-code.html</link><pubDate>Mon, 08 Feb 2021 11:22:56 +0800</pubDate><guid>/gof-di-code.html</guid><description>依赖注入(DI) Dependency Injection 不通过 new() 的方式在类内部创建依赖类对象，而是将依赖的类对象在外部创建好之后，通过构造函数，函数参数等方式传递（或注入）给类</description></item><item><title>Docker笔记(六) 安装 PHPMyAdmin</title><link>/docker-phpmyadmin.html</link><pubDate>Wed, 03 Feb 2021 14:47:10 +0800</pubDate><guid>/docker-phpmyadmin.html</guid><description>开发项目涉及到 MySQL时就需要MySQL管理工具, phpmyadmin 是一款网页功能强大的免费软件。 安装 MySQL 命令方式： 1 docker run -itd --name dev_mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql docker-compose.yml 方式： 1 2 3 4 5</description></item><item><title>Jenkins 构建及回滚任务</title><link>/jenkins-build-rollback.html</link><pubDate>Wed, 03 Feb 2021 14:47:04 +0800</pubDate><guid>/jenkins-build-rollback.html</guid><description>以 golang 构建项目为例。 新建任务 输入一个任务名称 选择：构建一个自由风格的软件项目 可选：也可以复制已创建的任务 确定提交 配置 再次编辑刚创建的任务 描述 对</description></item><item><title>如何阅读一本书(二)</title><link>/how-to-read-a-book-2.html</link><pubDate>Thu, 28 Jan 2021 10:24:09 +0800</pubDate><guid>/how-to-read-a-book-2.html</guid><description>纲要 基础阅读 从一个孩童的视角切入。共四个阶段，循序渐进。 阅读准备阶段 身体方面的准备 良好的视力和听力。 起码的认知能力。 语言上的准备 口齿清晰。 个</description></item><item><title>如何阅读一本书(一)</title><link>/how-to-read-a-book.html</link><pubDate>Wed, 27 Jan 2021 19:53:05 +0800</pubDate><guid>/how-to-read-a-book.html</guid><description>阅读的艺术 阅读是一件主动的事，而非被动。 阅读的误区 太多的资讯就如同太少的资讯一样, 都是一种对理解力的阻碍. 我们在这个互联网上接触的到的音频,</description></item><item><title>设计模式-SOLID五大原则(十)</title><link>/gof-solid.html</link><pubDate>Mon, 25 Jan 2021 21:03:38 +0800</pubDate><guid>/gof-solid.html</guid><description>[TOC] SOLID原则包括单一职责，开闭原则，里氏替换原则，接口隔离原则，依赖倒置原则。 单一职责原则(SRP) SRP: Single Responsibility Principle A class or module should have a single repons</description></item><item><title>GitHub 徽章制作</title><link>/badge.html</link><pubDate>Fri, 22 Jan 2021 14:23:07 +0800</pubDate><guid>/badge.html</guid><description>很早前写过一篇关于Golang持续集成服务之Travis教程, 今天再写写关于 github 上常见的徽章是如何制作的. 让你的开源项目更高大上, 让你的代码也</description></item><item><title>Go 优雅追踪堆栈错误包</title><link>/go-library-error.html</link><pubDate>Thu, 21 Jan 2021 14:42:08 +0800</pubDate><guid>/go-library-error.html</guid><description>Golang tracks stack error package. 优雅追踪堆栈错误包 安装(Install) 1 go get github.com/yezihack/e 介绍(Introduction) github.com/yezihack/e 项目是一个优雅地追踪你的堆栈信息.方便存储日志里</description></item></channel></rss>