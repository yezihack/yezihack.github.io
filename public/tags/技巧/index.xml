<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技巧 on</title><link>https://yezihack.github.io/tags/%E6%8A%80%E5%B7%A7/</link><description>Recent content in 技巧 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 14 Jan 2022 10:05:18 +0800</lastBuildDate><atom:link href="https://yezihack.github.io/tags/%E6%8A%80%E5%B7%A7/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Ignore 常用文件</title><link>https://yezihack.github.io/posts/gitignore/</link><pubDate>Fri, 14 Jan 2022 10:05:18 +0800</pubDate><guid>https://yezihack.github.io/posts/gitignore/</guid><description>在开发中，代码管理常用 git，做为优秀的分布式代码管理工具，有着优秀的设计， 其中一项就是 .gitignore 的功能。主要用于忽略某此文件或敏感文件，以防 泄漏。
常用的 gitignore tmp .env gohub .DS_Store .history # Golang # ###################### # `go test -c` 生成的二进制文件 *.test # go coverage 工具 *.out *.prof *.cgo1.go *.cgo2.c _cgo_defun.c _cgo_gotypes.go _cgo_export.* # 编译文件 # ################### *.com *.class *.dll *.exe *.o *.so # 压缩包 # ############ # Git 自带压缩,如果这些压缩包里有代码,建议解压后 commit *.7z *.dmg *.gz *.iso *.jar *.rar *.tar *.zip # 日志文件和数据库 # ###################### *.log *.sqlite *.db # 临时文件 # ###################### tmp/ .</description></item><item><title>linux 忘记密码</title><link>https://yezihack.github.io/posts/linux-forget-password/</link><pubDate>Wed, 03 Mar 2021 15:57:12 +0800</pubDate><guid>https://yezihack.github.io/posts/linux-forget-password/</guid><description>启动 使用上下键选择不同的内核（可能有些机器就只有一个内核） 选中内核后，按e 键进入编辑状态 编辑 以下内容都是可以编辑，添加或删除的代码。（谨慎操作） 找到linux16的字符串， 然后再在本行中找到ro的字母，将其替换成rw init=/sysroot/bin/sh 然后按ctrl+x组合键，系统进入emergency(紧急情况)模式 chroot /sysroot/ # 切换回原始系统 LANG=en # 如果出现方块，不是字母的情况下设置成英文语言 passwd root # 对 root 修改密码 touch /.autorelabel # 使SELinux生效，密码生效 exit # 退出 reboot # 重启命令 关于我 我的博客：https://yezihack.github.io
欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~</description></item><item><title>Top</title><link>https://yezihack.github.io/posts/top/</link><pubDate>Mon, 22 Jun 2020 10:21:47 +0800</pubDate><guid>https://yezihack.github.io/posts/top/</guid><description>top 是 linux 最常用的命令, 包括很多少直观的信息, 有利于我们对系统运行状态的把握.
top 使用 top 系统自带命令,可以直接使用.
top top 详情 a. 如图编号(1)
top - 10:34:07 up 16 min, 1 user, load average: 0.00, 0.01, 0.05 10:34:07 当前时间 up 16 min 系统运行时间, 如 16 分钟 1 user 当前登陆用户数 load average: 0.00, 0.01, 0.05 系统负载. 三个数值分别为 1分钟、5分钟、15分钟前到现在的平均值。 b. 如图编号(2)
Tasks: 206 total, 1 running, 205 sleeping, 0 stopped, 0 zombie Tasks: 206 total 进程总数 1 running 正在运行的进程数 205 sleeping 睡眠进程数 0 stopped 停止进程数 0 zombie 僵尸进程数 c.</description></item><item><title>MySQL 性能分析</title><link>https://yezihack.github.io/posts/mysql-analysis/</link><pubDate>Fri, 19 Jun 2020 19:13:48 +0800</pubDate><guid>https://yezihack.github.io/posts/mysql-analysis/</guid><description>MySQL 运行的状态 重点关注以下参数
show status like &amp;#39;Queries&amp;#39;;
show status like &amp;#39;Threads_connected&amp;#39;;
show status like &amp;#39;Threads_running&amp;#39;;
show status like &amp;#39;Connection_errors_max_connections&amp;#39;; MySQL 运行线程 show processlist 开启慢查询日志 一、参数查询
slow_query_log 开启慢查询
mysql&amp;gt; show variables like &amp;#39;%slow_query_log%&amp;#39;; +---------------------+--------------------------------------+ | Variable_name | Value | +---------------------+--------------------------------------+ | slow_query_log | ON | | slow_query_log_file | /var/lib/mysql/7709d56792f9-slow.log | +---------------------+--------------------------------------+ 2 rows in set (0.00 sec) set global slow_query_log=1; slow_query_log_file 慢日志存放位置
set global slow_query_log_file=&amp;#39;/data/logs/slow-mysql.log&amp;#39;; long_query_time 表示1秒的SQL就记录
mysql&amp;gt; show variables like &amp;#39;long_query_time&amp;#39;; +-----------------+-----------+ | Variable_name | Value | +-----------------+-----------+ | long_query_time | 10.</description></item></channel></rss>