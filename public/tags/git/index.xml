<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on</title><link>https://yezihack.github.io/tags/git/</link><description>Recent content in git on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 14 Jan 2022 10:05:18 +0800</lastBuildDate><atom:link href="https://yezihack.github.io/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Ignore 常用文件</title><link>https://yezihack.github.io/posts/gitignore/</link><pubDate>Fri, 14 Jan 2022 10:05:18 +0800</pubDate><guid>https://yezihack.github.io/posts/gitignore/</guid><description>在开发中，代码管理常用 git，做为优秀的分布式代码管理工具，有着优秀的设计， 其中一项就是 .gitignore 的功能。主要用于忽略某此文件或敏感文件，以防 泄漏。
常用的 gitignore tmp .env gohub .DS_Store .history # Golang # ###################### # `go test -c` 生成的二进制文件 *.test # go coverage 工具 *.out *.prof *.cgo1.go *.cgo2.c _cgo_defun.c _cgo_gotypes.go _cgo_export.* # 编译文件 # ################### *.com *.class *.dll *.exe *.o *.so # 压缩包 # ############ # Git 自带压缩,如果这些压缩包里有代码,建议解压后 commit *.7z *.dmg *.gz *.iso *.jar *.rar *.tar *.zip # 日志文件和数据库 # ###################### *.log *.sqlite *.db # 临时文件 # ###################### tmp/ .</description></item><item><title>Git 简明命令</title><link>https://yezihack.github.io/posts/git/</link><pubDate>Fri, 20 Nov 2020 17:10:43 +0800</pubDate><guid>https://yezihack.github.io/posts/git/</guid><description>基本概念 Workspace：工作区 Index / Stage：暂存区 Repository：仓库区（或本地仓库） Remote：远程仓库 初使化 新建仓库 git init 配置 # 显示全部配置 git config --list # 编辑配置 git config -e [--global] # 设置用户和邮箱 git config [--global] user.name &amp;#34;百里&amp;#34; git config [--global] user.email &amp;#34;freeit@126.com&amp;#34; 拉取 克隆仓库 git clone git@github.com:yezihack/barry.git 克隆指定分支 -b 指定分支名 git clone -b master git@github.com:yezihack/barry.git
分支 查看本地分支 git branch
查看所有远程分支 git branch -r
查看所有分支 git branch -a
创建并切换分支 git checkout -b dev
新建一个分支 git branch dev
切换分支 git checkout dev 合并分支 # 当前分支master, 要将dev分支合并到master分支 git checkout master git merge dev 删除分支 git branch -d dev</description></item><item><title>Git Tag 常用命令</title><link>https://yezihack.github.io/posts/git-tag/</link><pubDate>Fri, 30 Oct 2020 16:43:01 +0800</pubDate><guid>https://yezihack.github.io/posts/git-tag/</guid><description>git tag 是给当前仓库设置一个快照,常用于设置版本号, 你有必须知道一下.
查看 git tag # 查看当前项目的tag git show v1.0.0 # 查看某 tag 的详情 创建 git tag v1.0.0 # 给当前项目版本打上 v1.0.0 版本号 # 给指定的提交版本号打上 tag git log --pretty=oneline --abbrev-commit # 查看所有短ID 312bda6 (HEAD -&amp;gt; master) # 给日志 312bda6 打上 tag git tag v1.0.3 312bda6 # 给标签写上注释 git tag -a v1.2.0 -m &amp;#34;tag notes&amp;#34; 提交 git push origin v1.0.0 # 将 v1.0.0 推送到远程 git push --tags # 推送本地的所有的 Tag 删除 git tag -d v1.</description></item></channel></rss>