<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>空樹之空的博客</title><link>/</link><description>Recent content on 空樹之空的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>&lt;a href='https://www.sgfoot.com'>空樹之空&lt;/a></copyright><lastBuildDate>Mon, 25 Apr 2022 09:58:14 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>地图</title><link>/about.html</link><pubDate>Mon, 24 Feb 2020 21:38:52 +0800</pubDate><guid>/about.html</guid><description>&lt;h2 id="激励斗志">激励斗志&lt;/h2>
&lt;p>一日不学 面目可憎&lt;/p>
&lt;p>三日不学 面目全非&lt;/p>
&lt;h2 id="网站推荐">网站推荐&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;th>推荐星&lt;/th>
&lt;th>关注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>书栈网&lt;/td>
&lt;td>&lt;a href="https://www.bookstack.cn">https://www.bookstack.cn&lt;/a>&lt;/td>
&lt;td>✫✫✫✫✫&lt;/td>
&lt;td>教程&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>菜鸟教程&lt;/td>
&lt;td>&lt;a href="https://www.runoob.com/">https://www.runoob.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>教程&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Github&lt;/td>
&lt;td>&lt;a href="https://github.com/">https://github.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫✫&lt;/td>
&lt;td>源码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>老殁软件&lt;/td>
&lt;td>&lt;a href="https://www.mpyit.com/">https://www.mpyit.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>软件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>哔哩哔哩&lt;/td>
&lt;td>&lt;a href="https://www.bilibili.com/">https://www.bilibili.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>视频&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>思否提问&lt;/td>
&lt;td>&lt;a href="https://segmentfault.com/">https://segmentfault.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>提问&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>语雀笔记&lt;/td>
&lt;td>&lt;a href="https://www.yuque.com/">https://www.yuque.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>笔记&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>学酷论坛&lt;/td>
&lt;td>&lt;a href="https://learnku.com/">https://learnku.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>综合论坛&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>掘金&lt;/td>
&lt;td>&lt;a href="https://juejin.im/">https://juejin.im/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>综合论坛&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Go 语言中文网&lt;/td>
&lt;td>&lt;a href="https://studygolang.com/">https://studygolang.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>Go论坛&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>堆栈网&lt;/td>
&lt;td>&lt;a href="https://stackoverflow.com/">https://stackoverflow.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>提问&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Medium&lt;/td>
&lt;td>&lt;a href="https://medium.com/">https://medium.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>技术&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>V2EX&lt;/td>
&lt;td>&lt;a href="https://www.v2ex.com/">https://www.v2ex.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;td>杂论坛&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>掘金github推荐&lt;/td>
&lt;td>&lt;a href="https://e.xitu.io/">https://e.xitu.io/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>github&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>力扣算法&lt;/td>
&lt;td>&lt;a href="https://leetcode-cn.com/">https://leetcode-cn.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫✫&lt;/td>
&lt;td>算法&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>InfoQ&lt;/td>
&lt;td>&lt;a href="https://www.infoq.cn/">https://www.infoq.cn/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;td>技术资讯&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="博客推荐">博客推荐&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;th>推荐星&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>酷壳-耗子叔&lt;/td>
&lt;td>&lt;a href="https://coolshell.cn/">https://coolshell.cn/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>面向信仰&lt;/td>
&lt;td>&lt;a href="https://draveness.me/">https://draveness.me/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>飞雪无情&lt;/td>
&lt;td>&lt;a href="https://www.flysnow.org/">https://www.flysnow.org/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>阮一峰&lt;/td>
&lt;td>&lt;a href="http://www.ruanyifeng.com/">http://www.ruanyifeng.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>美团技术&lt;/td>
&lt;td>&lt;a href="https://tech.meituan.com/">https://tech.meituan.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>峰云&lt;/td>
&lt;td>&lt;a href="http://xiaorui.cc/">http://xiaorui.cc/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PHP鸟哥&lt;/td>
&lt;td>&lt;a href="https://www.laruence.com/">https://www.laruence.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>鸟窝&lt;/td>
&lt;td>&lt;a href="https://colobu.com/">https://colobu.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>淘宝数据库月报&lt;/td>
&lt;td>&lt;a href="http://mysql.taobao.org/monthly/">http://mysql.taobao.org/monthly/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>大俊(GO)&lt;/td>
&lt;td>&lt;a href="https://darjun.github.io/">https://darjun.github.io/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>小林Coding&lt;/td>
&lt;td>&lt;a href="https://www.cnblogs.com/xiaolincoding/">https://www.cnblogs.com/xiaolincoding/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>编程深思录&lt;/td>
&lt;td>&lt;a href="https://www.cyhone.com/">https://www.cyhone.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>编程狂人&lt;/td>
&lt;td>&lt;a href="https://www.tuicool.com/mags">https://www.tuicool.com/mags&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>并发编程网&lt;/td>
&lt;td>&lt;a href="http://ifeve.com/">http://ifeve.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>facebook技术&lt;/td>
&lt;td>&lt;a href="https://engineering.fb.com/">https://engineering.fb.com/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>360技术&lt;/td>
&lt;td>&lt;a href="https://blogs.360.cn/">https://blogs.360.cn/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>小米技术&lt;/td>
&lt;td>&lt;a href="https://xiaomi-info.github.io/">https://xiaomi-info.github.io/&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>linkedin技术&lt;/td>
&lt;td>&lt;a href="https://engineering.linkedin.com/blog">https://engineering.linkedin.com/blog&lt;/a>&lt;/td>
&lt;td>✫✫✫&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="golangother">Golang&amp;amp;Other&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Awesome Go&lt;/td>
&lt;td>&lt;a href="https://sgfoot.com/awesome-go.html">https://sgfoot.com/awesome-go.html&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Awesmoe Go Cn 更全&lt;/td>
&lt;td>&lt;a href="https://github.com/yinggaozhen/awesome-go-cn">https://github.com/yinggaozhen/awesome-go-cn&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Go 周刊&lt;/td>
&lt;td>&lt;a href="https://github.com/polaris1119/golangweekly">https://github.com/polaris1119/golangweekly&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>科技周刊&lt;/td>
&lt;td>&lt;a href="https://github.com/ruanyf/weekly">https://github.com/ruanyf/weekly&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="云原生">云原生&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>CNCF 官网毕业项目&lt;/td>
&lt;td>&lt;a href="https://www.cncf.io/projects/">https://www.cncf.io/projects/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="摄影网">摄影网&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1x 高质量摄影图片网&lt;/td>
&lt;td>&lt;a href="https://1x.com/">https://1x.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>徕卡旗下的作品廊&lt;/td>
&lt;td>&lt;a href="https://lfi-online.de/">https://lfi-online.de/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>知名的500PX&lt;/td>
&lt;td>&lt;a href="https://500px.com/">https://500px.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="工具箱">工具箱&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Markdown =&amp;gt; 微信公众号&lt;/td>
&lt;td>&lt;a href="https://doocs.github.io/md/">https://doocs.github.io/md/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>画图工具&lt;/td>
&lt;td>&lt;a href="https://www.processon.com/">https://www.processon.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>搜索书&lt;/td>
&lt;td>&lt;a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>蓝凑云&lt;/td>
&lt;td>&lt;a href="https://www.lanzou.com/">https://www.lanzou.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>图片压缩&lt;/td>
&lt;td>&lt;a href="https://www.iloveimg.com/zh-cn">https://www.iloveimg.com/zh-cn&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>calibre-ebook&lt;/td>
&lt;td>&lt;a href="https://calibre-ebook.com/">https://calibre-ebook.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="徽章">徽章&lt;/h2>
&lt;blockquote>
&lt;p>Github 生成各种不同的徽章&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>通用徽章&lt;/td>
&lt;td>&lt;a href="https://shields.io/">https://shields.io/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>评价项目质量&lt;/td>
&lt;td>&lt;a href="https://goreportcard.com/">https://goreportcard.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GO生成文档&lt;/td>
&lt;td>&lt;a href="https://pkg.go.dev/,">https://pkg.go.dev/,&lt;/a> &lt;a href="https://go.dev/">https://go.dev/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>自定义讨论&lt;/td>
&lt;td>&lt;a href="https://gitter.im/">https://gitter.im/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>项目测试结果分析&lt;/td>
&lt;td>&lt;a href="https://codecov.io/">https://codecov.io/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>持续集成服务&lt;/td>
&lt;td>&lt;a href="https://travis-ci.org/">https://travis-ci.org/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="番外网">番外网&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>电子书转换器&lt;/td>
&lt;td>&lt;a href="http://cn.epubee.com/">http://cn.epubee.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>配色大师&lt;/td>
&lt;td>&lt;a href="https://peiseka.com/">https://peiseka.com/&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>百宝箱&lt;/td>
&lt;td>&lt;a href="https://yezihack.github.io/">https://yezihack.github.io/&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://img.sgfoot.com/b/20210122112114.png?imageslim" alt="big-white">&lt;/p></description></item><item><title>Linux DNS 略解</title><link>/dns.html</link><pubDate>Mon, 25 Apr 2022 09:58:14 +0800</pubDate><guid>/dns.html</guid><description>&lt;h2 id="dns">DNS&lt;/h2>
&lt;blockquote>
&lt;p>域名系统&lt;/p>
&lt;/blockquote>
&lt;p>DNS 全称：Domain Name System&lt;/p>
&lt;p>域名系统相当于一个“翻译官”，将域名翻译成对应的IP地址，然后再请求目标IP。&lt;/p>
&lt;h2 id="linux-设置-dns">Linux 设置 DNS&lt;/h2>
&lt;blockquote>
&lt;p>/etc/resolv 设置DNS无须重新网络，立即生效。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">cat /etc/resolv.conf
search github.com
options timeout:1 attempts:1 rotate
nameserver 192.168.1.1
nameserver 192.168.1.2
nameserver 192.168.1.3
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="解释">解释&lt;/h3>
&lt;p>nameserver:dns服务器的ip地址。最多能设三个。&lt;/p>
&lt;ul>
&lt;li>timeout:查询一个nameserver的超时时间，单位是秒。系统缺省是5，最大可以设为30。&lt;/li>
&lt;li>attempts:这个是查询的整个都尝试一遍的次数。缺省是2。&lt;/li>
&lt;li>rotate:这个参数的含义是随机选取一个作为首选查询的dns server。系统缺省是从上到下的。&lt;/li>
&lt;/ul>
&lt;h2 id="dns-排障方法">DNS 排障方法&lt;/h2>
&lt;p>经常会出现某域名不通，需要使用 nslookup 工具诊断&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 安装&lt;/span>
yum -y install nslookup
-&amp;gt; % nslookup www.github.com
Server: 114.114.114.114
Address: 114.114.114.114#53
Non-authoritative answer:
www.github.com canonical &lt;span class="nv">name&lt;/span> &lt;span class="o">=&lt;/span> github.com.
Name: github.com
Address: 20.205.243.166
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Linux 安装 zsh 和 oh-my-zsh</title><link>/zsh.html</link><pubDate>Sat, 23 Apr 2022 09:58:14 +0800</pubDate><guid>/zsh.html</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#1-%E4%BB%8B%E7%BB%8D">.1. 介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-%E5%AE%89%E8%A3%85-zsh">.2. 安装 ZSH&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-%E5%AE%89%E8%A3%85-oh-my-zsh">.3. 安装 oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="#4-%E8%AE%BE%E7%BD%AE%E4%B8%BB%E9%A2%98">.4. 设置主题&lt;/a>&lt;/li>
&lt;li>&lt;a href="#5-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85-zsh--oh-my-zsh">.5. 一键安装 zsh + oh-my-zsh&lt;/a>&lt;/li>
&lt;li>&lt;a href="#6-%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E5%8D%8E%E4%B8%BD%E4%B8%BB%E9%A2%98">.6. 推荐一个华丽主题&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-介绍">.1. 介绍&lt;/h2>
&lt;p>Zsh 是 Shell 脚本的天花板，个人觉得目前没有之一。华丽的外衣，丰富的内含，让你的终端操作如行云流水一般，好不快活，何不尝试一下 Oh-my-zsh。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/jeremyFreeAgent/oh-my-zsh-powerline-theme/master/preview.png" alt="">&lt;/p>
&lt;h2 id="2-安装-zsh">.2. 安装 ZSH&lt;/h2>
&lt;blockquote>
&lt;p>Zsh 全称 Z-shell，是一款用于交互式使用的shell，也可以作为脚本解释器来使用。其包含了 bash，ksh，tcsh 等其他shell中许多优秀功能，也拥有诸多自身特色。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># CentOS&lt;/span>
sudo yum -y install zsh
&lt;span class="c1"># Ubuntu&lt;/span>
sudo apt-get -y install zsh
&lt;span class="c1"># 查看系统支持哪些 shell&lt;/span>
cat /etc/shells
&lt;span class="c1"># 设置默认shell&lt;/span>
chsh -s /bin/zsh
&lt;span class="c1"># 查看当前默认shell &lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$SHELL&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3-安装-oh-my-zsh">.3. 安装 oh-my-zsh&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 官网下载&lt;/span>
sh -c &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># 或源码下载&lt;/span>
&lt;span class="c1"># 安装oh-my-zsh&lt;/span>
git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
&lt;span class="c1"># 复制zshrc&lt;/span>
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-设置主题">.4. 设置主题&lt;/h2>
&lt;p>官方更多主题：&lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes">https://github.com/ohmyzsh/ohmyzsh/wiki/Themes&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">vim ~/.zshrc 找到ZSH_THEME 字段
&lt;span class="c1"># 推荐使用: agnoster, candy&lt;/span>
&lt;span class="nv">ZSH_THEME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;candy&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-一键安装-zsh--oh-my-zsh">.5. 一键安装 zsh + oh-my-zsh&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">curl -sSL https://gitee.com/sgfoot/library/raw/master/oh-my-zsh/install.sh &lt;span class="p">|&lt;/span>bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="6-推荐一个华丽主题">.6. 推荐一个华丽主题&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> ~/.oh-my-zsh/themes
git clone https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme.git
ln -s oh-my-zsh-powerline-theme/powerline.zsh-theme powerline.zsh-theme
&lt;span class="c1"># 编辑 .zshrc&lt;/span>
vim ~/.zshrc
&lt;span class="nv">ZSH_THEME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;powerline&amp;#34;&lt;/span>
&lt;span class="nb">source&lt;/span> ~/.zshrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Docker busybox 镜像工具</title><link>/docker-tools.html</link><pubDate>Thu, 31 Mar 2022 14:20:11 +0800</pubDate><guid>/docker-tools.html</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#busybox">busybox&lt;/a>&lt;/li>
&lt;li>&lt;a href="#progriumbusybox">progrium/busybox&lt;/a>&lt;/li>
&lt;li>&lt;a href="#alpine">Alpine&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#alpine-%E6%9B%BF%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90">Alpine 替换国内源&lt;/a>&lt;/li>
&lt;li>&lt;a href="#dockerfile">Dockerfile&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%8D%87%E7%BA%A7%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6">升级&amp;amp;安装软件&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;p>busybox 本身集成了300多个常用工具命令. 用于日常开发,维护.也是体积比较小.
但是 busybox 本身不支持 curl,很遗憾,所以有了衍生品.&lt;/p>
&lt;h2 id="busybox">busybox&lt;/h2>
&lt;p>原生的 busybox, 大小718K左右,不及1M大小.&lt;/p>
&lt;p>本身采用 apt-get install 安装工具&lt;/p>
&lt;h2 id="progriumbusybox">progrium/busybox&lt;/h2>
&lt;p>官方地址: &lt;a href="https://hub.docker.com/r/progrium/busybox">https://hub.docker.com/r/progrium/busybox&lt;/a>&lt;/p>
&lt;p>支持创建自己的镜像,安装,采用 opkg-install 安装软件.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">FROM progrium/busybox
RUN opkg-install curl bash git
CMD &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/bash&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="alpine">Alpine&lt;/h2>
&lt;h3 id="alpine-替换国内源">Alpine 替换国内源&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 查看镜像源&lt;/span>
cat /etc/apk/repositories
http://dl-cdn.alpinelinux.org/alpine/v3.11/main
http://dl-cdn.alpinelinux.org/alpine/v3.11/community
&lt;span class="c1"># 替换阿里云&lt;/span>
sed -i &lt;span class="s1">&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g&amp;#39;&lt;/span> /etc/apk/repositories
&lt;span class="c1"># 替换科技大学&lt;/span>
sed -i &lt;span class="s1">&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g&amp;#39;&lt;/span> /etc/apk/repositories
&lt;span class="c1"># 替换清华源&lt;/span>
sed -i &lt;span class="s1">&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;#39;&lt;/span> /etc/apk/repositories
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="dockerfile">Dockerfile&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">RUN sed -i &lt;span class="s1">&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g&amp;#39;&lt;/span> /etc/apk/repositories
RUN apk add --no-cache gcc musl-dev linux-headers
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="升级安装软件">升级&amp;amp;安装软件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 升级&lt;/span>
apk update
apk upgrade
&lt;span class="c1"># 安装 bash&lt;/span>
apk add --no-cache bash
&lt;span class="c1"># 安装 bash 文档&lt;/span>
apk add bash-doc
&lt;span class="c1"># 安装 bash 自动化命令行&lt;/span>
apk add bash-completion zsh vim curl
&lt;span class="c1"># 改变当前环境 Bash&lt;/span>
bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>查看 Linux 系统资源</title><link>/linux-system-info.html</link><pubDate>Thu, 17 Feb 2022 15:36:03 +0800</pubDate><guid>/linux-system-info.html</guid><description>&lt;h2 id="1-系统">1. 系统&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">uname -a &lt;span class="c1"># 查看系统版本全部信息&lt;/span>
uname -r &lt;span class="c1"># 查看内核版本&lt;/span>
hostname &lt;span class="c1"># 查看主机名称&lt;/span>
cat /etc/redhat-release &lt;span class="c1"># 打印系统类型，只对红帽系统有用, 如 CentOS&lt;/span>
env &lt;span class="c1"># 显示环境变量&lt;/span>
lspci &lt;span class="c1"># 主板信息&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2-资源">2. 资源&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">free -mh &lt;span class="c1"># 查看内存使用量和交换区使用量&lt;/span>
df -h &lt;span class="c1"># 查看各分区使用情况&lt;/span>
du -sh &amp;lt;目录名&amp;gt; &lt;span class="c1"># 查看指定目录的大小&lt;/span>
uptime &lt;span class="c1"># 查看系统运行时间、用户数、负载&lt;/span>
cat /proc/loadavg &lt;span class="c1"># 查看系统负载&lt;/span>
lsblk &lt;span class="c1"># 树形显示硬盘结构&lt;/span>
nvidia-smi &lt;span class="c1"># 显卡信息&lt;/span>
cat /proc/cpuinfo &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;model name&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> uniq &lt;span class="c1"># 查看CPU型号&lt;/span>
cat /proc/cpuinfo &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;physical id&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sort &lt;span class="p">|&lt;/span> uniq &lt;span class="p">|&lt;/span> wc -l &lt;span class="c1"># 查看 CPU 颗数, 实际Server中插槽上的CPU个数, 物理cpu数量&lt;/span>
cat /proc/cpuinfo &lt;span class="p">|&lt;/span>grep &lt;span class="s2">&amp;#34;cores&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>uniq&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;{print $4}&amp;#39;&lt;/span> &lt;span class="c1"># 查看 CPU 核数, 一颗CPU上面能处理数据的芯片组的数量。&lt;/span>
cat /proc/cpuinfo &lt;span class="p">|&lt;/span>grep &lt;span class="s2">&amp;#34;processor&amp;#34;&lt;/span>&lt;span class="p">|&lt;/span>wc -l &lt;span class="c1"># 逻辑CPU核数，逻辑CPU数量=物理cpu数量 x cpu cores 这个规格值 x 2(如果支持并开启超线程)。&lt;/span>
lspci &lt;span class="p">|&lt;/span> grep -i nvidia &lt;span class="c1"># 查看nvidia显卡，如果没有lspci, yum -y install pciutils&lt;/span>
lspci &lt;span class="p">|&lt;/span> grep -i vga &lt;span class="c1"># 查看内置GPU&lt;/span>
nvidia-smi &lt;span class="c1"># 查看GPU&lt;/span>
watch -n &lt;span class="m">10&lt;/span> nvidia-smi &lt;span class="c1"># 动态查看GPU&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3-进程">3. 进程&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">ps -ef &lt;span class="c1"># 查看所有进程&lt;/span>
top &lt;span class="c1"># 实时显示进程状态&lt;/span>
netstat -nplt &lt;span class="c1"># 查看所有监听端口&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-用户">4. 用户&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">w &lt;span class="c1"># 查看活动用户&lt;/span>
id &amp;lt;userID&amp;gt; &lt;span class="c1"># 查看指定用户信息&lt;/span>
last &lt;span class="c1"># 查看用户登录日志&lt;/span>
cut -d: -f1 /etc/passwd &lt;span class="c1"># 查看系统所有用户&lt;/span>
cut -d: -f1 /etc/group &lt;span class="c1"># 查看系统所有组&lt;/span>
crontab -l &lt;span class="c1"># 查看当前用户的计划任务&lt;/span>
systemctl list-unit-files &lt;span class="c1"># 列出服务的开机状态&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="网络">网络&lt;/h1>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">ifconfig &lt;span class="c1"># 查看所有网络接口的属性&lt;/span>
ip addr &lt;span class="c1"># 查看网卡&lt;/span>
iptables -L &lt;span class="c1"># 查看防火墙设置&lt;/span>
route -n &lt;span class="c1"># 查看路由表&lt;/span>
netstat -lntp &lt;span class="c1"># 查看所有监听端口&lt;/span>
netstat -antp &lt;span class="c1"># 查看所有已经建立的连接&lt;/span>
netstat -s &lt;span class="c1"># 查看网络统计信息&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="其它">其它&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">sudo cat /sys/class/dmi/id/product_uuid &lt;span class="c1"># 查看 product_uuid 唯一性&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>算法入门(一) 基础概念</title><link>/algo-01.html</link><pubDate>Mon, 17 Jan 2022 22:47:10 +0800</pubDate><guid>/algo-01.html</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#1-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95">.1. 数据结构与算法&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%B8%8E%E6%9C%AF%E8%AF%AD">.2. 基本概念与术语&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#21-%E6%95%B0%E6%8D%AE">.2.1. 数据&lt;/a>&lt;/li>
&lt;li>&lt;a href="#22-%E6%95%B0%E6%8D%AE%E5%85%83%E7%B4%A0">.2.2. 数据元素&lt;/a>&lt;/li>
&lt;li>&lt;a href="#23-%E6%95%B0%E6%8D%AE%E9%A1%B9">.2.3. 数据项&lt;/a>&lt;/li>
&lt;li>&lt;a href="#24-%E6%95%B0%E6%8D%AE%E5%AF%B9%E8%B1%A1">.2.4. 数据对象&lt;/a>&lt;/li>
&lt;li>&lt;a href="#25-%E6%80%BB%E7%BB%93">.2.5. 总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#3-%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84%E4%B8%8E%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84">.3. 逻辑结构与物理结构&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#31-%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84">.3.1. 逻辑结构&lt;/a>&lt;/li>
&lt;li>&lt;a href="#32-%E7%89%A9%E7%90%86%E7%BB%93%E6%9E%84">.3.2. 物理结构&lt;/a>&lt;/li>
&lt;li>&lt;a href="#33-%E6%80%BB%E7%BB%93">.3.3. 总结&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#4-%E7%AE%97%E6%B3%95">.4. 算法&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#41-%E7%AE%97%E6%B3%95%E7%9A%84%E7%89%B9%E5%BE%81">.4.1. 算法的特征&lt;/a>&lt;/li>
&lt;li>&lt;a href="#42-%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E7%9A%84%E8%A6%81%E6%B1%82">.4.2. 算法设计的要求&lt;/a>&lt;/li>
&lt;li>&lt;a href="#43-%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6">.4.3. 算法时间复杂度&lt;/a>&lt;/li>
&lt;li>&lt;a href="#44-%E6%9C%80%E5%9D%8F%E6%83%85%E5%86%B5%E4%B8%8E%E5%B9%B3%E5%9D%87%E6%83%85%E5%86%B5">.4.4. 最坏情况与平均情况&lt;/a>&lt;/li>
&lt;li>&lt;a href="#45-%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6">.4.5. 空间复杂度&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#5-%E5%8F%82%E8%80%83">.5. 参考&lt;/a>&lt;/li>
&lt;li>&lt;a href="#6-%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85">.6. 关于作者&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-数据结构与算法">.1. 数据结构与算法&lt;/h2>
&lt;p>什么是数据结构：是相互之间存在一种或多种特定关系的数据元素的集合。&lt;/p>
&lt;p>什么是算法：是解决特定问题求解步骤的描述。&lt;/p>
&lt;h2 id="2-基本概念与术语">.2. 基本概念与术语&lt;/h2>
&lt;h3 id="21-数据">.2.1. 数据&lt;/h3>
&lt;p>是描述客观事物的符号，是计算机可以操作的对象。&lt;/p>
&lt;p>符号必须满足以下两个条件：&lt;/p>
&lt;ul>
&lt;li>可以输入到计算机中。&lt;/li>
&lt;li>能被计算机程序处理。&lt;/li>
&lt;/ul>
&lt;p>例：整型，字符串等。&lt;/p>
&lt;h3 id="22-数据元素">.2.2. 数据元素&lt;/h3>
&lt;p>是组成数据的，有一定意义的基本单位，在计算机中通常作为整体处理。也称为记录。&lt;/p>
&lt;p>例：人，动物，狗，虎等。&lt;/p>
&lt;h3 id="23-数据项">.2.3. 数据项&lt;/h3>
&lt;p>一个数据元素可以由若干个数据项组成。&lt;/p>
&lt;p>&lt;strong>数据项是数据不可分割的最小单位。&lt;/strong>&lt;/p>
&lt;h3 id="24-数据对象">.2.4. 数据对象&lt;/h3>
&lt;p>是性质相同的数据元素的集合，是数据的子集。&lt;/p>
&lt;h3 id="25-总结">.2.5. 总结&lt;/h3>
&lt;p>三种之间的关系：数据 &amp;gt; 数据元素 &amp;gt; 数据项&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20220210112150.png" alt="20220210112150">&lt;/p>
&lt;h2 id="3-逻辑结构与物理结构">.3. 逻辑结构与物理结构&lt;/h2>
&lt;h3 id="31-逻辑结构">.3.1. 逻辑结构&lt;/h3>
&lt;p>是指数据对象中数据元素之间的相互关系。&lt;/p>
&lt;p>共分为四种：&lt;/p>
&lt;ol>
&lt;li>集合结构：各元素平等关系&lt;/li>
&lt;li>线性结构：元素之间一对一关系&lt;/li>
&lt;li>树形结构：元素之间一对多层次关系&lt;/li>
&lt;li>图形结构：元素之间多对多关系&lt;/li>
&lt;/ol>
&lt;h3 id="32-物理结构">.3.2. 物理结构&lt;/h3>
&lt;p>是指数据的逻辑结构在计算机中存储形式。&lt;/p>
&lt;p>共分为两种：&lt;/p>
&lt;ol>
&lt;li>顺序存储结构：是把数据元素存放在地址连续的存储单元里。&lt;/li>
&lt;li>链式存储结构：是把数据元素存放在任意单元里，这组存储单元可以是连续的，也可以是不连续的。&lt;/li>
&lt;/ol>
&lt;h3 id="33-总结">.3.3. 总结&lt;/h3>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20220210113303.png" alt="20220210113303">&lt;/p>
&lt;h2 id="4-算法">.4. 算法&lt;/h2>
&lt;h3 id="41-算法的特征">.4.1. 算法的特征&lt;/h3>
&lt;p>共五个特征：&lt;/p>
&lt;ol>
&lt;li>输入：算法具有零个或多个输入。&lt;/li>
&lt;li>输出：算法至少有一个或多个输出。&lt;/li>
&lt;li>有穷性：指算法在执行有限的步骤之后，自动结束而不会出现无限循环，并且每一个步骤在可以接受的时间内完成。&lt;/li>
&lt;li>确定性：算法在每一步骤都具有确定的含义， 不会出现二义性。&lt;/li>
&lt;li>可行性：每一步都能够通过执行有限的次数完成。&lt;/li>
&lt;/ol>
&lt;h3 id="42-算法设计的要求">.4.2. 算法设计的要求&lt;/h3>
&lt;ol>
&lt;li>正确性
&lt;ol>
&lt;li>算法程序没有语法错误。&lt;/li>
&lt;li>算法程序对于合法的输入数据能够产生满足的输出结果。&lt;/li>
&lt;li>算法程序对于非法的输入数据能够得出满足规格说明的结果。&lt;/li>
&lt;li>算法程序对于精心选择的，甚至刁难的测试数据都有满足的要求的输出结果。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>可读性：算法设计的另一目的是为了便于阅读，理解和交流。&lt;/li>
&lt;li>健壮性：当输入数据不合法时，算法也能做出相关处理，而不是产生异常或莫名其妙的结果。&lt;/li>
&lt;li>时间效率高和存储量低&lt;/li>
&lt;/ol>
&lt;h3 id="43-算法时间复杂度">.4.3. 算法时间复杂度&lt;/h3>
&lt;p>通常使用大O表示法&lt;/p>
&lt;p>常见的时间复杂度：&lt;/p>
&lt;blockquote>
&lt;p>时间复杂度所耗费的时间从小到大，见如下。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>常数阶 O(1)&lt;/li>
&lt;li>对数阶 O(logn)&lt;/li>
&lt;li>线性阶 O(n)&lt;/li>
&lt;li>nlog O(nlogn)&lt;/li>
&lt;li>平方阶 O(n^2)&lt;/li>
&lt;li>立方阶 O(n^3)&lt;/li>
&lt;li>指数阶 O(2^n)&lt;/li>
&lt;li>阶乘阶 O(n!)&lt;/li>
&lt;/ol>
&lt;h3 id="44-最坏情况与平均情况">.4.4. 最坏情况与平均情况&lt;/h3>
&lt;p>最坏情况运行时间是一种保证，那就是运行时间将不会再坏了。&lt;/p>
&lt;p>平均运行时间是所有情况中最有意义的，因为它是期望的运行时间。&lt;/p>
&lt;p>一般在没有特殊说明的情况下，都是指最坏的时间复杂度。&lt;/p>
&lt;h3 id="45-空间复杂度">.4.5. 空间复杂度&lt;/h3>
&lt;blockquote>
&lt;p>同理使用大O表示&lt;/p>
&lt;/blockquote>
&lt;p>空间复杂度是指算法耗费多少存储空间。&lt;/p>
&lt;h2 id="5-参考">.5. 参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://book.douban.com/subject/6424904/">大话数据结构&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="6-关于作者">.6. 关于作者&lt;/h2>
&lt;p>我的博客：&lt;a href="https://sgfoot.com">https://sgfoot.com&lt;/a>&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>优质软件 SOFT</title><link>/soft-awesome.html</link><pubDate>Fri, 14 Jan 2022 13:40:23 +0800</pubDate><guid>/soft-awesome.html</guid><description>&lt;blockquote>
&lt;p>优质软件，一枝独秀，供提参考。&lt;/p>
&lt;/blockquote>
&lt;h2 id="开发软件">开发软件&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>官网&lt;/th>
&lt;th>使用参考&lt;/th>
&lt;th>平台&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://tabby.sh/">Tabby&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://aegisprogram.github.io/posts/99110ee6.html">介绍&lt;/a>&lt;/td>
&lt;td>macOS(M1),Linux,Windows&lt;/td>
&lt;td>SSH客户端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://molunerfinn.com/PicGo/">PicGo&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://picgo.github.io/PicGo-Doc/zh/guide/">文档&lt;/a>&lt;/td>
&lt;td>macOS(M1),Linux,Windows&lt;/td>
&lt;td>图床工具&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="日常软件">日常软件&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>官网&lt;/th>
&lt;th>使用参考&lt;/th>
&lt;th>平台&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://www.freedownloadmanager.org/zh/">Free Download Manager&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.freedownloadmanager.org/zh/features.htm">特色&lt;/a>&lt;/td>
&lt;td>MacOS(M1),Linux,Windows,Android&lt;/td>
&lt;td>下载工具&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://landrop.app/">LANDrop&lt;/a>&lt;/td>
&lt;td>&lt;a href="https://www.appinn.com/landrop-files-transfer-tools/">介绍&lt;/a>&lt;/td>
&lt;td>IOS,MacOS,Windows,Linux,Android&lt;/td>
&lt;td>局域网传输工具&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：&lt;a href="https://www.sgfoot.com">https://www.sgfoot.com&lt;/a>&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Git Ignore 常用文件</title><link>/gitignore.html</link><pubDate>Fri, 14 Jan 2022 10:05:18 +0800</pubDate><guid>/gitignore.html</guid><description>&lt;p>在开发中，代码管理常用 git，做为优秀的分布式代码管理工具，有着优秀的设计，
其中一项就是 &lt;code>.gitignore&lt;/code> 的功能。主要用于忽略某此文件或敏感文件，以防
泄漏。&lt;/p>
&lt;h2 id="常用的-gitignore">常用的 gitignore&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">tmp
.env
gohub
.DS_Store
.history
&lt;span class="c1"># Golang #&lt;/span>
&lt;span class="c1">######################&lt;/span>
&lt;span class="c1"># `go test -c` 生成的二进制文件&lt;/span>
*.test
&lt;span class="c1"># go coverage 工具&lt;/span>
*.out
*.prof
*.cgo1.go
*.cgo2.c
_cgo_defun.c
_cgo_gotypes.go
_cgo_export.*
&lt;span class="c1"># 编译文件 #&lt;/span>
&lt;span class="c1">###################&lt;/span>
*.com
*.class
*.dll
*.exe
*.o
*.so
&lt;span class="c1"># 压缩包 #&lt;/span>
&lt;span class="c1">############&lt;/span>
&lt;span class="c1"># Git 自带压缩,如果这些压缩包里有代码,建议解压后 commit&lt;/span>
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
&lt;span class="c1"># 日志文件和数据库 #&lt;/span>
&lt;span class="c1">######################&lt;/span>
*.log
*.sqlite
*.db
&lt;span class="c1"># 临时文件 #&lt;/span>
&lt;span class="c1">######################&lt;/span>
tmp/
.tmp/
&lt;span class="c1"># 系统生成文件 #&lt;/span>
&lt;span class="c1">######################&lt;/span>
.DS_Store
.DS_Store?
.AppleDouble
.LSOverride
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.TemporaryItems
.fseventsd
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
&lt;span class="c1"># IDE 和编辑器 #&lt;/span>
&lt;span class="c1">######################&lt;/span>
.idea/
/go_build_*
out/
.vscode/
.vscode/settings.json
*.sublime*
__debug_bin
.project
&lt;span class="c1"># 前端工具链 #&lt;/span>
&lt;span class="c1">######################&lt;/span>
.sass-cache/*
node_modules/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="删除已经加入版本库文件">删除已经加入版本库文件&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">git rm --cached &amp;lt;文件名或目录&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learnku.com/courses/go-api/1.17/gitignore-file/11774">https://learnku.com/courses/go-api/1.17/gitignore-file/11774&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：&lt;a href="https://www.sgfoot.com">https://www.sgfoot.com&lt;/a>&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Harbor 安装（TLS）</title><link>/harbor-install.html</link><pubDate>Sat, 01 Jan 2022 23:00:33 +0800</pubDate><guid>/harbor-install.html</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#1-%E5%89%8D%E6%8F%90%E5%87%86%E5%A4%87">.1. 前提准备&lt;/a>&lt;/li>
&lt;li>&lt;a href="#2-%E5%AE%89%E8%A3%85-docker-%E5%92%8C-docker-compose">.2. 安装 Docker 和 Docker-Compose&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E4%B9%8B%E9%9D%9E%E5%AE%89%E5%85%A8%E6%A8%A1%E5%BC%8F">.3. 离线安装之非安全模式&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#31-%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6">.3.1. 下载安装软件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#32-%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">.3.2. 编辑配置文件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#33-%E8%BF%90%E8%A1%8C%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">.3.3. 运行安装脚本&lt;/a>&lt;/li>
&lt;li>&lt;a href="#34-%E6%9F%A5%E7%9C%8B%E9%AA%8C%E8%AF%81">.3.4. 查看验证&lt;/a>&lt;/li>
&lt;li>&lt;a href="#35-%E7%99%BB%E9%99%86-harbor-%E7%AE%A1%E7%90%86%E9%A1%B5%E9%9D%A2">.3.5. 登陆 Harbor 管理页面&lt;/a>&lt;/li>
&lt;li>&lt;a href="#36-docker-%E9%85%8D%E7%BD%AE">.3.6. Docker 配置&lt;/a>&lt;/li>
&lt;li>&lt;a href="#37-docker-%E7%99%BB%E9%99%86-harbor">.3.7. Docker 登陆 harbor&lt;/a>&lt;/li>
&lt;li>&lt;a href="#38-%E6%B5%8B%E8%AF%95%E4%B8%8A%E4%BC%A0%E9%95%9C%E5%83%8F">.3.8. 测试上传镜像&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#4-%E7%94%9F%E6%88%90%E8%87%AA%E7%AD%BE%E5%90%8D">.4. 生成自签名&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#41-%E7%94%9F%E6%88%90%E8%AF%81%E4%B9%A6%E9%A2%81%E5%8F%91%E6%9C%BA%E6%9E%84%E8%AF%81%E4%B9%A6">.4.1. 生成证书颁发机构证书&lt;/a>&lt;/li>
&lt;li>&lt;a href="#42-%E7%94%9F%E6%88%90%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AF%81%E4%B9%A6">.4.2. 生成服务器证书&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#5-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E4%B9%8B%E5%AE%89%E5%85%A8%E6%A8%A1%E5%BC%8F">.5. 离线安装之安全模式&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#51-%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6">.5.1. 下载安装软件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#52-%E5%90%91-harbor-%E6%8F%90%E4%BE%9B%E8%AF%81%E4%B9%A6">.5.2. 向 Harbor 提供证书&lt;/a>&lt;/li>
&lt;li>&lt;a href="#53-%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">.5.3. 编辑配置文件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#54-%E8%BF%90%E8%A1%8C%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC">.5.4. 运行安装脚本&lt;/a>&lt;/li>
&lt;li>&lt;a href="#55-docker-%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8%E8%AF%81%E4%B9%A6">.5.5. Docker 客户端使用证书&lt;/a>&lt;/li>
&lt;li>&lt;a href="#56-docker-%E7%99%BB%E9%99%86%E6%B5%8B%E8%AF%95">.5.6. Docker 登陆测试&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#6-%E5%8F%82%E8%80%83">.6. 参考&lt;/a>&lt;/li>
&lt;li>&lt;a href="#7-%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85">.7. 关于作者&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-前提准备">.1. 前提准备&lt;/h2>
&lt;ol>
&lt;li>harbor 2.4.1 版本&lt;/li>
&lt;li>基于 CentOS 7&lt;/li>
&lt;li>假设我们的 IP 是：192.168.100.8&lt;/li>
&lt;li>自定义域名: harbor.me&lt;/li>
&lt;li>Harbor 安装目录：/data/harbor&lt;/li>
&lt;/ol>
&lt;h2 id="2-安装-docker-和-docker-compose">.2. 安装 Docker 和 Docker-Compose&lt;/h2>
&lt;p>参考：&lt;a href="https://sgfoot.com/docker-install.html#docker-%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85">https://sgfoot.com/docker-install.html&lt;/a>&lt;/p>
&lt;h2 id="3-离线安装之非安全模式">.3. 离线安装之非安全模式&lt;/h2>
&lt;blockquote>
&lt;p>分离线与在线安装。自由选择。offline 表示离线，online 表示在线。
本文选择离线安装&lt;/p>
&lt;/blockquote>
&lt;p>从 github 下载：&lt;a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases&lt;/a>&lt;/p>
&lt;p>选择对应的安装版本&lt;/p>
&lt;h3 id="31-下载安装软件">.3.1. 下载安装软件&lt;/h3>
&lt;blockquote>
&lt;p>只配置 http，此步不配置 https，配置 https 往下看, &lt;a href="#5-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E4%B9%8B%E5%AE%89%E5%85%A8%E6%A8%A1%E5%BC%8F">传送门&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 下载离线包：&lt;/span>
wget https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-offline-installer-v2.4.1.tgz
&lt;span class="c1"># 解压&lt;/span>
tar -zxvf harbor-offline-installer-v2.4.1.tgz
&lt;span class="c1"># 复制配置文件&lt;/span>
&lt;span class="nb">cd&lt;/span> harbor
cp harbor.yml.tmpl harbor.yml
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="32-编辑配置文件">.3.2. 编辑配置文件&lt;/h3>
&lt;p>编辑 &lt;code>vim harbor.yml&lt;/code> 文件&lt;/p>
&lt;p>共5处修改。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 5行，修改 hostname，可以是ip，域名，不建议使用 localhost, 127.0.0.1&lt;/span>
hostname: 192.168.100.8
&lt;span class="c1"># 10行，修改端口，默认80，建议修改其它端口，此区修改为9900&lt;/span>
http:
port: &lt;span class="m">9900&lt;/span>
&lt;span class="c1"># 此处不采用 https，建议注释掉 13～18行&lt;/span>
&lt;span class="c1"># https related config&lt;/span>
&lt;span class="c1">#https:&lt;/span>
&lt;span class="c1"># https port for harbor, default is 443&lt;/span>
&lt;span class="c1"># port: 443&lt;/span>
&lt;span class="c1"># The path of cert and key files for nginx&lt;/span>
&lt;span class="c1"># certificate: /your/certificate/path&lt;/span>
&lt;span class="c1"># private_key: /your/private/key/path&lt;/span>
&lt;span class="c1"># 34行，修改 UI 界面的登陆密码,推荐随机16位密码。&lt;/span>
&lt;span class="c1"># 在线随机密码：https://suijimimashengcheng.bmcx.com/&lt;/span>
harbor_admin_password: 请替换您的密码
&lt;span class="c1"># 47行，修改 harbor 数据存储目录。默认 /data&lt;/span>
data_volume: /data/harbor/data
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="33-运行安装脚本">.3.3. 运行安装脚本&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 创建目录和删除旧版本的镜像&lt;/span>
./prepare
&lt;span class="c1"># 安装脚本，实际是通过 docker-compose up -d 进行安装 harbor 镜像的&lt;/span>
./install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="34-查看验证">.3.4. 查看验证&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 查看安装的容器,必须在 harbor 目录，含有 docker-compose.yml 运行才有效&lt;/span>
docker-compose ps
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="35-登陆-harbor-管理页面">.3.5. 登陆 Harbor 管理页面&lt;/h3>
&lt;p>&lt;a href="http://192.168.100.8:9900">http://192.168.100.8:9900&lt;/a>&lt;/p>
&lt;p>这里的 hostname 是指 &lt;code>harbor.yml&lt;/code> 配置项 hostname 的值&lt;/p>
&lt;p>用户名默认为 admin 和密码即是 &lt;code>harbor.yml&lt;/code> 配置 harbor_admin_password 项&lt;/p>
&lt;h3 id="36-docker-配置">.3.6. Docker 配置&lt;/h3>
&lt;blockquote>
&lt;p>客户端的 Docker&lt;/p>
&lt;/blockquote>
&lt;p>因为采用非安全模式，需要在客户端的 Docker 配置一个不安全项。&lt;/p>
&lt;p>&lt;code>vim /etc/docker/daemon.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">{&lt;/span>
&lt;span class="c1"># 其它配置项&lt;/span>
,&lt;span class="s2">&amp;#34;insecure-registries&amp;#34;&lt;/span>:&lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;192.168.100.8:9900&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不配置以上，则会报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">Error response from daemon: Get https://192.168.100.8:9900/v2/: http: server gave HTTP response to HTTPS client
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="37-docker-登陆-harbor">.3.7. Docker 登陆 harbor&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">-&amp;gt; % docker login 192.168.100.8:9900
Username: admin
Password:
Login Succeeded
&lt;span class="c1"># 这里使用的帐号和密码与页面上使用的是一样的，也可以自建专属帐号进行登陆&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="38-测试上传镜像">.3.8. 测试上传镜像&lt;/h3>
&lt;p>Docker 推送与拉取命令格式&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 推送命令&lt;/span>
&lt;span class="c1"># 先打 tag&lt;/span>
docker tag SOURCE_IMAGE&lt;span class="o">[&lt;/span>:TAG&lt;span class="o">]&lt;/span> 192.168.100.8:9900/library/REPOSITORY&lt;span class="o">[&lt;/span>:TAG&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 再推送&lt;/span>
docker push 192.168.100.8:9900/library/REPOSITORY&lt;span class="o">[&lt;/span>:TAG&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 拉取命令&lt;/span>
docker pull 192.168.100.8:9900/library/REPOSITORY&lt;span class="o">[&lt;/span>:TAG&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>测试一个简单的 nginx 镜像&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 推送&lt;/span>
docker pull nginx:1.21.5
docker tag nginx:1.21.5 192.168.100.8:9900/library/nginx:1.21.5
docker push 192.168.100.8:9900/library/nginx:1.21.5
&lt;span class="c1"># 拉取&lt;/span>
docker pull 192.168.100.8:9900/library/nginx:1.21.5
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-生成自签名">.4. 生成自签名&lt;/h2>
&lt;blockquote>
&lt;p>💡 安全模式，即使用 https 签名方式访问，这样更加安全。
签名分 CA 机构购买或免费自签名
本文采用：生成自签名&lt;/p>
&lt;/blockquote>
&lt;p>自签名的域名，假定域名为：harhor.me&lt;/p>
&lt;p>生成目录：&lt;code>mkdir -p ~/cert&lt;/code>&lt;/p>
&lt;h3 id="41-生成证书颁发机构证书">.4.1. 生成证书颁发机构证书&lt;/h3>
&lt;p>生成CA证书私钥&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">openssl genrsa -out ca.key &lt;span class="m">4096&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成CA证书，10年有效期，也可以设置更长时间，将 3650 改成 36500，即 100 年&lt;/p>
&lt;blockquote>
&lt;p>注意 harbor.me 修改自已定义的域名&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">openssl req -x509 -new -nodes -sha512 -days &lt;span class="m">3650&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -subj &lt;span class="s2">&amp;#34;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harhor.me&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -key ca.key &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -out ca.crt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="42-生成服务器证书">.4.2. 生成服务器证书&lt;/h3>
&lt;p>生成私钥&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">openssl genrsa -out harhor.me.key &lt;span class="m">4096&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成证书签名请求(CSR)&lt;/p>
&lt;blockquote>
&lt;p>注意 harbor.me 修改自已定义的域名&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">openssl req -sha512 -new &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -subj &lt;span class="s2">&amp;#34;/C=CN/ST=Beijing/L=Beijing/O=example/OU=Personal/CN=harhor.me&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -key harhor.me.key &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -out harhor.me.csr
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成x509 v3扩展文件&lt;/p>
&lt;blockquote>
&lt;p>注意 harbor.me 修改自已定义的域名&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">cat &amp;gt; v3.ext &lt;span class="s">&amp;lt;&amp;lt;-EOF
&lt;/span>&lt;span class="s">authorityKeyIdentifier=keyid,issuer
&lt;/span>&lt;span class="s">basicConstraints=CA:FALSE
&lt;/span>&lt;span class="s">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span>&lt;span class="s">extendedKeyUsage = serverAuth
&lt;/span>&lt;span class="s">subjectAltName = @alt_names
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">[alt_names]
&lt;/span>&lt;span class="s">DNS.1=harhor.me
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 v3.ext 文件为您的 Harbor 主机生成证书&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">openssl x509 -req -sha512 -days &lt;span class="m">3650&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -extfile v3.ext &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -CA ca.crt -CAkey ca.key -CAcreateserial &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -in harhor.me.csr &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -out harhor.me.crt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>全部证书列表,目录：&lt;code>~/cert&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 1.9K &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 17:59 ca.crt
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 3.2K &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 17:59 ca.key
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 17B &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 18:00 ca.srl
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 2.1K &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 18:00 harhor.me.crt
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 1.7K &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 18:00 harhor.me.csr
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 3.2K &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 17:59 harhor.me.key
-rw-r--r-- &lt;span class="m">1&lt;/span> root staff 228B &lt;span class="m">12&lt;/span> &lt;span class="m">31&lt;/span> 18:00 v3.ext
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-离线安装之安全模式">.5. 离线安装之安全模式&lt;/h2>
&lt;h3 id="51-下载安装软件">.5.1. 下载安装软件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 下载离线包：&lt;/span>
wget &lt;span class="o">[&lt;/span>https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-offline-installer-v2.4.1.tgz&lt;span class="o">](&lt;/span>https://github.com/goharbor/harbor/releases/download/v2.4.1/harbor-offline-installer-v2.4.1.tgz&lt;span class="o">)&lt;/span>
&lt;span class="c1"># 解压&lt;/span>
tar -zxvf harbor-offline-installer-v2.4.1.tgz
&lt;span class="c1"># 复制配置文件&lt;/span>
&lt;span class="nb">cd&lt;/span> harbor
cp harbor.yml.tmpl harbor.yml
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="52-向-harbor-提供证书">.5.2. 向 Harbor 提供证书&lt;/h3>
&lt;blockquote>
&lt;p>查看第4步骤生成的证书，目录：&lt;code>ls -l ~/cert&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>生成的 &lt;code>harhor.me.csr&lt;/code> 和 &lt;code>harhor.me.key&lt;/code> 复制到新的 /data/harbor/cert 目录下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">mkdir -p /data/harbor/cert/
cp ~/cert/harhor.me.crt /data/harbor/cert/
cp ~/cert/harbor.me.key /data/harbor/cert/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="53-编辑配置文件">.5.3. 编辑配置文件&lt;/h3>
&lt;blockquote>
&lt;p>需要配置 https 项&lt;/p>
&lt;/blockquote>
&lt;p>编辑 &lt;code>vim harbor.yml&lt;/code> 文件&lt;/p>
&lt;p>共5处修改。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 5行，修改 hostname，可以是ip，域名，不建议使用 localhost, 127.0.0.1&lt;/span>
hostname: 192.168.100.8
&lt;span class="c1"># 10行，修改端口，默认80，建议修改其它端口，此区修改为9900&lt;/span>
http:
port: &lt;span class="m">9900&lt;/span>
&lt;span class="c1"># 此处不采用 https，建议注释掉 13～18行&lt;/span>
&lt;span class="c1"># https related config&lt;/span>
https:
&lt;span class="c1"># https port for harbor, default is 443&lt;/span>
port: &lt;span class="m">443&lt;/span>
&lt;span class="c1"># The path of cert and key files for nginx&lt;/span>
certificate: /data/harbor/cert/harhor.me.crt
private_key: /data/harbor/cert/harbor.me.key
&lt;span class="c1"># 34行，修改 UI 界面的登陆密码,推荐随机16位密码。&lt;/span>
&lt;span class="c1"># 在线随机密码：https://suijimimashengcheng.bmcx.com/&lt;/span>
harbor_admin_password: 请替换您的密码
&lt;span class="c1"># 47行，修改 harbor 数据存储目录。默认 /data&lt;/span>
data_volume: /data/harbor/data
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="54-运行安装脚本">.5.4. 运行安装脚本&lt;/h3>
&lt;p>如何之前没有配置过非安全模式，运行以下即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 创建目录和删除旧版本的镜像&lt;/span>
./prepare
&lt;span class="c1"># 安装脚本，实际是通过 docker-compose up -d 进行安装 harbor 镜像的&lt;/span>
./install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>之前配置过非安全模式，采用重启方式启动&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 清理配置数据，然后重建。不会清理镜像和用户信息。&lt;/span>
./prepare
&lt;span class="c1"># 停止 docker 容器&lt;/span>
sudo docker-compose down -v
&lt;span class="c1"># 启动服务&lt;/span>
sudo docker-compose up -d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="55-docker-客户端使用证书">.5.5. Docker 客户端使用证书&lt;/h3>
&lt;p>将 crt 转换为 cert ，以供客户端的 Docker 使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">cd&lt;/span> ~/cert/
openssl x509 -inform PEM -in harhor.me.crt -out harhor.me.cert
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将 cert 和 key 文件复制到 Docker 配置目录下的 &lt;code>certs.d&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>找到自己的 Docker 配置目录。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">mkdir -p /etc/docker/certs.d/harhor.me/
cp harhor.me.cert /etc/docker/certs.d/harhor.me/
cp harhor.me.key /etc/docker/certs.d/harhor.me/
cp ca.crt /etc/docker/certs.d/harhor.me/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="56-docker-登陆测试">.5.6. Docker 登陆测试&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 先配置 host &lt;/span>
vim /etc/hosts
192.168.100.8 harhor.me
docker login harbor.me
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="6-参考">.6. 参考&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="https://goharbor.io/docs/1.10/install-config/configure-https/">https://goharbor.io/docs/1.10/install-config/configure-https/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="7-关于作者">.7. 关于作者&lt;/h2>
&lt;p>我的博客：&lt;a href="https://sgfoot.com">https://sgfoot.com&lt;/a>&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第十二章 Minikube 安装</title><link>/k8s-minikube.html</link><pubDate>Tue, 28 Dec 2021 17:39:06 +0800</pubDate><guid>/k8s-minikube.html</guid><description>&lt;h1 id="minikube-安装">Minikube 安装&lt;/h1>
&lt;blockquote>
&lt;p>仅用于开产使用，生产不能使用。
以下仅以 macOS 系统演示&lt;/p>
&lt;/blockquote>
&lt;h2 id="11-docker-安装">1.1 Docker 安装&lt;/h2>
&lt;p>官方下载，直接安装即可。&lt;/p>
&lt;p>&lt;a href="https://docs.docker.com/desktop/mac/install/">https://docs.docker.com/desktop/mac/install/&lt;/a>&lt;/p>
&lt;p>使用国内镜像源，推荐阿里云的。&lt;/p>
&lt;p>参考：&lt;a href="https://sgfoot.com/docker-install.html#docker-%E5%8A%A0%E9%80%9F">https://sgfoot.com/docker-install.html#docker-加速&lt;/a>&lt;/p>
&lt;h2 id="12-kubectl-安装">1.2 Kubectl 安装&lt;/h2>
&lt;p>Kubernetes 命令行工具，&lt;a href="https://kubernetes.io/docs/reference/kubectl/kubectl/">kubectl&lt;/a>，使得你可以对 Kubernetes 集群运行命令。 你可以使用 kubectl 来部署应用、监测和管理集群资源以及查看日志。&lt;/p>
&lt;p>官方下载，有详细的安装流程。支持：windows, linux, macOS&lt;/p>
&lt;p>参考：&lt;a href="https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-macos/">https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-macos/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># Apple Silicon M1 cpu&lt;/span>
curl -LO &lt;span class="s2">&amp;#34;https://dl.k8s.io/release/&lt;/span>&lt;span class="k">$(&lt;/span>curl -L -s https://dl.k8s.io/release/stable.txt&lt;span class="k">)&lt;/span>&lt;span class="s2">/bin/darwin/arm64/kubectl&amp;#34;&lt;/span>
&lt;span class="c1"># Intel cpu&lt;/span>
curl -LO &lt;span class="s2">&amp;#34;https://dl.k8s.io/release/&lt;/span>&lt;span class="k">$(&lt;/span>curl -L -s https://dl.k8s.io/release/stable.txt&lt;span class="k">)&lt;/span>&lt;span class="s2">/bin/darwin/amd64/kubectl&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>添加权限，加入 PATH 目录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 添加执行权限&lt;/span>
chmod +x ./kubectl
&lt;span class="c1"># 移动到path目录，全局可访问&lt;/span>
sudo mv ./kubectl /usr/local/bin/kubectl
sudo chown root: /usr/local/bin/kubectl
&lt;span class="c1"># 查看版本&lt;/span>
kubectl version --client
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看配置，&lt;a href="https://kubernetes.io/zh/docs/reference/kubectl/overview/">了解更多 kubectl 命令&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 查看 kubectl 配置，即读这里的信息：cat ~/.kube/config&lt;/span>
kubectl config view
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="13-minikube安装">1.3 Minikube安装&lt;/h2>
&lt;p>minikube 是一个单节点的 Kubernetes 集群，用于本地开展开发工作。&lt;/p>
&lt;p>官方下载二进制包，选择你对应的操作系统。&lt;/p>
&lt;p>下载地址：&lt;a href="https://minikube.sigs.k8s.io/docs/start/">https://minikube.sigs.k8s.io/docs/start/&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 添加执行权限&lt;/span>
chmod +x ./minikube
&lt;span class="c1"># 移动到path目录，全局可访问&lt;/span>
sudo mv ./minikube /usr/local/bin/minikube
sudo chown root: /usr/local/bin/minikube
&lt;span class="c1"># 启动集群&lt;/span>
minikube start --image-mirror-country&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;cn&amp;#39;&lt;/span>
&lt;span class="c1"># cn 表示使用国内镜像源&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参考：&lt;a href="https://developer.aliyun.com/article/221687">https://developer.aliyun.com/article/221687&lt;/a>&lt;/p>
&lt;h2 id="14-运行一个完整的-web-nginx-应用">1.4 运行一个完整的 web nginx 应用&lt;/h2>
&lt;blockquote>
&lt;p>采用声明式对象配置安装一个 nginx 应用
格式：kubectl apply -f file-example.yaml&lt;/p>
&lt;/blockquote>
&lt;p>新建 &lt;code>web-nginx.yaml&lt;/code>&lt;/p>
&lt;ol>
&lt;li>创建一个 web 命名空间&lt;/li>
&lt;li>创建一个 Deployment ，将其运行在 web 空间下&lt;/li>
&lt;li>创建一个 Service 服务，用于暴露服务&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Yaml 简单语法说明：采用 key: value 形式，冒号后必须加一个空格，缩进以空格为主，三个中划线（&amp;mdash;）表示在一个 yaml 文件里分隔多个yaml文件。&lt;a href="https://www.ruanyifeng.com/blog/2016/07/yaml.html">更多 yaml 语法学习&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>以下 web-nginx.yaml 一个文件里写了三处中划线，相当于三个 yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 1. 创建一个独立的命名空间，方便做隔离区分。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Namespace&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 创建一个新的命名空间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 2. 创建一个 deployment，设置 3 个副本数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义 deployment 对象，进行创建多个pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web-nginx-deployment &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># deployment 名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 采用匹配方式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app: web-nginx # 标签名称: key &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">value 形式。即选择template下面 metadata.abels 定义的标签pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义副本数，即 pod 的数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义模板，即 pod 所需的容器&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 基本信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义 labels &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web-nginx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义 pod 的标签，采用 key:value 形式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义容器信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.14.2 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 镜像名称和版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># containerPort是在pod控制器中定义的、pod中的容器需要暴露的端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 3. 创建一个 servive 向外暴露服务。 采用 NodePort 方式，即在 Node 上开设一个端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web-nginx-service&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 运行在 web 空间下&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NodePort &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 默认为ClusterIP，可选：NodePort（默认端口取值范围值：30000-32767), ExternalName, LoadBalancer &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">web-nginx &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择 app=nginx 的 deployment &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 采用 tcp 协议&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 服务访问端口，集群内部访问的端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># pod 控制器中定义的端口（应用访问的端口）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#nodePort: 30003 # NodePort，外部客户端访问的端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>使用 &lt;code>kubectl apply -f web-nginx.yaml&lt;/code> 创建以上定义的服务&lt;/p>
&lt;p>使用以下命令查看服务:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 查看所有的命令空间, 可以看到创建的 web 空间， ns 是 namespace 的简写&lt;/span>
kubectl get ns
&lt;span class="c1"># 查看创建的 Pod 服务, 需要使用 -n 指定命名空间&lt;/span>
kubectl get pods -n web
&lt;span class="c1"># 查看 deployment 服务， deploy 是 deployment 的简写方式&lt;/span>
kubectl get deploy -n web
&lt;span class="c1"># 查看 service 服务， svc 是 service 的简写方式&lt;/span>
kubectl get svc -n web
&lt;span class="c1"># 查看 endpoints 服务,可以查看到 service 通过 endpoints 关联到 deployment 服务&lt;/span>
kubectl get ep -n web
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>service 提供的ip还只是集群内部的ip，如何验证 nginx 呢，借用 minikube 提供的 service 功能，进行代理访问。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 列出 service 服务名称。即 web-nginx-service 名称。&lt;/span>
kubectl get svc -n web
&lt;span class="c1"># 使用 minikube service 功能，注意需要指定命名空间，-n web&lt;/span>
minikube service web-nginx-service -n web
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更加详细的查看服务命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 使用 describe 查看服务详情，适用于 pod, deployment, service, ep 等&lt;/span>
kubectl describe svc -n web &lt;span class="c1"># 查看 service 详情&lt;/span>
&lt;span class="c1"># 使用 -o wide 浏览更多信息， 适用于 pod, deployment, service, ep 等&lt;/span>
kubectl get deploy -n web -o wide
&lt;span class="c1"># 进入容器内部&lt;/span>
kubectl &lt;span class="nb">exec&lt;/span> -it nginx-deployment-66b6c48dd5-4js2m -n dev sh
&lt;span class="c1"># nginx-deployment-66b6c48dd5-4js2m 名称是 pod 的名称。&lt;/span>
&lt;span class="c1"># 可以使用 kubectl get pods -n web 查看到名称。&lt;/span>
&lt;span class="c1"># sh 采用 shell 方式&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="15-运行dashboard">1.5 运行Dashboard&lt;/h2>
&lt;blockquote>
&lt;p>官方出的 kubernetes web 界面，可以查看集群内的服务信息。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 默认打开浏览器，随机一个端口。&lt;/span>
minikube dashboard
&lt;span class="c1"># 指定端口，显示URL,推荐使用&lt;/span>
minikube dashboard --port&lt;span class="o">=&lt;/span>&lt;span class="m">52000&lt;/span> --url&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考文档">参考文档&lt;/h2>
&lt;ul>
&lt;li>kubernetes 官方 minikube 介绍： &lt;a href="https://kubernetes.io/zh/docs/tutorials/hello-minikube/">https://kubernetes.io/zh/docs/tutorials/hello-minikube/&lt;/a>&lt;/li>
&lt;li>kubectl 概述：&lt;a href="https://kubernetes.io/zh/docs/reference/kubectl/">https://kubernetes.io/zh/docs/reference/kubectl/&lt;/a>&lt;/li>
&lt;li>k8s 辨析 port, NodePort, targetPort, containerPort: &lt;a href="https://www.cnblogs.com/veeupup/p/13545361.html">https://www.cnblogs.com/veeupup/p/13545361.html&lt;/a>&lt;/li>
&lt;li>k8s 总纲及脑图： &lt;a href="https://sgfoot.com/k8s-mindmap.html">https://sgfoot.com/k8s-mindmap.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Kubernetes 总纲及脑图</title><link>/k8s-mindmap.html</link><pubDate>Tue, 09 Nov 2021 18:42:18 +0800</pubDate><guid>/k8s-mindmap.html</guid><description>&lt;h2 id="kubernetes-导航目录">kubernetes 导航目录&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://sgfoot.com/k8s-intro.html">第一章 kubernetes 介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-install.html">第二章 Kubernetes 安装&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-resource.html">第三章 Kubernetes 资源管理&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-operation.html">第四章 Kubernetes 实战操作&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-pod.html">第五章 Kubernetes Pod 介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-pod-controller.html">第六章 Kubernetes Pod 控制器&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-service.html">第七章 Kubernetes Service 介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-ingress.html">第八章 Kubernetes Ingress 介绍&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-storage.html">第九章 Kubernetes 数据存储&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-permission.html">第十章 Kubernetes 权限认证&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://sgfoot.com/k8s-dashboard.html">第十一章 Kubernetes Dashboard&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="脑图">脑图&lt;/h2>
&lt;blockquote>
&lt;p>kubernetes 涉及知识点比较，难以一次全记住，将以上的关于kubernetes 讲解的知识点汇总成脑图，方便查阅，随时复习。&lt;/p>
&lt;/blockquote>
&lt;p>若下图不方便查看，直接查看原链接&lt;a href="https://www.mubucm.com/doc/4vvLrwlmuSC">轻点，脑图&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20211109184251026.png?imageslim" alt="image-20211109184251026">&lt;/p>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第十一章 Kubernetes Dashboard</title><link>/k8s-dashboard.html</link><pubDate>Thu, 28 Oct 2021 18:18:16 +0800</pubDate><guid>/k8s-dashboard.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍 kubernetes 的 Dashboard。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>下载yaml，并运行Dashboard&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 下载yaml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml&lt;/span>
&lt;span class="c"># 修改kubernetes-dashboard的Service类型&lt;/span>
&lt;span class="n">kind&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Service&lt;/span>
&lt;span class="n">apiVersion&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">metadata&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">labels&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">k8s-app&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes-dashboard&lt;/span>
&lt;span class="n">name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes-dashboard&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes-dashboard&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="c"># 新增&lt;/span>
&lt;span class="n">ports&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">443&lt;/span>
&lt;span class="n">targetPort&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">8443&lt;/span>
&lt;span class="n">nodePort&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">30009&lt;/span> &lt;span class="c"># 新增&lt;/span>
&lt;span class="n">selector&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">k8s-app&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes-dashboard&lt;/span>
&lt;span class="c"># 部署&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f recommended.yaml&lt;/span>
&lt;span class="c"># 查看namespace下的kubernetes-dashboard下的资源&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod,svc -n kubernetes-dashboard&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dashboard-metrics-scraper-c79c65bb7-zwfvw&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">111s&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">kubernetes-dashboard&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">56484d4c5-z95z5&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">111s&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dashboard-metrics-scraper&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">96&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">89&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">218&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">8000&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">111s&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">kubernetes-dashboard&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">104&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">178&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">171&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">443&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">30009&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">111s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）创建访问账户，获取token&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建账号&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard&lt;/span>
&lt;span class="c"># 授权&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create clusterrolebinding dashboard-admin-rb --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin&lt;/span>
&lt;span class="c"># 获取账号token&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get secrets -n kubernetes-dashboard | grep dashboard-admin&lt;/span>
&lt;span class="n">dashboard-admin-token-xbqhh&lt;/span> &lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-account-token&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">2m35s&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe secrets dashboard-admin-token-xbqhh -n kubernetes-dashboard&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dashboard-admin-token-xbqhh&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes-dashboard&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dashboard-admin&lt;/span>
&lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-account&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">uid&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">95d84d80-be7a&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">4d10-a2e0&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">68f90222d039&lt;/span>
&lt;span class="n">Type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-account-token&lt;/span>
&lt;span class="n">Data&lt;/span>
&lt;span class="p">====&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">20&lt;/span> &lt;span class="n">bytes&lt;/span>
&lt;span class="n">token&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">eyJhbGciOiJSUzI1NiIsImtpZCI6ImJrYkF4bW5XcDhWcmNGUGJtek5NODFuSXl1aWptMmU2M3o4LTY5a2FKS2cifQ&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4teGJxaGgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiOTVkODRkODAtYmU3YS00ZDEwLWEyZTAtNjhmOTAyMjJkMDM5Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">NAl7e8ZfWWdDoPxkqzJzTB46sK9E8iuJYnUI9vnBaY3Jts7T1g1msjsBnbxzQSYgAG&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">-cV0WYxjndzJY_UWCwaGPrQrt_GunxmOK9AUnzURqm55GR2RXIZtjsWVP2EBatsDgHRmuUbQvTFOvdJB4x3nXcYLN2opAaMqg3rnU2rr-A8zCrIuX_eca12wIp_QiuP3SF-tzpdLpsyRfegTJZl6YnSGyaVkC9id-cxZRb307qdCfXPfCHR_2rt5FVfxARgg_C0e3eFHaaYQO7CitxsnIoIXpOFNAR8aUrmopJyODQIPqBWUehb7FhlU1DCduHnIIXVC_UICZ-MKYewBDLw&lt;/span>
&lt;span class="n">ca&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">crt&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">1025&lt;/span> &lt;span class="n">bytes&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3）通过浏览器访问Dashboard的UI&lt;/p>
&lt;p>在登录页面上输入上面的token&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520144548997.png?imageslim" alt="">&lt;/p>
&lt;p>出现下面的页面代表成功&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520144959353.png?imageslim" alt="">&lt;/p>
&lt;h2 id="使用dashboard">使用DashBoard&lt;/h2>
&lt;p>本章节以Deployment为例演示DashBoard的使用&lt;/p>
&lt;p>&lt;strong>查看&lt;/strong>&lt;/p>
&lt;p>选择指定的命名空间&lt;code>dev&lt;/code>，然后点击&lt;code>Deployments&lt;/code>，查看dev空间下的所有deployment&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520154628679.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>扩缩容&lt;/strong>&lt;/p>
&lt;p>在&lt;code>Deployment&lt;/code>上点击&lt;code>规模&lt;/code>，然后指定&lt;code>目标副本数量&lt;/code>，点击确定&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520162605102.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>编辑&lt;/strong>&lt;/p>
&lt;p>在&lt;code>Deployment&lt;/code>上点击&lt;code>编辑&lt;/code>，然后修改&lt;code>yaml文件&lt;/code>，点击确定&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520163253644.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>查看Pod&lt;/strong>&lt;/p>
&lt;p>点击&lt;code>Pods&lt;/code>, 查看pods列表&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520163552110.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>操作Pod&lt;/strong>&lt;/p>
&lt;p>选中某个Pod，可以对其执行日志（logs）、进入执行（exec）、编辑、删除操作&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520163832827.png?imageslim" alt="">&lt;/p>
&lt;blockquote>
&lt;p>Dashboard提供了kubectl的绝大部分功能，这里不再一一演示&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第十章 Kubernetes 权限认证</title><link>/k8s-permission.html</link><pubDate>Thu, 28 Oct 2021 18:18:07 +0800</pubDate><guid>/k8s-permission.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍Kubernetes的安全认证机制。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="访问控制概述">访问控制概述&lt;/h2>
&lt;p>​ Kubernetes作为一个分布式集群的管理工具，保证集群的安全性是其一个重要的任务。所谓的安全性其实就是保证对Kubernetes的各种&lt;strong>客户端&lt;/strong>进行&lt;strong>认证和鉴权&lt;/strong>操作。&lt;/p>
&lt;p>&lt;strong>客户端&lt;/strong>&lt;/p>
&lt;p>在Kubernetes集群中，客户端通常有两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>User Account&lt;/strong>：一般是独立于kubernetes之外的其他服务管理的用户账号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Service Account&lt;/strong>：kubernetes管理的账号，用于为Pod中的服务进程在访问Kubernetes时提供身份标识。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520102949189.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>认证、授权与准入控制&lt;/strong>&lt;/p>
&lt;p>ApiServer是访问及管理资源对象的唯一入口。任何一个请求访问ApiServer，都要经过下面三个流程：&lt;/p>
&lt;ul>
&lt;li>Authentication（认证）：身份鉴别，只有正确的账号才能够通过认证&lt;/li>
&lt;li>Authorization（授权）： 判断用户是否有权限对访问的资源执行特定的动作&lt;/li>
&lt;li>Admission Control（准入控制）：用于补充授权机制以实现更加精细的访问控制功能。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200520103942580.png?imageslim" alt="">&lt;/p>
&lt;h2 id="认证管理">认证管理&lt;/h2>
&lt;p>Kubernetes集群安全的最关键点在于如何识别并认证客户端身份，它提供了3种客户端身份认证方式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>HTTP Base认证：通过用户名+密码的方式认证&lt;/p>
&lt;ul>
&lt;li>这种认证方式是把“用户名:密码”用BASE64算法进行编码后的字符串放在HTTP请求中的Header Authorization域里发送给服务端。服务端收到后进行解码，获取用户名及密码，然后进行用户身份认证的过程。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTP Token认证：通过一个Token来识别合法用户&lt;/p>
&lt;ul>
&lt;li>这种认证方式是用一个很长的难以被模仿的字符串&amp;ndash;Token来表明客户身份的一种方式。每个Token对应一个用户名，当客户端发起API调用请求时，需要在HTTP Header里放入Token，API Server接到Token后会跟服务器中保存的token进行比对，然后进行用户身份认证的过程。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>HTTPS证书认证：基于CA根证书签名的双向数字证书认证方式&lt;/p>
&lt;ul>
&lt;li>这种认证方式是安全性最高的一种方式，但是同时也是操作起来最麻烦的一种方式。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200518211037434.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>HTTPS认证大体分为3个过程：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>证书申请和下发&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown"> HTTPS通信双方的服务器向CA机构申请证书，CA机构下发根证书、服务端证书及私钥给申请者
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>客户端和服务端的双向认证&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown"> 1&amp;gt; 客户端向服务器端发起请求，服务端下发自己的证书给客户端，
客户端接收到证书后，通过私钥解密证书，在证书中获得服务端的公钥，
客户端利用服务器端的公钥认证证书中的信息，如果一致，则认可这个服务器
2&amp;gt; 客户端发送自己的证书给服务器端，服务端接收到证书后，通过私钥解密证书，
在证书中获得客户端的公钥，并用该公钥认证证书信息，确认客户端是否合法
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>服务器端和客户端进行通信&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown"> 服务器端和客户端协商好加密方案后，客户端会产生一个随机的秘钥并加密，然后发送到服务器端。
服务器端接收这个秘钥后，双方接下来通信的所有内容都通过该随机秘钥加密
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>注意: Kubernetes允许同时配置多种认证方式，只要其中任意一个方式认证通过即可&lt;/p>
&lt;/blockquote>
&lt;h2 id="授权管理">授权管理&lt;/h2>
&lt;p>​ 授权发生在认证成功之后，通过认证就可以知道请求用户是谁， 然后Kubernetes会根据事先定义的授权策略来决定用户是否有权限访问，这个过程就称为授权。&lt;/p>
&lt;p>​ 每个发送到ApiServer的请求都带上了用户和资源的信息：比如发送请求的用户、请求的路径、请求的动作等，授权就是根据这些信息和授权策略进行比较，如果符合策略，则认为授权通过，否则会返回错误。&lt;/p>
&lt;p>API Server目前支持以下几种授权策略：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>AlwaysDeny：表示拒绝所有请求，一般用于测试&lt;/p>
&lt;/li>
&lt;li>
&lt;p>AlwaysAllow：允许接收所有请求，相当于集群不需要授权流程（Kubernetes默认的策略）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ABAC：基于属性的访问控制，表示使用用户配置的授权规则对用户请求进行匹配和控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Webhook：通过调用外部REST服务对用户进行授权&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Node：是一种专用模式，用于对kubelet发出的请求进行访问控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>RBAC：基于角色的访问控制（kubeadm安装方式下的默认选项）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>RBAC(Role-Based Access Control) 基于角色的访问控制，主要是在描述一件事情：&lt;strong>给哪些对象授予了哪些权限&lt;/strong>&lt;/p>
&lt;p>其中涉及到了下面几个概念：&lt;/p>
&lt;ul>
&lt;li>对象：User、Groups、ServiceAccount&lt;/li>
&lt;li>角色：代表着一组定义在资源上的可操作动作(权限)的集合&lt;/li>
&lt;li>绑定：将定义好的角色跟用户绑定在一起&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200519181209566.png?imageslim" alt="">&lt;/p>
&lt;p>RBAC引入了4个顶级资源对象：&lt;/p>
&lt;ul>
&lt;li>Role、ClusterRole：角色，用于指定一组权限&lt;/li>
&lt;li>RoleBinding、ClusterRoleBinding：角色绑定，用于将角色（权限）赋予给对象&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Role、ClusterRole&lt;/strong>&lt;/p>
&lt;p>一个角色就是一组权限的集合，这里的权限都是许可形式的（白名单）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># Role只能对命名空间内的资源进行授权，需要指定nameapce&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="c"># 支持的API组列表,&amp;#34;&amp;#34; 空字符串，表示核心API群&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pods&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 支持的资源对象列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">verbs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 允许的对资源对象的操作方法列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># ClusterRole可以对集群范围内资源、跨namespaces的范围资源、非资源类型进行授权&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-clusterrole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pods&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">verbs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>需要详细说明的是，rules中的参数：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>apiGroups: 支持的API组列表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;apps&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;autoscaling&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;batch&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>resources：支持的资源对象列表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="s2">&amp;#34;services&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;endpoints&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;pods&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;secrets&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;configmaps&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;crontabs&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;deployments&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;jobs&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;nodes&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;rolebindings&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;clusterroles&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;daemonsets&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;replicasets&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;statefulsets&amp;#34;&lt;/span>,
&lt;span class="s2">&amp;#34;horizontalpodautoscalers&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;replicationcontrollers&amp;#34;&lt;/span>,&lt;span class="s2">&amp;#34;cronjobs&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>verbs：对资源对象的操作方法列表&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;create&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;update&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;patch&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;delete&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;exec&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>RoleBinding、ClusterRoleBinding&lt;/strong>&lt;/p>
&lt;p>角色绑定用来把一个角色绑定到一个目标对象上，绑定目标可以是User、Group或者ServiceAccount。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># RoleBinding可以将同一namespace中的subject绑定到某个Role下，则此subject即具有该Role定义的权限&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-role-binding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">User&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">heima&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># ClusterRoleBinding在整个集群级别和所有namespaces将特定的subject与ClusterRole绑定，授予权限&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-clusterrole-binding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">User&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">heima&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-clusterrole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>RoleBinding引用ClusterRole进行授权&lt;/strong>&lt;/p>
&lt;p>RoleBinding可以引用ClusterRole，对属于同一命名空间内ClusterRole定义的资源主体进行授权。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown"> 一种很常用的做法就是，集群管理员为集群范围预定义好一组角色（ClusterRole），然后在多个命名空间中重复使用这些ClusterRole。这样可以大幅提高授权管理工作效率，也使得各个命名空间下的基础性授权规则与使用体验保持一致。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 虽然authorization-clusterrole是一个集群角色，但是因为使用了RoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 所以heima只能读取dev命名空间中的资源&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-role-binding-ns&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">User&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">heima&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterRole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-clusterrole&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">  &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>实战：创建一个只能管理dev空间下Pods资源的账号&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>创建账号&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 1) 创建证书&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># cd /etc/kubernetes/pki/&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># (umask 077;openssl genrsa -out devman.key 2048)&lt;/span>
&lt;span class="c"># 2) 用apiserver的证书去签署&lt;/span>
&lt;span class="c"># 2-1) 签名申请，申请的用户是devman,组是devgroup&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># openssl req -new -key devman.key -out devman.csr -subj &amp;#34;/CN=devman/O=devgroup&amp;#34; &lt;/span>
&lt;span class="c"># 2-2) 签署证书&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># openssl x509 -req -in devman.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out devman.crt -days 3650&lt;/span>
&lt;span class="c"># 3) 设置集群、用户、上下文信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config set-cluster kubernetes --embed-certs=true --certificate-authority=/etc/kubernetes/pki/ca.crt --server=https://192.168.109.100:6443&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config set-credentials devman --embed-certs=true --client-certificate=/etc/kubernetes/pki/devman.crt --client-key=/etc/kubernetes/pki/devman.key&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config set-context devman@kubernetes --cluster=kubernetes --user=devman&lt;/span>
&lt;span class="c"># 切换账户到devman&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config use-context devman@kubernetes&lt;/span>
&lt;span class="n">Switched&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="s2">&amp;#34;devman@kubernetes&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c"># 查看dev下pod，发现没有权限&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">Error&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="n">server&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Forbidden&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">pods&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">forbidden&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">User&lt;/span> &lt;span class="s2">&amp;#34;devman&amp;#34;&lt;/span> &lt;span class="n">cannot&lt;/span> &lt;span class="n">list&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="s2">&amp;#34;pods&amp;#34;&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">API&lt;/span> &lt;span class="nb">group &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">namespace&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span>
&lt;span class="c"># 切换到admin账户&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config use-context kubernetes-admin@kubernetes&lt;/span>
&lt;span class="n">Switched&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="s2">&amp;#34;kubernetes-admin@kubernetes&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2） 创建Role和RoleBinding，为devman用户授权&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev-role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">apiGroups&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pods&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">verbs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;watch&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;list&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RoleBinding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">authorization-role-binding&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">subjects&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>- &lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">User&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">devman&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">roleRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev-role&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiGroup&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rbac.authorization.k8s.io&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl create -f dev-role.yaml&lt;/span>
&lt;span class="n">role&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rbac&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">authorization&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">k8s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev-role&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">rolebinding&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">rbac&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">authorization&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">k8s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">authorization-role-binding&lt;/span> &lt;span class="n">created&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>切换账户，再次验证&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 切换账户到devman&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config use-context devman@kubernetes&lt;/span>
&lt;span class="n">Switched&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="s2">&amp;#34;devman@kubernetes&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c"># 再次查看&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8wp2k&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4d1h&lt;/span>
&lt;span class="n">nginx-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984-dc46j&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4d1h&lt;/span>
&lt;span class="n">nginx-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984-thfck&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4d1h&lt;/span>
&lt;span class="c"># 为了不影响后面的学习,切回admin账户&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pki&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl config use-context kubernetes-admin@kubernetes&lt;/span>
&lt;span class="n">Switched&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">context&lt;/span> &lt;span class="s2">&amp;#34;kubernetes-admin@kubernetes&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="准入控制">准入控制&lt;/h2>
&lt;p>通过了前面的认证和授权之后，还需要经过准入控制处理通过之后，apiserver才会处理这个请求。&lt;/p>
&lt;p>准入控制是一个可配置的控制器列表，可以通过在Api-Server上通过命令行设置选择执行哪些准入控制器：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">-&lt;/span>&lt;span class="n">-admission-control&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">NamespaceLifecycle&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">LimitRanger&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ServiceAccount&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">PersistentVolumeLabel&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="n">DefaultStorageClass&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ResourceQuota&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">DefaultTolerationSeconds&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>只有当所有的准入控制器都检查通过之后，apiserver才执行该请求，否则返回拒绝。&lt;/p>
&lt;p>当前可配置的Admission Control准入控制如下：&lt;/p>
&lt;ul>
&lt;li>AlwaysAdmit：允许所有请求&lt;/li>
&lt;li>AlwaysDeny：禁止所有请求，一般用于测试&lt;/li>
&lt;li>AlwaysPullImages：在启动容器之前总去下载镜像&lt;/li>
&lt;li>DenyExecOnPrivileged：它会拦截所有想在Privileged Container上执行命令的请求&lt;/li>
&lt;li>ImagePolicyWebhook：这个插件将允许后端的一个Webhook程序来完成admission controller的功能。&lt;/li>
&lt;li>Service Account：实现ServiceAccount实现了自动化&lt;/li>
&lt;li>SecurityContextDeny：这个插件将使用SecurityContext的Pod中的定义全部失效&lt;/li>
&lt;li>ResourceQuota：用于资源配额管理目的，观察所有请求，确保在namespace上的配额不会超标&lt;/li>
&lt;li>LimitRanger：用于资源限制管理，作用于namespace上，确保对Pod进行资源限制&lt;/li>
&lt;li>InitialResources：为未设置资源请求与限制的Pod，根据其镜像的历史资源的使用情况进行设置&lt;/li>
&lt;li>NamespaceLifecycle：如果尝试在一个不存在的namespace中创建资源对象，则该创建请求将被拒绝。当删除一个namespace时，系统将会删除该namespace中所有对象。&lt;/li>
&lt;li>DefaultStorageClass：为了实现共享存储的动态供应，为未指定StorageClass或PV的PVC尝试匹配默认的StorageClass，尽可能减少用户在申请PVC时所需了解的后端存储细节&lt;/li>
&lt;li>DefaultTolerationSeconds：这个插件为那些没有设置forgiveness tolerations并具有notready:NoExecute和unreachable:NoExecute两种taints的Pod设置默认的“容忍”时间，为5min&lt;/li>
&lt;li>PodSecurityPolicy：这个插件用于在创建或修改Pod时决定是否根据Pod的security context和可用的PodSecurityPolicy对Pod的安全策略进行控制&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第九章 Kubernetes 数据存储</title><link>/k8s-storage.html</link><pubDate>Thu, 28 Oct 2021 18:08:54 +0800</pubDate><guid>/k8s-storage.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍kubernetes的数据存储。&lt;/p>
&lt;/blockquote>
&lt;p>在前面已经提到，容器的生命周期可能很短，会被频繁地创建和销毁。那么容器在销毁时，保存在容器中的数据也会被清除。这种结果对用户来说，在某些情况下是不乐意看到的。为了持久化保存容器的数据，kubernetes引入了Volume的概念。&lt;/p>
&lt;p>​ Volume是Pod中能够被多个容器访问的共享目录，它被定义在Pod上，然后被一个Pod里的多个容器挂载到具体的文件目录下，kubernetes通过Volume实现同一个Pod中不同容器之间的数据共享以及数据的持久化存储。Volume的生命容器不与Pod中单个容器的生命周期相关，当容器终止或者重启时，Volume中的数据也不会丢失。&lt;/p>
&lt;p>kubernetes的Volume支持多种类型，比较常见的有下面几个：&lt;/p>
&lt;ul>
&lt;li>简单存储：EmptyDir、HostPath、NFS&lt;/li>
&lt;li>高级存储：PV、PVC&lt;/li>
&lt;li>配置存储：ConfigMap、Secret&lt;/li>
&lt;/ul>
&lt;h2 id="基本存储">基本存储&lt;/h2>
&lt;h3 id="emptydir">EmptyDir&lt;/h3>
&lt;p>​ EmptyDir是最基础的Volume类型，一个EmptyDir就是Host上的一个空目录。&lt;/p>
&lt;p>​ EmptyDir是在Pod被分配到Node时创建的，它的初始内容为空，并且无须指定宿主机上对应的目录文件，因为kubernetes会自动分配一个目录，当Pod销毁时， EmptyDir中的数据也会被永久删除。 EmptyDir用途如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>临时空间，例如用于某些应用程序运行时所需的临时目录，且无须永久保留&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个容器需要从另一个容器中获取数据的目录（多容器共享目录）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>接下来，通过一个容器之间文件共享的案例来使用一下EmptyDir。&lt;/p>
&lt;p>​ 在一个Pod中准备两个容器nginx和busybox，然后声明一个Volume分别挂在到两个容器的目录中，然后nginx容器负责向Volume中写日志，busybox中通过命令将日志内容读到控制台。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200413174713773.png?imageslim" alt="">&lt;/p>
&lt;p>创建一个volume-emptydir.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume-emptydir&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.14-alpine&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将logs-volume挂在到nginx容器中，对应的目录为 /var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;tail -f /logs/access.log&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 初始命令，动态读取指定文件中内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将logs-volume 挂在到busybox容器中，对应的目录为 /logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 声明volume， name为logs-volume，类型为emptyDir&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">emptyDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f volume-emptydir.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">volume-emptydir&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods volume-emptydir -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">volume-emptydir&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">97s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">100&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="c"># 通过podIp访问nginx&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.1.100&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="c"># 通过kubectl logs命令查看指定容器的标准输出&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl logs -f volume-emptydir -n dev -c busybox&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span> &lt;span class="p">-&lt;/span> &lt;span class="p">-&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">Apr&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2020&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">58&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">47&lt;/span> &lt;span class="p">+&lt;/span>&lt;span class="n">0000&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="s2">&amp;#34;GET / HTTP/1.1&amp;#34;&lt;/span> &lt;span class="n">200&lt;/span> &lt;span class="n">612&lt;/span> &lt;span class="s2">&amp;#34;-&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;curl/7.29.0&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;-&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="hostpath">HostPath&lt;/h3>
&lt;p>​ 上节课提到，EmptyDir中数据不会被持久化，它会随着Pod的结束而销毁，如果想简单的将数据持久化到主机中，可以选择HostPath。&lt;/p>
&lt;p>​ HostPath就是将Node主机中一个实际目录挂在到Pod中，以供容器使用，这样的设计就可以保证Pod销毁了，但是数据依据可以存在于Node主机上。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200413214031331.png?imageslim" alt="">&lt;/p>
&lt;p>创建一个volume-hostpath.yaml：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume-hostpath&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;tail -f /logs/access.log&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DirectoryOrCreate &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 目录存在就使用，不存在就先创建后使用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">关于type的值的一点说明：
DirectoryOrCreate 目录存在就使用，不存在就先创建后使用
Directory 目录必须存在
FileOrCreate 文件存在就使用，不存在就先创建后使用
File 文件必须存在
Socket unix套接字必须存在
CharDevice 字符设备必须存在
BlockDevice 块设备必须存在
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f volume-hostpath.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">volume-hostpath&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods volume-hostpath -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-volume-hostpath&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">16s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">104&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="c">#访问nginx&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.1.104&lt;/span>
&lt;span class="c"># 接下来就可以去host的/root/logs目录下查看存储的文件了&lt;/span>
&lt;span class="c">### 注意: 下面的操作需要到Pod所在的节点运行（案例中是node1）&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@node1&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ls /root/logs/&lt;/span>
&lt;span class="n">access&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">log&lt;/span>
&lt;span class="c"># 同样的道理，如果在此目录下创建一个文件，到容器中也是可以看到的&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="nfs">NFS&lt;/h3>
&lt;p>​ HostPath可以解决数据持久化的问题，但是一旦Node节点故障了，Pod如果转移到了别的节点，又会出现问题了，此时需要准备单独的网络存储系统，比较常用的用NFS、CIFS。&lt;/p>
&lt;p>​ NFS是一个网络文件存储系统，可以搭建一台NFS服务器，然后将Pod中的存储直接连接到NFS系统上，这样的话，无论Pod在节点上怎么转移，只要Node跟NFS的对接没问题，数据就可以成功访问。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200413215133559.png?imageslim" alt="">&lt;/p>
&lt;p>1）首先要准备nfs的服务器，这里为了简单，直接是master节点做nfs服务器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 在master上安装nfs服务&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># yum install nfs-utils -y&lt;/span>
&lt;span class="c"># 准备一个共享目录&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># mkdir /root/data/nfs -pv&lt;/span>
&lt;span class="c"># 将共享目录以读写权限暴露给192.168.109.0/24网段中的所有主机&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim /etc/exports&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># more /etc/exports&lt;/span>
&lt;span class="p">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nfs&lt;/span> &lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">no_root_squash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c"># 启动nfs服务&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># systemctl start nfs&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）接下来，要在的每个node节点上都安装下nfs，这样的目的是为了node节点可以驱动nfs设备&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 在node上安装nfs服务，注意不需要启动&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># yum install nfs-utils -y&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3）接下来，就可以编写pod的配置文件了，创建volume-nfs.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume-nfs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/var/log/nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;tail -f /logs/access.log&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/logs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">logs-volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.109.100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#nfs服务器地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/data/nfs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#共享文件路径&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4）最后，运行下pod，观察结果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f volume-nfs.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">volume-nfs&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods volume-nfs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">volume-nfs&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m9s&lt;/span>
&lt;span class="c"># 查看nfs服务器上的共享目录，发现已经有文件了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ls /root/data/&lt;/span>
&lt;span class="n">access&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">error&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">log&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="高级存储">高级存储&lt;/h2>
&lt;h3 id="pv和pvc">PV和PVC&lt;/h3>
&lt;p>​ 前面已经学习了使用NFS提供存储，此时就要求用户会搭建NFS系统，并且会在yaml配置nfs。由于kubernetes支持的存储系统有很多，要求客户全都掌握，显然不现实。为了能够屏蔽底层存储实现的细节，方便用户使用， kubernetes引入PV和PVC两种资源对象。&lt;/p>
&lt;p>​ PV（Persistent Volume）是持久化卷的意思，是对底层的共享存储的一种抽象。一般情况下PV由kubernetes管理员进行创建和配置，它与底层具体的共享存储技术有关，并通过插件完成与共享存储的对接。&lt;/p>
&lt;p>​ PVC（Persistent Volume Claim）是持久卷声明的意思，是用户对于存储需求的一种声明。换句话说，PVC其实就是用户向kubernetes系统发出的一种资源需求申请。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200514194111567.png?imageslim" alt="">&lt;/p>
&lt;p>使用了PV和PVC之后，工作可以得到进一步的细分：&lt;/p>
&lt;ul>
&lt;li>存储：存储工程师维护&lt;/li>
&lt;li>PV： kubernetes管理员维护&lt;/li>
&lt;li>PVC：kubernetes用户维护&lt;/li>
&lt;/ul>
&lt;h3 id="pv">PV&lt;/h3>
&lt;p>PV是存储资源的抽象，下面是资源清单文件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 存储类型，与底层真正存储对应&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">capacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 存储能力，目前只支持存储空间的设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 访问模式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storageClassName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 存储类别&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeReclaimPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 回收策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>PV 的关键配置参数说明：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>存储类型&lt;/strong>&lt;/p>
&lt;p>底层实际存储的类型，kubernetes支持多种存储类型，每种存储类型的配置都有所差异&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>存储能力（capacity）&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>​ 目前只支持存储空间的设置( storage=1Gi )，不过未来可能会加入IOPS、吞吐量等指标的配置&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>访问模式（accessModes）&lt;/strong>&lt;/p>
&lt;p>用于描述用户应用对存储资源的访问权限，访问权限包括下面几种方式：&lt;/p>
&lt;ul>
&lt;li>ReadWriteOnce（RWO）：读写权限，但是只能被单个节点挂载&lt;/li>
&lt;li>ReadOnlyMany（ROX）： 只读权限，可以被多个节点挂载&lt;/li>
&lt;li>ReadWriteMany（RWX）：读写权限，可以被多个节点挂载&lt;/li>
&lt;/ul>
&lt;p>&lt;code>需要注意的是，底层不同的存储类型可能支持的访问模式不同&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>回收策略（persistentVolumeReclaimPolicy）&lt;/strong>&lt;/p>
&lt;p>当PV不再被使用了之后，对其的处理方式。目前支持三种策略：&lt;/p>
&lt;ul>
&lt;li>Retain （保留） 保留数据，需要管理员手工清理数据&lt;/li>
&lt;li>Recycle（回收） 清除 PV 中的数据，效果相当于执行 rm -rf /thevolume/*&lt;/li>
&lt;li>Delete （删除） 与 PV 相连的后端存储完成 volume 的删除操作，当然这常见于云服务商的存储服务&lt;/li>
&lt;/ul>
&lt;p>&lt;code>需要注意的是，底层不同的存储类型可能支持的回收策略不同&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>存储类别&lt;/strong>&lt;/p>
&lt;p>PV可以通过storageClassName参数指定一个存储类别&lt;/p>
&lt;ul>
&lt;li>
&lt;p>具有特定类别的PV只能与请求了该类别的PVC进行绑定&lt;/p>
&lt;/li>
&lt;li>
&lt;p>未设定类别的PV则只能与不请求任何类别的PVC进行绑定&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>状态（status）&lt;/strong>&lt;/p>
&lt;p>一个 PV 的生命周期中，可能会处于4中不同的阶段：&lt;/p>
&lt;ul>
&lt;li>Available（可用）： 表示可用状态，还未被任何 PVC 绑定&lt;/li>
&lt;li>Bound（已绑定）： 表示 PV 已经被 PVC 绑定&lt;/li>
&lt;li>Released（已释放）： 表示 PVC 被删除，但是资源还未被集群重新声明&lt;/li>
&lt;li>Failed（失败）： 表示该 PV 的自动回收失败&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>实验&lt;/strong>&lt;/p>
&lt;p>使用NFS作为存储，来演示PV的使用，创建3个PV，对应NFS中的3个暴露的路径。&lt;/p>
&lt;ol>
&lt;li>准备NFS环境&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建目录&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># mkdir /root/data/{pv1,pv2,pv3} -pv&lt;/span>
&lt;span class="c"># 暴露服务&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># more /etc/exports&lt;/span>
&lt;span class="p">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv1&lt;/span> &lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">no_root_squash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv2&lt;/span> &lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">no_root_squash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv3&lt;/span> &lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">rw&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">no_root_squash&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="c"># 重启服务&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># systemctl restart nfs&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>创建pv.yaml&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">capacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">1Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeReclaimPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Retain&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/data/pv1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.109.100&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">capacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">2Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeReclaimPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Retain&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/data/pv2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.109.100&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">capacity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">3Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeReclaimPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Retain&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nfs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/data/pv3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.109.100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建 pv&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pv.yaml&lt;/span>
&lt;span class="n">persistentvolume&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv1&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">persistentvolume&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv2&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">persistentvolume&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pv3&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pv&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pv -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">CAPACITY&lt;/span> &lt;span class="n">ACCESS&lt;/span> &lt;span class="n">MODES&lt;/span> &lt;span class="n">RECLAIM&lt;/span> &lt;span class="n">POLICY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">VOLUMEMODE&lt;/span>
&lt;span class="n">pv1&lt;/span> &lt;span class="n">1Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Available&lt;/span> &lt;span class="n">10s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv2&lt;/span> &lt;span class="n">2Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Available&lt;/span> &lt;span class="n">10s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv3&lt;/span> &lt;span class="n">3Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Available&lt;/span> &lt;span class="n">9s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="pvc">PVC&lt;/h3>
&lt;p>PVC是资源的申请，用来声明对存储空间、访问模式、存储类别需求信息。下面是资源清单文件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolumeClaim&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 访问模式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置 PVC 的 volumeName 字段为 PV 卷的名称, 这一操作将把新的 PVC 对象绑定到现有的 PV 卷&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storageClassName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 存储类别&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 请求空间&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">5Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>PVC 的关键配置参数说明：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>访问模式（accessModes）&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>​ 用于描述用户应用对存储资源的访问权限&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>选择条件（selector）&lt;/strong>&lt;/p>
&lt;p>通过Label Selector的设置，可使PVC对于系统中己存在的PV进行筛选&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>存储类别（storageClassName）&lt;/strong>&lt;/p>
&lt;p>PVC在定义时可以设定需要的后端存储的类别，只有设置了该class的pv才能被系统选出&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源请求（Resources ）&lt;/strong>&lt;/p>
&lt;p>描述对存储资源的请求&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>实验&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>创建pvc.yaml，申请pv&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolumeClaim&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">1Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolumeClaim&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">1Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">PersistentVolumeClaim&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">accessModes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">ReadWriteMany&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">storage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">1Gi&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pv3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>注： pvc.spec.volumeName 字段是对pv.metadata.name的选择。这样PV与PVC之间建立关系。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pvc&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pvc.yaml&lt;/span>
&lt;span class="n">persistentvolumeclaim&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc1&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">persistentvolumeclaim&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc2&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">persistentvolumeclaim&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc3&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pvc&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pvc -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">VOLUME&lt;/span> &lt;span class="n">CAPACITY&lt;/span> &lt;span class="n">ACCESS&lt;/span> &lt;span class="n">MODES&lt;/span> &lt;span class="n">STORAGECLASS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">VOLUMEMODE&lt;/span>
&lt;span class="n">pvc1&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv1&lt;/span> &lt;span class="n">1Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">15s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pvc2&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv2&lt;/span> &lt;span class="n">2Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">15s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pvc3&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv3&lt;/span> &lt;span class="n">3Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">15s&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="c"># 查看pv&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pv -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">CAPACITY&lt;/span> &lt;span class="n">ACCESS&lt;/span> &lt;span class="n">MODES&lt;/span> &lt;span class="n">RECLAIM&lt;/span> &lt;span class="n">POLICY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">CLAIM&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">VOLUMEMODE&lt;/span>
&lt;span class="n">pv1&lt;/span> &lt;span class="n">1Gi&lt;/span> &lt;span class="n">RWx&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc1&lt;/span> &lt;span class="n">3h37m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv2&lt;/span> &lt;span class="n">2Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc2&lt;/span> &lt;span class="n">3h37m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv3&lt;/span> &lt;span class="n">3Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc3&lt;/span> &lt;span class="n">3h37m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>创建pods.yaml, 使用pv&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;while true;do echo pod1 &amp;gt;&amp;gt; /root/out.txt; sleep 10; done;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeClaim&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">claimName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">readOnly&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;while true;do echo pod2 &amp;gt;&amp;gt; /root/out.txt; sleep 10; done;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/root/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">volume&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persistentVolumeClaim&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">claimName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pvc2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">readOnly&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pods.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod1&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod2&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">pod1&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">14s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">69&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">pod2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">14s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">70&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="c"># 查看pvc&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pvc -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">VOLUME&lt;/span> &lt;span class="n">CAPACITY&lt;/span> &lt;span class="n">ACCESS&lt;/span> &lt;span class="n">MODES&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">VOLUMEMODE&lt;/span>
&lt;span class="n">pvc1&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv1&lt;/span> &lt;span class="n">1Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">94m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pvc2&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv2&lt;/span> &lt;span class="n">2Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">94m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pvc3&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">pv3&lt;/span> &lt;span class="n">3Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">94m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="c"># 查看pv&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pv -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">CAPACITY&lt;/span> &lt;span class="n">ACCESS&lt;/span> &lt;span class="n">MODES&lt;/span> &lt;span class="n">RECLAIM&lt;/span> &lt;span class="n">POLICY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">CLAIM&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">VOLUMEMODE&lt;/span>
&lt;span class="n">pv1&lt;/span> &lt;span class="n">1Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc1&lt;/span> &lt;span class="n">5h11m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv2&lt;/span> &lt;span class="n">2Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc2&lt;/span> &lt;span class="n">5h11m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="n">pv3&lt;/span> &lt;span class="n">3Gi&lt;/span> &lt;span class="n">RWX&lt;/span> &lt;span class="n">Retain&lt;/span> &lt;span class="n">Bound&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pvc3&lt;/span> &lt;span class="n">5h11m&lt;/span> &lt;span class="n">Filesystem&lt;/span>
&lt;span class="c"># 查看nfs中的文件存储&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># more /root/data/pv1/out.txt&lt;/span>
&lt;span class="n">node1&lt;/span>
&lt;span class="n">node1&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># more /root/data/pv2/out.txt&lt;/span>
&lt;span class="n">node2&lt;/span>
&lt;span class="n">node2&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="生命周期">生命周期&lt;/h3>
&lt;p>PVC和PV是一一对应的，PV和PVC之间的相互作用遵循以下生命周期：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>资源供应&lt;/strong>：管理员手动创建底层存储和PV&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源绑定&lt;/strong>：用户创建PVC，kubernetes负责根据PVC的声明去寻找PV，并绑定&lt;/p>
&lt;p>在用户定义好PVC之后，系统将根据PVC对存储资源的请求在已存在的PV中选择一个满足条件的&lt;/p>
&lt;ul>
&lt;li>
&lt;p>一旦找到，就将该PV与用户定义的PVC进行绑定，用户的应用就可以使用这个PVC了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果找不到，PVC则会无限期处于Pending状态，直到等到系统管理员创建了一个符合其要求的PV&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>PV一旦绑定到某个PVC上，就会被这个PVC独占，不能再与其他PVC进行绑定了&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源使用&lt;/strong>：用户可在pod中像volume一样使用pvc&lt;/p>
&lt;p>Pod使用Volume的定义，将PVC挂载到容器内的某个路径进行使用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源释放&lt;/strong>：用户删除pvc来释放pv&lt;/p>
&lt;p>当存储资源使用完毕后，用户可以删除PVC，与该PVC绑定的PV将会被标记为“已释放”，但还不能立刻与其他PVC进行绑定。通过之前PVC写入的数据可能还被留在存储设备上，只有在清除之后该PV才能再次使用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>资源回收&lt;/strong>：kubernetes根据pv设置的回收策略进行资源的回收&lt;/p>
&lt;p>对于PV，管理员可以设定回收策略，用于设置与之绑定的PVC释放资源之后如何处理遗留数据的问题。只有PV的存储空间完成回收，才能供新的PVC绑定和使用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200515002806726.png?imageslim" alt="">&lt;/p>
&lt;h2 id="配置存储">配置存储&lt;/h2>
&lt;h3 id="configmap">ConfigMap&lt;/h3>
&lt;p>ConfigMap是一种比较特殊的存储卷，它的主要作用是用来存储配置信息的。&lt;/p>
&lt;p>创建configmap.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ConfigMap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">configmap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">info&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;span class="sd"> username:admin
&lt;/span>&lt;span class="sd"> password:123456&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，使用此配置文件创建configmap&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建configmap&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f configmap.yaml&lt;/span>
&lt;span class="n">configmap&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">configmap&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看configmap详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe cm configmap -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">configmap&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Data&lt;/span>
&lt;span class="p">====&lt;/span>
&lt;span class="n">info&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">----&lt;/span>
&lt;span class="n">username&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">admin&lt;/span>
&lt;span class="n">password&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">123456&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来创建一个pod-configmap.yaml，将上面创建的configmap挂载进去&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-configmap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将configmap挂载到目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/configmap/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 引用configmap&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">configMap&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">configmap&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-configmap.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-configmap&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-configmap -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-configmap&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6s&lt;/span>
&lt;span class="c">#进入容器&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl exec -it pod-configmap -n dev /bin/sh&lt;/span>
&lt;span class="c"># cd /configmap/config/&lt;/span>
&lt;span class="c"># ls&lt;/span>
&lt;span class="n">info&lt;/span>
&lt;span class="c"># more info&lt;/span>
&lt;span class="n">username&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">admin&lt;/span>
&lt;span class="n">password&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">123456&lt;/span>
&lt;span class="c"># 可以看到映射已经成功，每个configmap都映射成了一个目录&lt;/span>
&lt;span class="c"># key---&amp;gt;文件 value----&amp;gt;文件中的内容&lt;/span>
&lt;span class="c"># 此时如果更新configmap的内容, 容器中的值也会动态更新&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="secret">Secret&lt;/h3>
&lt;p>​ 在kubernetes中，还存在一种和ConfigMap非常类似的对象，称为Secret对象。它主要用于存储敏感信息，例如密码、秘钥、证书等等。&lt;/p>
&lt;ol>
&lt;li>首先使用base64对数据进行编码&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="p">[&lt;/span>&lt;span class="l">root@master ~]# echo -n &amp;#39;admin&amp;#39; | base64&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#准备username&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">YWRtaW4=&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">root@master ~]# echo -n &amp;#39;123456&amp;#39; | base64&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#准备password&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">MTIzNDU2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>接下来编写secret.yaml，并创建Secret&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Secret&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">secret&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Opaque&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">data&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">YWRtaW4=&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">MTIzNDU2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建secret&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f secret.yaml&lt;/span>
&lt;span class="n">secret&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">secret&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看secret详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe secret secret -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">secret&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Opaque&lt;/span>
&lt;span class="n">Data&lt;/span>
&lt;span class="p">====&lt;/span>
&lt;span class="n">password&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">6&lt;/span> &lt;span class="n">bytes&lt;/span>
&lt;span class="n">username&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">5&lt;/span> &lt;span class="n">bytes&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>创建pod-secret.yaml，将上面创建的secret挂载进去：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-secret&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将secret挂载到目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/secret/config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">config&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">secret&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-secret.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-secret&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-secret -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-secret&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m28s&lt;/span>
&lt;span class="c"># 进入容器，查看secret信息，发现已经自动解码了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl exec -it pod-secret /bin/sh -n dev&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># ls /secret/config/&lt;/span>
&lt;span class="n">password&lt;/span> &lt;span class="n">username&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># more /secret/config/username&lt;/span>
&lt;span class="n">admin&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># more /secret/config/password&lt;/span>
&lt;span class="n">123456&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，已经实现了利用secret实现了信息的编码。&lt;/p>
&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第八章 Kubernetes Ingress 介绍</title><link>/k8s-ingress.html</link><pubDate>Thu, 28 Oct 2021 17:58:04 +0800</pubDate><guid>/k8s-ingress.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍kubernetes的流量负载组件：Ingress。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>在前面课程中已经提到，Service对集群之外暴露服务的主要方式有两种：NotePort和LoadBalancer，但是这两种方式，都有一定的缺点：&lt;/p>
&lt;ul>
&lt;li>NodePort方式的缺点是会占用很多集群机器的端口，那么当集群服务变多的时候，这个缺点就愈发明显&lt;/li>
&lt;li>LB方式的缺点是每个service需要一个LB，浪费、麻烦，并且需要kubernetes之外设备的支持&lt;/li>
&lt;/ul>
&lt;p>​ 基于这种现状，kubernetes提供了Ingress资源对象，Ingress只需要一个NodePort或者一个LB就可以满足暴露多个Service的需求。工作机制大致如下图表示：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200623092808049.png?imageslim" alt="">&lt;/p>
&lt;p>​ 实际上，Ingress相当于一个7层的负载均衡器，是kubernetes对反向代理的一个抽象，它的工作原理类似于Nginx，可以理解成在&lt;strong>Ingress里建立诸多映射规则，Ingress Controller通过监听这些配置规则并转化成Nginx的反向代理配置 , 然后对外部提供服务&lt;/strong>。在这里有两个核心概念：&lt;/p>
&lt;ul>
&lt;li>ingress：kubernetes中的一个对象，作用是定义请求如何转发到service的规则&lt;/li>
&lt;li>ingress controller：具体实现反向代理及负载均衡的程序，对ingress定义的规则进行解析，根据配置的规则来实现请求转发，实现方式有很多，比如Nginx, Contour, Haproxy等等&lt;/li>
&lt;/ul>
&lt;p>Ingress（以Nginx为例）的工作原理如下：&lt;/p>
&lt;ol>
&lt;li>用户编写Ingress规则，说明哪个域名对应kubernetes集群中的哪个Service&lt;/li>
&lt;li>Ingress控制器动态感知Ingress服务规则的变化，然后生成一段对应的Nginx反向代理配置&lt;/li>
&lt;li>Ingress控制器会将生成的Nginx配置写入到一个运行着的Nginx服务中，并动态更新&lt;/li>
&lt;li>到此为止，其实真正在工作的就是一个Nginx了，内部配置了用户定义的请求转发规则&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200516112704764.png?imageslim" alt="">&lt;/p>
&lt;h2 id="ingress使用">Ingress使用&lt;/h2>
&lt;h3 id="环境准备">环境准备&lt;/h3>
&lt;p>&lt;strong>搭建ingress环境&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建文件夹&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># mkdir ingress-controller&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># cd ingress-controller/&lt;/span>
&lt;span class="c"># 获取ingress-nginx，本次案例使用的是0.30版本&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">ingress-controller&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/mandatory.yaml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">ingress-controller&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/provider/baremetal/service-nodeport.yaml&lt;/span>
&lt;span class="c"># 修改mandatory.yaml文件中的仓库&lt;/span>
&lt;span class="c"># 修改quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0&lt;/span>
&lt;span class="c"># 为quay-mirror.qiniu.com/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0&lt;/span>
&lt;span class="c"># 创建ingress-nginx&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">ingress-controller&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl apply -f ./&lt;/span>
&lt;span class="c"># 查看ingress-nginx&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">ingress-controller&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get pod -n ingress-nginx&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx-ingress-controller-fbf967dd5&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">4qpbp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">12h&lt;/span>
&lt;span class="c"># 查看service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">ingress-controller&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get svc -n ingress-nginx&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">ingress-nginx&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">98&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">75&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">163&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">32240&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">443&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">31335&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">11h&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>准备service和pod&lt;/strong>&lt;/p>
&lt;p>为了后面的实验比较方便，创建如下图所示的模型&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200516102419998.png?imageslim" alt="">&lt;/p>
&lt;p>创建tomcat-nginx.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat:8.5-jre10-slim&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">None&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">None&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f tomcat-nginx.yaml&lt;/span>
&lt;span class="c"># 查看&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx-service&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">None&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">48s&lt;/span>
&lt;span class="n">tomcat-service&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">None&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">8080&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">48s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="http代理">Http代理&lt;/h3>
&lt;p>创建ingress-http.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">extensions/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ingress&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ingress-http&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">servicePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">servicePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f ingress-http.yaml&lt;/span>
&lt;span class="n">ingress&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">extensions&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">ingress-http&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ing ingress-http -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">HOSTS&lt;/span> &lt;span class="n">ADDRESS&lt;/span> &lt;span class="n">PORTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">ingress-http&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">tomcat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">80&lt;/span> &lt;span class="n">22s&lt;/span>
&lt;span class="c"># 查看详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe ing ingress-http -n dev&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="n">Rules&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Host&lt;/span> &lt;span class="n">Path&lt;/span> &lt;span class="n">Backends&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">--------&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="p">/&lt;/span> &lt;span class="n">nginx-service&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">96&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">112&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tomcat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="p">/&lt;/span> &lt;span class="n">tomcat-service&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">94&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">95&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">111&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c"># 接下来,在本地电脑上配置host文件,解析上面的两个域名到192.168.109.100(master)上&lt;/span>
&lt;span class="c"># 然后,就可以分别访问tomcat.itheima.com:32240 和 nginx.itheima.com:32240 查看效果了&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="https代理">Https代理&lt;/h3>
&lt;p>创建证书&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 生成证书&lt;/span>
&lt;span class="n">openssl&lt;/span> &lt;span class="n">req&lt;/span> &lt;span class="n">-x509&lt;/span> &lt;span class="n">-sha256&lt;/span> &lt;span class="n">-nodes&lt;/span> &lt;span class="n">-days&lt;/span> &lt;span class="n">365&lt;/span> &lt;span class="n">-newkey&lt;/span> &lt;span class="n">rsa&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">2048&lt;/span> &lt;span class="n">-keyout&lt;/span> &lt;span class="n">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="n">-out&lt;/span> &lt;span class="n">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">crt&lt;/span> &lt;span class="n">-subj&lt;/span> &lt;span class="s2">&amp;#34;/C=CN/ST=BJ/L=BJ/O=nginx/CN=itheima.com&amp;#34;&lt;/span>
&lt;span class="c"># 创建密钥&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">secret&lt;/span> &lt;span class="n">tls&lt;/span> &lt;span class="n">tls-secret&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-key&lt;/span> &lt;span class="n">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">key&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-cert&lt;/span> &lt;span class="n">tls&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">crt&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建ingress-https.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">extensions/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ingress&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ingress-https&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tls&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">nginx.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">tomcat.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tls-secret&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定秘钥&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">servicePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat.itheima.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tomcat-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">servicePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f ingress-https.yaml&lt;/span>
&lt;span class="n">ingress&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">extensions&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">ingress-https&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ing ingress-https -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">HOSTS&lt;/span> &lt;span class="n">ADDRESS&lt;/span> &lt;span class="n">PORTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">ingress-https&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">tomcat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">104&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">184&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">38&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">443&lt;/span> &lt;span class="n">2m42s&lt;/span>
&lt;span class="c"># 查看详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe ing ingress-https -n dev&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="n">TLS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">tls-secret&lt;/span> &lt;span class="n">terminates&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">tomcat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>
&lt;span class="n">Rules&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Host&lt;/span> &lt;span class="n">Path&lt;/span> &lt;span class="n">Backends&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">--------&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="p">/&lt;/span> &lt;span class="n">nginx-service&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">98&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">119&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">tomcat&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">itheima&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="p">/&lt;/span> &lt;span class="n">tomcat-service&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">99&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">117&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">120&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c"># 下面可以通过浏览器访问https://nginx.itheima.com:31335 和 https://tomcat.itheima.com:31335来查看了&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第七章 Kubernetes Service 介绍</title><link>/k8s-service.html</link><pubDate>Thu, 28 Oct 2021 17:54:44 +0800</pubDate><guid>/k8s-service.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍kubernetes的流量负载组件：Service。&lt;/p>
&lt;/blockquote>
&lt;h2 id="service介绍">Service介绍&lt;/h2>
&lt;p>​ 在kubernetes中，pod是应用程序的载体，我们可以通过pod的ip来访问应用程序，但是pod的ip地址不是固定的，这也就意味着不方便直接采用pod的ip对服务进行访问。&lt;/p>
&lt;p>​ 为了解决这个问题，kubernetes提供了Service资源，Service会对提供同一个服务的多个pod进行聚合，并且提供一个统一的入口地址。通过访问Service的入口地址就能访问到后面的pod服务。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200408194716912.png?imageslim" alt="">&lt;/p>
&lt;p>​ Service在很多情况下只是一个概念，真正起作用的其实是kube-proxy服务进程，每个Node节点上都运行着一个kube-proxy服务进程。当创建Service的时候会通过api-server向etcd写入创建的service的信息，而kube-proxy会基于监听的机制发现这种Service的变动，然后&lt;strong>它会将最新的Service信息转换成对应的访问规则&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200509121254425.png?imageslim" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 10.97.97.97:80 是service提供的访问入口&lt;/span>
&lt;span class="c"># 当访问这个入口的时候，可以发现后面有三个pod的服务在等待调用，&lt;/span>
&lt;span class="c"># kube-proxy会基于rr（轮询）的策略，将请求分发到其中一个pod上去&lt;/span>
&lt;span class="c"># 这个规则会同时在集群内的所有节点上都生成，所以在任何一个节点上访问都可以。&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@node1&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ipvsadm -Ln&lt;/span>
&lt;span class="n">IP&lt;/span> &lt;span class="n">Virtual&lt;/span> &lt;span class="n">Server&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">4096&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">Prot&lt;/span> &lt;span class="n">LocalAddress&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">Port&lt;/span> &lt;span class="n">Scheduler&lt;/span> &lt;span class="n">Flags&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">RemoteAddress&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">Port&lt;/span> &lt;span class="n">Forward&lt;/span> &lt;span class="n">Weight&lt;/span> &lt;span class="n">ActiveConn&lt;/span> &lt;span class="n">InActConn&lt;/span>
&lt;span class="n">TCP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">rr&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>kube-proxy目前支持三种工作模式:&lt;/p>
&lt;p>&lt;strong>userspace 模式&lt;/strong>&lt;/p>
&lt;p>​ userspace模式下，kube-proxy会为每一个Service创建一个监听端口，发向Cluster IP的请求被Iptables规则重定向到kube-proxy监听的端口上，kube-proxy根据LB算法选择一个提供服务的Pod并和其建立链接，以将请求转发到Pod上。
​ 该模式下，kube-proxy充当了一个四层负责均衡器的角色。由于kube-proxy运行在userspace中，在进行转发处理时会增加内核和用户空间之间的数据拷贝，虽然比较稳定，但是效率比较低。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200509151424280.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>iptables 模式&lt;/strong>&lt;/p>
&lt;p>​ iptables模式下，kube-proxy为service后端的每个Pod创建对应的iptables规则，直接将发向Cluster IP的请求重定向到一个Pod IP。
​ 该模式下kube-proxy不承担四层负责均衡器的角色，只负责创建iptables规则。该模式的优点是较userspace模式效率更高，但不能提供灵活的LB策略，当后端Pod不可用时也无法进行重试。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200509152947714.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>ipvs 模式&lt;/strong>&lt;/p>
&lt;p>​ ipvs模式和iptables类似，kube-proxy监控Pod的变化并创建相应的ipvs规则。ipvs相对iptables转发效率更高。除此以外，ipvs支持更多的LB算法。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200509153731363.png?imageslim" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 此模式必须安装ipvs内核模块，否则会降级为iptables&lt;/span>
&lt;span class="c"># 开启ipvs&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl edit cm kube-proxy -n kube-system&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete pod -l k8s-app=kube-proxy -n kube-system&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@node1&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ipvsadm -Ln&lt;/span>
&lt;span class="n">IP&lt;/span> &lt;span class="n">Virtual&lt;/span> &lt;span class="n">Server&lt;/span> &lt;span class="n">version&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">4096&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">Prot&lt;/span> &lt;span class="n">LocalAddress&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">Port&lt;/span> &lt;span class="n">Scheduler&lt;/span> &lt;span class="n">Flags&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">RemoteAddress&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">Port&lt;/span> &lt;span class="n">Forward&lt;/span> &lt;span class="n">Weight&lt;/span> &lt;span class="n">ActiveConn&lt;/span> &lt;span class="n">InActConn&lt;/span>
&lt;span class="n">TCP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">rr&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="service使用">Service使用&lt;/h2>
&lt;h3 id="实验环境准备">实验环境准备&lt;/h3>
&lt;p>在使用service之前，首先利用Deployment创建出3个pod，注意要为pod设置&lt;code>app=nginx-pod&lt;/code>的标签&lt;/p>
&lt;p>创建deployment.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">apiVersion: apps/v1
kind: Deployment
metadata:
name: pc-deployment
namespace: dev
spec:
replicas: 3
selector:
matchLabels:
app: nginx-pod
template:
metadata:
labels:
app: nginx-pod
spec:
containers:
- name: nginx
image: nginx:1.17.1
ports:
- containerPort: 80
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f deployment.yaml&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide --show-labels&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="n">LABELS&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8p84h&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984-vx8vx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">66cb59b984-wnncx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="c"># 为了方便后面的测试，修改下三台nginx的index.html页面（三台修改的IP地址不一致）&lt;/span>
&lt;span class="c"># kubectl exec -it pc-deployment-66cb59b984-8p84h -n dev /bin/sh&lt;/span>
&lt;span class="c"># echo &amp;#34;10.244.1.40&amp;#34; &amp;gt; /usr/share/nginx/html/index.html&lt;/span>
&lt;span class="c">#修改完毕之后，访问测试&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.1.40&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.2.33&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.1.39&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="clusterip类型的service">ClusterIP类型的Service&lt;/h3>
&lt;p>创建service-clusterip.yaml文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-clusterip&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10.97.97.97&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># service的ip地址，如果不写，默认会生成一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Service端口 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># pod端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f service-clusterip.yaml&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-clusterip&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">service-clusterip&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">13s&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="c"># 查看service的详细信息&lt;/span>
&lt;span class="c"># 在这里有一个Endpoints列表，里面就是当前service可以负载到的服务入口&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe svc service-clusterip -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">service-clusterip&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Selector&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="n">Type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">ClusterIP&lt;/span>
&lt;span class="n">IP&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>
&lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unset&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">TargetPort&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">Endpoints&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>
&lt;span class="n">Session&lt;/span> &lt;span class="n">Affinity&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">None&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c"># 查看ipvs的映射规则&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ipvsadm -Ln&lt;/span>
&lt;span class="n">TCP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">rr&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="c"># 访问10.97.97.97:80观察效果&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.97.97.97:80&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Endpoint&lt;/strong>&lt;/p>
&lt;p>Endpoint是kubernetes中的一个资源对象，存储在etcd中，用来记录一个service对应的所有pod的访问地址，它是根据service配置文件中selector描述产生的。&lt;/p>
&lt;p>一个Service由一组Pod组成，这些Pod通过Endpoints暴露出来，&lt;strong>Endpoints是实现实际服务的端点集合&lt;/strong>。换句话说，service和pod之间的联系是通过endpoints实现的。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200509191917069.png?imageslim" alt="image-20200509191917069">&lt;/p>
&lt;p>&lt;strong>负载分发策略&lt;/strong>&lt;/p>
&lt;p>对Service的访问被分发到了后端的Pod上去，目前kubernetes提供了两种负载分发策略：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果不定义，默认使用kube-proxy的策略，比如随机、轮询&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于客户端地址的会话保持模式，即来自同一个客户端发起的所有请求都会转发到固定的一个Pod上&lt;/p>
&lt;p>此模式可以使在spec中添加&lt;code>sessionAffinity:ClientIP&lt;/code>选项&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 查看ipvs的映射规则【rr 轮询】&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ipvsadm -Ln&lt;/span>
&lt;span class="n">TCP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">rr&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="c"># 循环访问测试&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># while true;do curl 10.97.97.97:80; sleep 5; done;&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="c"># 修改分发策略----sessionAffinity:ClientIP&lt;/span>
&lt;span class="c"># 查看ipvs规则【persistent 代表持久】&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ipvsadm -Ln&lt;/span>
&lt;span class="n">TCP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">97&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">rr&lt;/span> &lt;span class="n">persistent&lt;/span> &lt;span class="n">10800&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="p">-&amp;gt;&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span> &lt;span class="n">Masq&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="c"># 循环访问测试&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># while true;do curl 10.97.97.97; sleep 5; done;&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;span class="c"># 删除service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f service-clusterip.yaml&lt;/span>
&lt;span class="n">service&lt;/span> &lt;span class="s2">&amp;#34;service-clusterip&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="headliness类型的service">HeadLiness类型的Service&lt;/h3>
&lt;p>在某些场景中，开发人员可能不想使用Service提供的负载均衡功能，而希望自己来控制负载均衡策略，针对这种情况，kubernetes提供了HeadLiness Service，这类Service不会分配Cluster IP，如果想要访问service，只能通过service的域名进行查询。&lt;/p>
&lt;p>创建service-headliness.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-headliness&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">None&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将clusterIP设置为None，即可创建headliness Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f service-headliness.yaml&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-headliness&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 获取service， 发现CLUSTER-IP未分配&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc service-headliness -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">service-headliness&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">None&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">11s&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="c"># 查看service详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe svc service-headliness -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">service-headliness&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Selector&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="n">Type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">ClusterIP&lt;/span>
&lt;span class="n">IP&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">None&lt;/span>
&lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unset&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">TargetPort&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">Endpoints&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">80&lt;/span>
&lt;span class="n">Session&lt;/span> &lt;span class="n">Affinity&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">None&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c"># 查看域名的解析情况&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl exec -it pc-deployment-66cb59b984-8p84h -n dev /bin/sh&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># cat /etc/resolv.conf&lt;/span>
&lt;span class="n">nameserver&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">96&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">10&lt;/span>
&lt;span class="n">search&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span> &lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span> &lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># dig @10.96.0.10 service-headliness.dev.svc.cluster.local&lt;/span>
&lt;span class="n">service-headliness&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">40&lt;/span>
&lt;span class="n">service-headliness&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">39&lt;/span>
&lt;span class="n">service-headliness&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">33&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="nodeport类型的service">NodePort类型的Service&lt;/h3>
&lt;p>在之前的样例中，创建的Service的ip地址只有集群内部才可以访问，如果希望将Service暴露给集群外部使用，那么就要使用到另外一种类型的Service，称为NodePort类型。NodePort的工作原理其实就是&lt;strong>将service的端口映射到Node的一个端口上&lt;/strong>，然后就可以通过&lt;code>NodeIp:NodePort&lt;/code>来访问service了。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200620175731338.png?imageslim" alt="">&lt;/p>
&lt;p>创建service-nodeport.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-nodeport&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NodePort&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># service类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30002&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定绑定的node的端口(默认的取值范围是：30000-32767), 如果不指定，会默认分配&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f service-nodeport.yaml&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-nodeport&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">service-nodeport&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">105&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">64&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">191&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">30002&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="c"># 接下来可以通过电脑主机的浏览器去访问集群中任意一个nodeip的30002端口，即可访问到pod&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="loadbalancer类型的service">LoadBalancer类型的Service&lt;/h3>
&lt;p>LoadBalancer和NodePort很相似，目的都是向外部暴露一个端口，区别在于LoadBalancer会在集群的外部再来做一个负载均衡设备，而这个设备需要外部环境支持的，外部服务发送到这个设备上的请求，会被设备负载之后转发到集群中。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200510103945494.png?imageslim" alt="">&lt;/p>
&lt;h3 id="externalname类型的service">ExternalName类型的Service&lt;/h3>
&lt;p>ExternalName类型的Service用于引入集群外部的服务，它通过&lt;code>externalName&lt;/code>属性指定外部一个服务的地址，然后在集群内部访问此service就可以访问到外部的服务了。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200510113311209.png?imageslim" alt="">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-externalname&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ExternalName&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># service类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">externalName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">www.baidu.com &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#改成ip地址也可以&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f service-externalname.yaml&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">service-externalname&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 域名解析&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># dig @10.96.0.10 service-externalname.dev.svc.cluster.local&lt;/span>
&lt;span class="n">service-externalname&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">svc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cluster&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">CNAME&lt;/span> &lt;span class="n">www&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">baidu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="n">www&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">baidu&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">CNAME&lt;/span> &lt;span class="n">www&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shifen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="n">www&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shifen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="n">39&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">156&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">18&lt;/span>
&lt;span class="n">www&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">shifen&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">30&lt;/span> &lt;span class="k">IN&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="n">39&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">156&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">66&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">14&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第六章 Kubernetes Pod 控制器</title><link>/k8s-pod-controller.html</link><pubDate>Thu, 28 Oct 2021 17:45:21 +0800</pubDate><guid>/k8s-pod-controller.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍各种Pod控制器的详细使用。&lt;/p>
&lt;/blockquote>
&lt;h2 id="pod控制器介绍">Pod控制器介绍&lt;/h2>
&lt;p>Pod是kubernetes的最小管理单元，在kubernetes中，按照pod的创建方式可以将其分为两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>自主式pod：kubernetes直接创建出来的Pod，这种pod删除后就没有了，也不会重建&lt;/p>
&lt;/li>
&lt;li>
&lt;p>控制器创建的pod：kubernetes通过控制器创建的pod，这种pod删除了之后还会自动重建&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>&lt;code>什么是Pod控制器&lt;/code>&lt;/strong>&lt;/p>
&lt;p>Pod控制器是管理pod的中间层，使用Pod控制器之后，只需要告诉Pod控制器，想要多少个什么样的Pod就可以了，它会创建出满足条件的Pod并确保每一个Pod资源处于用户期望的目标状态。如果Pod资源在运行中出现故障，它会基于指定策略重新编排Pod。&lt;/p>
&lt;/blockquote>
&lt;p>在kubernetes中，有很多类型的pod控制器，每种都有自己的适合的场景，常见的有下面这些：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ReplicationController：比较原始的pod控制器，已经被废弃，由ReplicaSet替代&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ReplicaSet：保证副本数量一直维持在期望值，并支持pod数量扩缩容，镜像版本升级&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Deployment：通过控制ReplicaSet来控制Pod，并支持滚动升级、回退版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Horizontal Pod Autoscaler：可以根据集群负载自动水平调整Pod的数量，实现削峰填谷&lt;/p>
&lt;/li>
&lt;li>
&lt;p>DaemonSet：在集群中的指定Node上运行且仅运行一个副本，一般用于守护进程类的任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Job：它创建出来的pod只要完成任务就立即退出，不需要重启或重建，用于执行一次性任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cronjob：它创建的Pod负责周期性任务控制，不需要持续后台运行&lt;/p>
&lt;/li>
&lt;li>
&lt;p>StatefulSet：管理有状态应用&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="replicasetrs">ReplicaSet(RS)&lt;/h2>
&lt;p>ReplicaSet的主要作用是&lt;strong>保证一定数量的pod正常运行&lt;/strong>，它会持续监听这些Pod的运行状态，一旦Pod发生故障，就会重启或重建。同时它还支持对pod数量的扩缩容和镜像版本的升降级。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200612005334159.png?imageslim" alt="">&lt;/p>
&lt;p>ReplicaSet的资源清单文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ReplicaSet&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># rs名称 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rs&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 详情描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 副本数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择器，通过它指定该控制器管理哪些pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Labels匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Expressions匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="nt">key: app, operator: In, values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">nginx-pod]}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 模板，当副本数量不足时，会根据下面的模板创建pod副本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这里面，需要新了解的配置项就是&lt;code>spec&lt;/code>下面几个选项：&lt;/p>
&lt;ul>
&lt;li>replicas：指定副本数量，其实就是当前rs创建出来的pod的数量，默认为1&lt;/li>
&lt;li>selector：选择器，它的作用是建立pod控制器和pod之间的关联关系，采用的Label Selector机制
&lt;ul>
&lt;li>在pod模板上定义label，在控制器上定义选择器，就可以表明当前控制器能管理哪些pod了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>template：模板，就是当前控制器创建pod所使用的模板板，里面其实就是前一章学过的pod的定义&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>创建ReplicaSet&lt;/strong>&lt;/p>
&lt;p>创建pc-replicaset.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ReplicaSet &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-replicaset&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建rs&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pc-replicaset.yaml&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看rs&lt;/span>
&lt;span class="c"># DESIRED:期望副本数量 &lt;/span>
&lt;span class="c"># CURRENT:当前副本数量 &lt;/span>
&lt;span class="c"># READY:已经准备好提供服务的副本数量&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs pc-replicaset -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">22s&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx-pod&lt;/span>
&lt;span class="c"># 查看当前控制器创建出来的pod&lt;/span>
&lt;span class="c"># 这里发现控制器创建出来的pod的名称是在控制器名称后面拼接了-xxxxx随机码&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6vmvt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">54s&lt;/span>
&lt;span class="n">pc-replicaset-fmb8f&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">54s&lt;/span>
&lt;span class="n">pc-replicaset-snrk2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">54s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>扩缩容&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 编辑rs的副本数量，修改spec:replicas: 6即可&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl edit rs pc-replicaset -n dev&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">edited&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6vmvt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">114m&lt;/span>
&lt;span class="n">pc-replicaset-cftnp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">10s&lt;/span>
&lt;span class="n">pc-replicaset-fjlm6&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">10s&lt;/span>
&lt;span class="n">pc-replicaset-fmb8f&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">114m&lt;/span>
&lt;span class="n">pc-replicaset-s2whj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">10s&lt;/span>
&lt;span class="n">pc-replicaset-snrk2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">114m&lt;/span>
&lt;span class="c"># 当然也可以直接使用命令实现&lt;/span>
&lt;span class="c"># 使用scale命令实现扩缩容， 后面--replicas=n直接指定目标数量即可&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl scale rs pc-replicaset --replicas=2 -n dev&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">scaled&lt;/span>
&lt;span class="c"># 命令运行完毕，立即查看，发现已经有4个开始准备退出了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6vmvt&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">118m&lt;/span>
&lt;span class="n">pc-replicaset-cftnp&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m17s&lt;/span>
&lt;span class="n">pc-replicaset-fjlm6&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m17s&lt;/span>
&lt;span class="n">pc-replicaset-fmb8f&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">118m&lt;/span>
&lt;span class="n">pc-replicaset-s2whj&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m17s&lt;/span>
&lt;span class="n">pc-replicaset-snrk2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">118m&lt;/span>
&lt;span class="c">#稍等片刻，就只剩下2个了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-replicaset-fmb8f&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">119m&lt;/span>
&lt;span class="n">pc-replicaset-snrk2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">119m&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>镜像升级&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 编辑rs的容器镜像 - image: nginx:1.17.2&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl edit rs pc-replicaset -n dev&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">edited&lt;/span>
&lt;span class="c"># 再次查看，发现镜像版本已经变更了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">140m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="c"># 同样的道理，也可以使用命令完成这个工作&lt;/span>
&lt;span class="c"># kubectl set image rs rs名称 容器=镜像版本 -n namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl set image rs pc-replicaset nginx=nginx:1.17.1 -n dev&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="n">updated&lt;/span>
&lt;span class="c"># 再次查看，发现镜像版本已经变更了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="n">pc-replicaset&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">145m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>删除ReplicaSet&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 使用kubectl delete命令会删除此RS以及它管理的Pod&lt;/span>
&lt;span class="c"># 在kubernetes删除RS前，会将RS的replicasclear调整为0，等待所有的Pod被删除后，在执行RS对象的删除&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete rs pc-replicaset -n dev&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;pc-replicaset&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n dev -o wide&lt;/span>
&lt;span class="n">No&lt;/span> &lt;span class="n">resources&lt;/span> &lt;span class="n">found&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">dev&lt;/span> &lt;span class="n">namespace&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c"># 如果希望仅仅删除RS对象（保留Pod），可以使用kubectl delete命令时添加--cascade=false选项（不推荐）。&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete rs pc-replicaset -n dev --cascade=false&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;pc-replicaset&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-replicaset-cl82j&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">75s&lt;/span>
&lt;span class="n">pc-replicaset-dslhb&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">75s&lt;/span>
&lt;span class="c"># 也可以使用yaml直接删除(推荐)&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pc-replicaset.yaml&lt;/span>
&lt;span class="n">replicaset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;pc-replicaset&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="deploymentdeploy">Deployment(Deploy)&lt;/h2>
&lt;p>为了更好的解决服务编排的问题，kubernetes在V1.2版本开始，引入了Deployment控制器。值得一提的是，这种控制器并不直接管理pod，而是通过管理ReplicaSet来简介管理Pod，即：Deployment管理ReplicaSet，ReplicaSet管理Pod。所以Deployment比ReplicaSet功能更加强大。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200612005524778.png?imageslim" alt="">&lt;/p>
&lt;p>Deployment主要功能有下面几个：&lt;/p>
&lt;ul>
&lt;li>支持ReplicaSet的所有功能&lt;/li>
&lt;li>支持发布的停止、继续&lt;/li>
&lt;li>支持滚动升级和回滚版本&lt;/li>
&lt;/ul>
&lt;p>Deployment的资源清单文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># rs名称 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 详情描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 副本数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">revisionHistoryLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 保留历史版本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">paused&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 暂停部署，默认是false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">progressDeadlineSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">600&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 部署超时时间（s），默认是600&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RollingUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 滚动更新策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">rollingUpdate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 滚动更新&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxSurge&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="l">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 最大额外可以存在的副本数，可以为百分比，也可以为整数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxUnavailable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="l">%&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 最大不可用状态的 Pod 的最大值，可以为百分比，也可以为整数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择器，通过它指定该控制器管理哪些pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Labels匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Expressions匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="nt">key: app, operator: In, values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">nginx-pod]}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 模板，当副本数量不足时，会根据下面的模板创建pod副本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>创建deployment&lt;/strong>&lt;/p>
&lt;p>创建pc-deployment.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建deployment&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pc-deployment.yaml --record=true&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看deployment&lt;/span>
&lt;span class="c"># UP-TO-DATE 最新版本的pod的数量&lt;/span>
&lt;span class="c"># AVAILABLE 当前可用的pod的数量&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">15s&lt;/span>
&lt;span class="c"># 查看rs&lt;/span>
&lt;span class="c"># 发现rs的名称是在原来deployment的名字后面添加了一个10位数的随机串&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">23s&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-d2c8n&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">107s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-smpvp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">107s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-wvjd8&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">107s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>扩缩容&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 变更副本数量为5个&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl scale deploy pc-deployment --replicas=5 -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">scaled&lt;/span>
&lt;span class="c"># 查看deployment&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">5&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">5&lt;/span> &lt;span class="n">5&lt;/span> &lt;span class="n">5&lt;/span> &lt;span class="n">2m&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-d2c8n&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m19s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-jxmdq&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">94s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-mktqv&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">93s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-smpvp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m19s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-wvjd8&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4m19s&lt;/span>
&lt;span class="c"># 编辑deployment的副本数量，修改spec:replicas: 4即可&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl edit deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">edited&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-d2c8n&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m23s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-jxmdq&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m38s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-smpvp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m23s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78-wvjd8&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m23s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>镜像更新&lt;/strong>&lt;/p>
&lt;p>deployment支持两种更新策略:&lt;code>重建更新&lt;/code>和&lt;code>滚动更新&lt;/code>,可以通过&lt;code>strategy&lt;/code>指定策略类型,支持两个属性:&lt;/p>
&lt;p>strategy：指定新的Pod替换旧的Pod的策略， 支持两个属性：
type：指定策略类型，支持两种策略
Recreate：在创建出新的Pod之前会先杀掉所有已存在的Pod
RollingUpdate：滚动更新，就是杀死一部分，就启动一部分，在更新过程中，存在两个版本Pod
rollingUpdate：当type为RollingUpdate时生效，用于为RollingUpdate设置参数，支持两个属性：
maxUnavailable：用来指定在升级过程中不可用Pod的最大数量，默认为25%。
maxSurge： 用来指定在升级过程中可以超过期望的Pod的最大数量，默认为25%。&lt;/p>
&lt;p>重建更新&lt;/p>
&lt;ol>
&lt;li>编辑pc-deployment.yaml,在spec节点下添加更新策略&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Recreate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 重建更新&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>创建deploy进行验证&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 变更镜像&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl set image deployment pc-deployment nginx=nginx:1.17.2 -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="n">updated&lt;/span>
&lt;span class="c"># 观察升级过程&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">65qcw&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-w5nzv&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-xpt7w&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-xpt7w&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">41s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">65qcw&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">41s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-w5nzv&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">41s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-grn8z&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-hbl4v&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">67nz2&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-grn8z&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-hbl4v&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">67nz2&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-grn8z&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">1s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">67nz2&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">1s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b-hbl4v&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>滚动更新&lt;/p>
&lt;ol>
&lt;li>编辑pc-deployment.yaml,在spec节点下添加更新策略&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">strategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RollingUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 滚动更新策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">rollingUpdate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxSurge&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">25&lt;/span>&lt;span class="l">% &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxUnavailable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">25&lt;/span>&lt;span class="l">%&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>创建deploy进行验证&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 变更镜像&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl set image deployment pc-deployment nginx=nginx:1.17.3 -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="n">updated&lt;/span>
&lt;span class="c"># 观察升级过程&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment-c848d767&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8rbzt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31m&lt;/span>
&lt;span class="n">pc-deployment-c848d767-h4p68&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31m&lt;/span>
&lt;span class="n">pc-deployment-c848d767-hlmz4&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31m&lt;/span>
&lt;span class="n">pc-deployment-c848d767-rrqcn&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">31m&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">226rx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">226rx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">226rx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">1s&lt;/span>
&lt;span class="n">pc-deployment-c848d767-h4p68&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">34m&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-cnd44&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-cnd44&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-cnd44&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;span class="n">pc-deployment-c848d767-hlmz4&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">34m&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-px48p&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-px48p&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-px48p&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment-c848d767&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8rbzt&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">34m&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-dkmqp&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-dkmqp&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44-dkmqp&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;span class="n">pc-deployment-c848d767-rrqcn&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">34m&lt;/span>
&lt;span class="c"># 至此，新版本的pod创建完毕，就版本的pod销毁完毕&lt;/span>
&lt;span class="c"># 中间过程是滚动进行的，也就是边销毁边创建&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>滚动更新的过程：&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200416140251491.png?imageslim" alt="">&lt;/p>
&lt;p>镜像更新中rs的变化:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 查看rs,发现原来的rs的依旧存在，只是pod数量变为了0，而后又新产生了一个rs，pod数量为4&lt;/span>
&lt;span class="c"># 其实这就是deployment能够进行版本回退的奥妙所在，后面会详细解释&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m37s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b11&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m37s&lt;/span>
&lt;span class="n">pc-deployment-c848d76789&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">72s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>版本回退&lt;/strong>&lt;/p>
&lt;p>deployment支持版本升级过程中的暂停、继续功能以及版本回退等诸多功能，下面具体来看.&lt;/p>
&lt;p>kubectl rollout： 版本升级相关功能，支持下面的选项：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>status 显示当前升级状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>history 显示 升级历史记录&lt;/p>
&lt;/li>
&lt;li>
&lt;p>pause 暂停版本升级过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>resume 继续已经暂停的版本升级过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>restart 重启版本升级过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>undo 回滚到上一级版本（可以使用&amp;ndash;to-revision回滚到指定版本）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 查看当前升级版本的状态&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl rollout status deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span> &lt;span class="s2">&amp;#34;pc-deployment&amp;#34;&lt;/span> &lt;span class="n">successfully&lt;/span> &lt;span class="n">rolled&lt;/span> &lt;span class="n">out&lt;/span>
&lt;span class="c"># 查看升级历史记录&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl rollout history deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span>
&lt;span class="n">REVISION&lt;/span> &lt;span class="n">CHANGE-CAUSE&lt;/span>
&lt;span class="n">1&lt;/span> &lt;span class="n">kubectl&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-filename&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">yaml&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-record&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">true&lt;/span>
&lt;span class="n">2&lt;/span> &lt;span class="n">kubectl&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-filename&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">yaml&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-record&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">true&lt;/span>
&lt;span class="n">3&lt;/span> &lt;span class="n">kubectl&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-filename&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">yaml&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-record&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">true&lt;/span>
&lt;span class="c"># 可以发现有三次版本记录，说明完成过两次升级&lt;/span>
&lt;span class="c"># 版本回滚&lt;/span>
&lt;span class="c"># 这里直接使用--to-revision=1回滚到了1版本， 如果省略这个选项，就是回退到上个版本，就是2版本&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl rollout undo deployment pc-deployment --to-revision=1 -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">rolled&lt;/span> &lt;span class="n">back&lt;/span>
&lt;span class="c"># 查看发现，通过nginx镜像版本可以发现到了第一版&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span>
&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">74m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="c"># 查看rs，发现第一个rs中有4个pod运行，后面两个版本的rs中pod为运行&lt;/span>
&lt;span class="c"># 其实deployment之所以可是实现版本的回滚，就是通过记录下历史rs来实现的，&lt;/span>
&lt;span class="c"># 一旦想回滚到哪个版本，只需要将当前版本pod数量降为0，然后将回滚版本的pod提升为目标数量就可以了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6696798b78&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">78m&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">966bf7f44&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">37m&lt;/span>
&lt;span class="n">pc-deployment-c848d767&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">71m&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>金丝雀发布&lt;/strong>&lt;/p>
&lt;p>Deployment控制器支持控制更新过程中的控制，如“暂停(pause)”或“继续(resume)”更新操作。&lt;/p>
&lt;p>比如有一批新的Pod资源创建完成后立即暂停更新过程，此时，仅存在一部分新版本的应用，主体部分还是旧的版本。然后，再筛选一小部分的用户请求路由到新版本的Pod应用，继续观察能否稳定地按期望的方式运行。确定没问题之后再继续完成余下的Pod资源滚动更新，否则立即回滚更新操作。这就是所谓的金丝雀发布。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 更新deployment的版本，并配置暂停deployment&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl set image deploy pc-deployment nginx=nginx:1.17.4 -n dev &amp;amp;&amp;amp; kubectl rollout pause deployment pc-deployment -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="n">updated&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">paused&lt;/span>
&lt;span class="c">#观察更新状态&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl rollout status deploy pc-deployment -n dev　&lt;/span>
&lt;span class="n">Waiting&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">deployment&lt;/span> &lt;span class="s2">&amp;#34;pc-deployment&amp;#34;&lt;/span> &lt;span class="n">rollout&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">finish&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">out&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">new&lt;/span> &lt;span class="n">replicas&lt;/span> &lt;span class="n">have&lt;/span> &lt;span class="n">been&lt;/span> &lt;span class="n">updated&lt;/span>&lt;span class="p">...&lt;/span>
&lt;span class="c"># 监控更新的过程，可以看到已经新增了一个资源，但是并未按照预期的状态去删除一个旧的资源，就是因为使用了pause暂停命令&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">19m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">14m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">3m16s&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">4&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-rj8sq&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m33s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-ttwgg&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m35s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9-v4wvc&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m34s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">996rt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3m31s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb-j2gtj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3m31s&lt;/span>
&lt;span class="c"># 确保更新的pod没问题了，继续更新&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl rollout resume deploy pc-deployment -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-deployment&lt;/span> &lt;span class="n">resumed&lt;/span>
&lt;span class="c"># 查看最后的更新情况&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get rs -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5d89bdfbf9&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">21m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">675d469f8b&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">16m&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">5m11s&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">4&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7bfwh&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">37s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">996rt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m27s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb-j2gtj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5m27s&lt;/span>
&lt;span class="n">pc-deployment&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6c9f56fcfb-rf84v&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">37s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>删除Deployment&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 删除deployment，其下的rs和pod也将被删除&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pc-deployment.yaml&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;pc-deployment&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="horizontal-pod-autoscalerhpa">Horizontal Pod Autoscaler(HPA)&lt;/h2>
&lt;p>在前面的课程中，我们已经可以实现通过手工执行&lt;code>kubectl scale&lt;/code>命令实现Pod扩容或缩容，但是这显然不符合Kubernetes的定位目标&amp;ndash;自动化、智能化。 Kubernetes期望可以实现通过监测Pod的使用情况，实现pod数量的自动调整，于是就产生了Horizontal Pod Autoscaler（HPA）这种控制器。&lt;/p>
&lt;p>HPA可以获取每个Pod利用率，然后和HPA中定义的指标进行对比，同时计算出需要伸缩的具体值，最后实现Pod的数量的调整。其实HPA与之前的Deployment一样，也属于一种Kubernetes资源对象，它通过追踪分析RC控制的所有目标Pod的负载变化情况，来确定是否需要针对性地调整目标Pod的副本数，这是HPA的实现原理。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200608155858271.png?imageslim" alt="">&lt;/p>
&lt;p>接下来，我们来做一个实验&lt;/p>
&lt;p>&lt;strong>1 安装metrics-server&lt;/strong>&lt;/p>
&lt;p>metrics-server可以用来收集集群中的资源使用情况&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 安装git&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># yum install git -y&lt;/span>
&lt;span class="c"># 获取metrics-server, 注意使用的版本&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># git clone -b v0.3.6 https://github.com/kubernetes-incubator/metrics-server&lt;/span>
&lt;span class="c"># 修改deployment, 注意修改的是镜像和初始化参数&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># cd /root/metrics-server/deploy/1.8+/&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># vim metrics-server-deployment.yaml&lt;/span>
&lt;span class="n">按图中添加下面选项&lt;/span>
&lt;span class="n">hostNetwork&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">true&lt;/span>
&lt;span class="n">image&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">registry&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">cn-hangzhou&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">aliyuncs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">google_containers&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">metrics-server-amd64&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">v0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">6&lt;/span>
&lt;span class="n">args&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-kubelet-insecure-tls&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-kubelet-preferred-address-types&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">InternalIP&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">Hostname&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">InternalDNS&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ExternalDNS&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">ExternalIP&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200608163326496.png?imageslim" alt="image-20200608163326496">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 安装metrics-server&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl apply -f ./&lt;/span>
&lt;span class="c"># 查看pod运行情况&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl get pod -n kube-system&lt;/span>
&lt;span class="n">metrics-server&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6b976979db&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">2xwbj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">90s&lt;/span>
&lt;span class="c"># 使用kubectl top node 查看资源使用情况&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl top node&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">CPU&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cores&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">CPU&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">MEMORY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">MEMORY&lt;/span>&lt;span class="p">%&lt;/span>
&lt;span class="n">master&lt;/span> &lt;span class="n">98m&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1067Mi&lt;/span> &lt;span class="n">62&lt;/span>&lt;span class="p">%&lt;/span>
&lt;span class="n">node1&lt;/span> &lt;span class="n">27m&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">727Mi&lt;/span> &lt;span class="n">42&lt;/span>&lt;span class="p">%&lt;/span>
&lt;span class="n">node2&lt;/span> &lt;span class="n">34m&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">800Mi&lt;/span> &lt;span class="n">46&lt;/span>&lt;span class="p">%&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl top pod -n kube-system&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">CPU&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cores&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">MEMORY&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">coredns&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6955765f44&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7ptsb&lt;/span> &lt;span class="n">3m&lt;/span> &lt;span class="n">9Mi&lt;/span>
&lt;span class="n">coredns&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6955765f44-vcwr5&lt;/span> &lt;span class="n">3m&lt;/span> &lt;span class="n">8Mi&lt;/span>
&lt;span class="n">etcd-master&lt;/span> &lt;span class="n">14m&lt;/span> &lt;span class="n">145Mi&lt;/span>
&lt;span class="p">...&lt;/span>
&lt;span class="c"># 至此,metrics-server安装完成&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>2 准备deployment和servie&lt;/strong>&lt;/p>
&lt;p>为了操作简单,直接使用命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建deployment &lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl run nginx --image=nginx:latest --requests=cpu=100m -n dev&lt;/span>
&lt;span class="c"># 创建service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl expose deployment nginx --type=NodePort --port=80 -n dev&lt;/span>
&lt;span class="c"># 查看&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl get deployment,pod,svc -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">47s&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-bh8dr&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">47s&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">57&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">248&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">31136&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">35s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>3 部署HPA&lt;/strong>&lt;/p>
&lt;p>创建pc-hpa.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">autoscaling/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HorizontalPodAutoscaler&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-hpa&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">minReplicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#最小pod数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxReplicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#最大pod数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetCPUUtilizationPercentage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># CPU使用率指标&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scaleTargetRef&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定要控制的nginx信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx &lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建hpa&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl create -f pc-hpa.yaml&lt;/span>
&lt;span class="n">horizontalpodautoscaler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">autoscaling&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看hpa&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">+]&lt;/span>&lt;span class="c"># kubectl get hpa -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">REFERENCE&lt;/span> &lt;span class="n">TARGETS&lt;/span> &lt;span class="n">MINPODS&lt;/span> &lt;span class="n">MAXPODS&lt;/span> &lt;span class="n">REPLICAS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">62s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>4 测试&lt;/strong>&lt;/p>
&lt;p>使用压测工具对service地址&lt;code>192.168.109.100:31136&lt;/code>进行压测，然后通过控制台查看hpa和pod的变化&lt;/p>
&lt;p>&lt;code>hpa变化&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get hpa -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">REFERENCE&lt;/span> &lt;span class="n">TARGETS&lt;/span> &lt;span class="n">MINPODS&lt;/span> &lt;span class="n">MAXPODS&lt;/span> &lt;span class="n">REPLICAS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">4m11s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">5m19s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">22&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">6m50s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">22&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">7m5s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">22&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">7m21s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">6&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">7m51s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">9m6s&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">13m&lt;/span>
&lt;span class="n">pc-hpa&lt;/span> &lt;span class="n">Deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">%/&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">10&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>deployment变化&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deployment -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">11m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">13m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">13m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">13m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">4&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">13m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">4&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">5&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">5&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">6&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">6&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">7&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">7&lt;/span> &lt;span class="n">14m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">15m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">20m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">8&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">8&lt;/span> &lt;span class="n">20m&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">20m&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>pod变化&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-bh8dr&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">11m&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-cpgrv&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8zhwk&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-rr9bn&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-cpgrv&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8zhwk&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-rr9bn&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-m9gsj&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-g56qb&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-sl9c6&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-fgst7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-g56qb&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-m9gsj&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-sl9c6&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-fgst7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8zhwk&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">19s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-rr9bn&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">30s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-m9gsj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">21s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-cpgrv&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">47s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-sl9c6&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">33s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-g56qb&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">48s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-fgst7&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">66s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-fgst7&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6m50s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">8zhwk&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m5s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-cpgrv&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m5s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-g56qb&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6m50s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-rr9bn&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">7m5s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-m9gsj&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6m50s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7df9756ccc-sl9c6&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Terminating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6m50s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="daemonsetds">DaemonSet(DS)&lt;/h2>
&lt;p>DaemonSet类型的控制器可以保证在集群中的每一台（或指定）节点上都运行一个副本。一般适用于日志收集、节点监控等场景。也就是说，如果一个Pod提供的功能是节点级别的（每个节点都需要且只需要一个），那么这类Pod就适合使用DaemonSet类型的控制器创建。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200612010223537.png?imageslim" alt="">&lt;/p>
&lt;p>DaemonSet控制器的特点：&lt;/p>
&lt;ul>
&lt;li>每当向集群中添加一个节点时，指定的 Pod 副本也将添加到该节点上&lt;/li>
&lt;li>当节点从集群中移除时，Pod 也就被垃圾回收了&lt;/li>
&lt;/ul>
&lt;p>下面先来看下DaemonSet的资源清单文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DaemonSet&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># rs名称 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">daemonset&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 详情描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">revisionHistoryLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 保留历史版本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">updateStrategy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 更新策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">RollingUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 滚动更新策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">rollingUpdate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 滚动更新&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">maxUnavailable&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 最大不可用状态的 Pod 的最大值，可以为百分比，也可以为整数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择器，通过它指定该控制器管理哪些pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Labels匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Expressions匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="nt">key: app, operator: In, values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">nginx-pod]}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 模板，当副本数量不足时，会根据下面的模板创建pod副本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建pc-daemonset.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">DaemonSet &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-daemonset&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建daemonset&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pc-daemonset.yaml&lt;/span>
&lt;span class="n">daemonset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-daemonset&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看daemonset&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ds -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">DESIRED&lt;/span> &lt;span class="n">CURRENT&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span>
&lt;span class="n">pc-daemonset&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">24s&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="c"># 查看pod,发现在每个Node上都运行一个pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">pc-daemonset&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">9bck8&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">37s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">43&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">pc-daemonset-k224w&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">37s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">74&lt;/span> &lt;span class="n">node2&lt;/span>
&lt;span class="c"># 删除daemonset&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pc-daemonset.yaml&lt;/span>
&lt;span class="n">daemonset&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;pc-daemonset&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="job">Job&lt;/h2>
&lt;p>Job，主要用于负责**批量处理(一次要处理指定数量任务)&lt;strong>短暂的&lt;/strong>一次性(每个任务仅运行一次就结束)**任务。Job特点如下：&lt;/p>
&lt;ul>
&lt;li>当Job创建的pod执行成功结束时，Job将记录成功结束的pod数量&lt;/li>
&lt;li>当成功结束的pod达到指定的数量时，Job将完成执行&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200618213054113.png?imageslim" alt="">&lt;/p>
&lt;p>Job的资源清单文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">batch/v1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Job&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># rs名称 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">job&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 详情描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">completions: 1 # 指定job需要成功运行Pods的次数。默认值&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">parallelism: 1 # 指定job在任一时刻应该并发运行Pods的数量。默认值&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">activeDeadlineSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定job可运行的时间期限，超过时间还未结束，系统将会尝试进行终止。&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backoffLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定job失败后进行重试的次数。默认是6&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">manualSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 是否可以使用selector选择器选择pod，默认是false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 选择器，通过它指定该控制器管理哪些pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Labels匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Expressions匹配规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="nt">key: app, operator: In, values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">counter-pod]}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 模板，当副本数量不足时，会根据下面的模板创建pod副本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 重启策略只能设置为Never或者OnFailure&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 2;done&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于重启策略设置的说明：
如果指定为OnFailure，则job会在pod出现故障时重启容器，而不是创建pod，failed次数不变
如果指定为Never，则job会在pod出现故障时创建新的pod，并且故障pod不会消失，也不会重启，failed次数加1
如果指定为Always的话，就意味着一直重启，意味着job任务会重复去执行了，当然不对，所以不能设置为Always&lt;/p>
&lt;p>创建pc-job.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">batch/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Job &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-job&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">manualSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 3;done&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建job&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pc-job.yaml&lt;/span>
&lt;span class="n">job&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-job&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看job&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get job -n dev -o wide -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">COMPLETIONS&lt;/span> &lt;span class="n">DURATION&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">pc-job&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">21s&lt;/span> &lt;span class="n">21s&lt;/span> &lt;span class="n">counter&lt;/span> &lt;span class="n">busybox&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">30&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">counter-pod&lt;/span>
&lt;span class="n">pc-job&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">31s&lt;/span> &lt;span class="n">79s&lt;/span> &lt;span class="n">counter&lt;/span> &lt;span class="n">busybox&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">30&lt;/span> &lt;span class="n">app&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">counter-pod&lt;/span>
&lt;span class="c"># 通过观察pod状态可以看到，pod在运行完毕任务后，就会变成Completed状态&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-job-rxg96&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">29s&lt;/span>
&lt;span class="n">pc-job-rxg96&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">33s&lt;/span>
&lt;span class="c"># 接下来，调整下pod运行的总数量和并行数量 即：在spec下设置下面两个选项&lt;/span>
&lt;span class="c"># completions: 6 # 指定job需要成功运行Pods的次数为6&lt;/span>
&lt;span class="c"># parallelism: 3 # 指定job并发运行Pods的数量为3&lt;/span>
&lt;span class="c"># 然后重新运行job，观察效果，此时会发现，job会每次运行3个pod，总共执行了6个pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">684ft&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5s&lt;/span>
&lt;span class="n">pc-job-jhj49&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5s&lt;/span>
&lt;span class="n">pc-job-pfcvh&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">684ft&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">11s&lt;/span>
&lt;span class="n">pc-job-v7rhr&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-v7rhr&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-v7rhr&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-jhj49&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">11s&lt;/span>
&lt;span class="n">pc-job-fhwf7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-fhwf7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-pfcvh&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">11s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5vg2j&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-fhwf7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5vg2j&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5vg2j&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">ContainerCreating&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">0s&lt;/span>
&lt;span class="n">pc-job-fhwf7&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;span class="n">pc-job-v7rhr&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5vg2j&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3s&lt;/span>
&lt;span class="n">pc-job-fhwf7&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">12s&lt;/span>
&lt;span class="n">pc-job-v7rhr&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">12s&lt;/span>
&lt;span class="n">pc-job&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5vg2j&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">12s&lt;/span>
&lt;span class="c"># 删除job&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pc-job.yaml&lt;/span>
&lt;span class="n">job&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">batch&lt;/span> &lt;span class="s2">&amp;#34;pc-job&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="cronjobcj">CronJob(CJ)&lt;/h2>
&lt;p>CronJob控制器以Job控制器资源为其管控对象，并借助它管理pod资源对象，Job控制器定义的作业任务在其控制器资源创建之后便会立即执行，但CronJob可以以类似于Linux操作系统的周期性任务作业计划的方式控制其运行&lt;strong>时间点&lt;/strong>及&lt;strong>重复运行&lt;/strong>的方式。也就是说，&lt;strong>CronJob可以在特定的时间点(反复的)去运行job任务&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200618213149531.png?imageslim" alt="">&lt;/p>
&lt;p>CronJob的资源清单文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">batch/v1beta1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">CronJob&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># rs名称 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 所属命名空间 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cronjob&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 详情描述&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">schedule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># cron格式的作业调度运行时间点,用于控制任务在什么时间执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrencyPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 并发执行策略，用于定义前一次作业运行尚未完成时是否以及如何运行后一次的作业&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">failedJobHistoryLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 为失败的任务执行保留的历史记录数，默认为1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">successfulJobHistoryLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 为成功的任务执行保留的历史记录数，默认为3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">startingDeadlineSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 启动作业错误的超时时长&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">jobTemplate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># job控制器模板，用于为cronjob控制器生成job对象;下面其实就是job的定义&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">completions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">parallelism&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">activeDeadlineSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">backoffLimit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">6&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">manualSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">规则&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- {&lt;span class="nt">key: app, operator: In, values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">counter-pod]}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter-pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 20;done&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">需要重点解释的几个选项：
schedule: cron表达式，用于指定任务的执行时间
&lt;span class="ge">*/1 *&lt;/span> &lt;span class="ge">* *&lt;/span> *
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">分钟&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">小时&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">日&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">月份&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">星期&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
分钟 值从 0 到 59.
小时 值从 0 到 23.
日 值从 1 到 31.
月 值从 1 到 12.
星期 值从 0 到 6, 0 代表星期日
多个时间可以用逗号隔开； 范围可以用连字符给出；*可以作为通配符； /表示每...
concurrencyPolicy:
Allow: 允许Jobs并发运行(默认)
Forbid: 禁止并发运行，如果上一次运行尚未完成，则跳过下一次运行
Replace: 替换，取消当前正在运行的作业并用新作业替换它
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建pc-cronjob.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">batch/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">CronJob&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pc-cronjob&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cronjob&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">schedule&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;*/1 * * * *&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">jobTemplate&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">counter&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;for i in 9 8 7 6 5 4 3 2 1; do echo $i;sleep 3;done&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建cronjob&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pc-cronjob.yaml&lt;/span>
&lt;span class="n">cronjob&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pc-cronjob&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看cronjob&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get cronjobs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">SCHEDULE&lt;/span> &lt;span class="n">SUSPEND&lt;/span> &lt;span class="n">ACTIVE&lt;/span> &lt;span class="n">LAST&lt;/span> &lt;span class="n">SCHEDULE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span> &lt;span class="p">*/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="p">*&lt;/span> &lt;span class="n">False&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">6s&lt;/span>
&lt;span class="c"># 查看job&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get jobs -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">COMPLETIONS&lt;/span> &lt;span class="n">DURATION&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587800&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">28s&lt;/span> &lt;span class="n">3m26s&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587860&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">28s&lt;/span> &lt;span class="n">2m26s&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587920&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">28s&lt;/span> &lt;span class="n">86s&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587800-x4tsm&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m24s&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587860-r5gv4&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Completed&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">84s&lt;/span>
&lt;span class="n">pc-cronjob&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">1592587920&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">9dxxq&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">24s&lt;/span>
&lt;span class="c"># 删除cronjob&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pc-cronjob.yaml&lt;/span>
&lt;span class="n">cronjob&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">batch&lt;/span> &lt;span class="s2">&amp;#34;pc-cronjob&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第五章 Kubernetes Pod 介绍</title><link>/k8s-pod.html</link><pubDate>Thu, 28 Oct 2021 16:37:55 +0800</pubDate><guid>/k8s-pod.html</guid><description>&lt;blockquote>
&lt;p>本章节将详细介绍Pod资源的各种配置（yaml）和原理。&lt;/p>
&lt;/blockquote>
&lt;h2 id="pod结构">Pod结构&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200407121501907.png?imageslim" alt="">&lt;/p>
&lt;p>每个Pod中都可以包含一个或者多个容器，这些容器可以分为两类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>用户程序所在的容器，数量可多可少&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Pause容器，这是每个Pod都会有的一个&lt;strong>根容器&lt;/strong>，它的作用有两个：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可以以它为依据，评估整个Pod的健康状态&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可以在根容器上设置Ip地址，其它容器都此Ip（Pod IP），以实现Pod内部的网路通信&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>这里是Pod内部的通讯，Pod的之间的通讯采用虚拟二层网络技术来实现，我们当前环境用的是Flannel&lt;/p>
&lt;h3 id="pod定义">Pod定义&lt;/h3>
&lt;p>下面是Pod的资源清单：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，版本号，例如v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod 　&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，资源类型，例如 Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> 　 &lt;/span>&lt;span class="c">#必选，元数据&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，Pod名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Pod所属的命名空间,默认为&amp;#34;default&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> 　　 &lt;/span>&lt;span class="c">#自定义标签列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string 　 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，Pod中容器的详细定义&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，Pod中容器列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，容器名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#必选，容器的镜像名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">imagePullPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Always|Never|IfNotPresent ] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#获取镜像的策略 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">string] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器的启动命令列表，如不指定，使用打包时使用的启动命令&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">args&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">string] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器的启动命令参数列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">workingDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器的工作目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumeMounts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#挂载到容器内部的存储卷配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#引用pod定义的共享存储卷的名称，需用volumes[]部分定义的的卷名&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">mountPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#存储卷在容器内mount的绝对路径，应少于512字符&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">readOnly&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#是否为只读模式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#需要暴露的端口库号列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#端口的名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">int &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器需要监听的端口号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">int &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器所在主机需要监听的端口号，默认与Container相同&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#端口协议，支持TCP和UDP，默认TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器运行前需设置的环境变量列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#环境变量名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#环境变量的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#资源限制和请求的设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">limits&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#资源限制的设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Cpu的限制，单位为core数，将用于docker run --cpu-shares参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">memory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#内存限制，单位可以为Mib/Gib，将用于docker run --memory参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#资源请求的设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Cpu请求，容器启动的初始可用数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">memory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#内存请求,容器启动的初始可用数量&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lifecycle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#生命周期钩子&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">postStart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器启动后立即执行此钩子,如果执行失败,会根据重启策略进行重启&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">preStop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器终止前执行此钩子,无论结果如何,容器都会终止&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#对Pod内各容器健康检查的设置，当探测无响应几次后将自动重启该容器&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> 　 &lt;/span>&lt;span class="c">#对Pod容器内检查方式设置为exec方式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">string] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#exec方式需要制定的命令或脚本&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#对Pod内个容器健康检查方法设置为HttpGet，需要制定Path、port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">number&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">HttpHeaders&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tcpSocket&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#对Pod内个容器健康检查方式设置为tcpSocket方式&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">number&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">initialDelaySeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#容器启动完成后首次探测的时间，单位为秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">timeoutSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> 　　 &lt;/span>&lt;span class="c">#对容器健康检查探测等待响应的超时时间，单位秒，默认1秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">periodSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> 　　 &lt;/span>&lt;span class="c">#对容器监控检查的定期探测时间设置，单位秒，默认10秒一次&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">successThreshold&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">failureThreshold&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">securityContext&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">privileged&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">Always | Never | OnFailure] &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Pod的重启策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;string&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置NodeName表示将该Pod调度到指定到名称的node节点上&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">obeject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置NodeSelector表示将该Pod调度到包含这个label的node上&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">imagePullSecrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Pull镜像时使用的secret名称，以key：secretkey格式指定&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostNetwork&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">volumes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#在该pod上定义共享存储卷列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#共享存储卷名称 （volumes类型有很多种）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">emptyDir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{}&lt;span class="w"> &lt;/span>&lt;span class="c">#类型为emtyDir的存储卷，与Pod同生命周期的一个临时目录。为空值&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hostPath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#类型为hostPath的存储卷，表示挂载Pod所在宿主机的目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string 　　 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#Pod所在宿主机的目录，将被用于同期中mount的目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">secret&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> 　　　&lt;/span>&lt;span class="c">#类型为secret的存储卷，挂载集群与定义的secret对象到容器内部&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scretname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">configMap&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#类型为configMap的存储卷，挂载预定义的configMap对象到容器内部&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">string&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c">#小提示：&lt;/span>
&lt;span class="c"># 在这里，可通过一个命令来查看每种资源的可配置项&lt;/span>
&lt;span class="c"># kubectl explain 资源类型 查看某种资源可以配置的一级属性&lt;/span>
&lt;span class="c"># kubectl explain 资源类型.属性 查看属性的子属性&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl explain pod&lt;/span>
&lt;span class="n">KIND&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Pod&lt;/span>
&lt;span class="n">VERSION&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">FIELDS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">apiVersion&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">kind&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">metadata&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">spec&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">status&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl explain pod.metadata&lt;/span>
&lt;span class="n">KIND&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Pod&lt;/span>
&lt;span class="n">VERSION&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">RESOURCE&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">metadata&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">FIELDS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">annotations&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="no">[string]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">clusterName&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">creationTimestamp&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">deletionGracePeriodSeconds&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">deletionTimestamp&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">finalizers&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">generateName&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">generation&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">labels&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="no">[string]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">managedFields&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">ownerReferences&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">resourceVersion&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">selfLink&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">uid&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在kubernetes中基本所有资源的一级属性都是一样的，主要包含5部分：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>apiVersion &amp;lt;string&amp;gt; 版本，由kubernetes内部定义，版本号必须可以用 kubectl api-versions 查询到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kind &amp;lt;string&amp;gt; 类型，由kubernetes内部定义，版本号必须可以用 kubectl api-resources 查询到&lt;/p>
&lt;/li>
&lt;li>
&lt;p>metadata &amp;lt;Object&amp;gt; 元数据，主要是资源标识和说明，常用的有name、namespace、labels等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>spec &amp;lt;Object&amp;gt; 描述，这是配置中最重要的一部分，里面是对各种资源配置的详细描述&lt;/p>
&lt;/li>
&lt;li>
&lt;p>status &amp;lt;Object&amp;gt; 状态信息，里面的内容不需要定义，由kubernetes自动生成&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>在上面的属性中，spec是接下来研究的重点，继续看下它的常见子属性:&lt;/p>
&lt;ul>
&lt;li>containers &amp;lt;[]Object&amp;gt; 容器列表，用于定义容器的详细信息&lt;/li>
&lt;li>nodeName &amp;lt;String&amp;gt; 根据nodeName的值将pod调度到指定的Node节点上&lt;/li>
&lt;li>nodeSelector &amp;lt;map[]&amp;gt; 根据NodeSelector中定义的信息选择将该Pod调度到包含这些label的Node 上&lt;/li>
&lt;li>hostNetwork &amp;lt;boolean&amp;gt; 是否使用主机网络模式，默认为false，如果设置为true，表示使用宿主机网络&lt;/li>
&lt;li>volumes &amp;lt;[]Object&amp;gt; 存储卷，用于定义Pod上面挂在的存储信息&lt;/li>
&lt;li>restartPolicy &amp;lt;string&amp;gt; 重启策略，表示Pod在遇到故障的时候的处理策略&lt;/li>
&lt;/ul>
&lt;h2 id="pod配置">Pod配置&lt;/h2>
&lt;p>本小节主要来研究&lt;code>pod.spec.containers&lt;/code>属性，这也是pod配置中最为关键的一项配置。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl explain pod.spec.containers&lt;/span>
&lt;span class="n">KIND&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Pod&lt;/span>
&lt;span class="n">VERSION&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">RESOURCE&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">containers&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 数组，代表可以有多个容器&lt;/span>
&lt;span class="n">FIELDS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器名称&lt;/span>
&lt;span class="n">image&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器需要的镜像地址&lt;/span>
&lt;span class="n">imagePullPolicy&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 镜像拉取策略 &lt;/span>
&lt;span class="n">command&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器的启动命令列表，如不指定，使用打包时使用的启动命令&lt;/span>
&lt;span class="n">args&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器的启动命令需要的参数列表&lt;/span>
&lt;span class="n">env&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器环境变量的配置&lt;/span>
&lt;span class="n">ports&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器需要暴露的端口号列表&lt;/span>
&lt;span class="n">resources&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 资源限制和资源请求的设置&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="基本配置">基本配置&lt;/h3>
&lt;p>创建pod-base.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-base&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">heima&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面定义了一个比较简单Pod的配置，里面有两个容器：&lt;/p>
&lt;ul>
&lt;li>nginx：用1.17.1版本的nginx镜像创建，（nginx是一个轻量级web容器）&lt;/li>
&lt;li>busybox：用1.30版本的busybox镜像创建，（busybox是一个小巧的linux命令集合）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl apply -f pod-base.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-base&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod状况&lt;/span>
&lt;span class="c"># READY 1/2 : 表示当前Pod中有2个容器，其中1个准备就绪，1个未就绪&lt;/span>
&lt;span class="c"># RESTARTS : 重启次数，因为有1个容器故障了，Pod一直在重启试图恢复它&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get pod -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-base&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">4&lt;/span> &lt;span class="n">95s&lt;/span>
&lt;span class="c"># 可以通过describe查看内部的详情&lt;/span>
&lt;span class="c"># 此时已经运行起来了一个基本的Pod，虽然它暂时有问题&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl describe pod pod-base -n dev&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="镜像拉取">镜像拉取&lt;/h3>
&lt;p>创建pod-imagepullpolicy.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-imagepullpolicy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">imagePullPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Always&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 用于设置镜像拉取策略&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>imagePullPolicy，用于设置镜像拉取策略，kubernetes支持配置三种拉取策略：&lt;/p>
&lt;ul>
&lt;li>Always：总是从远程仓库拉取镜像（一直远程下载）&lt;/li>
&lt;li>IfNotPresent：本地有则使用本地镜像，本地没有则从远程仓库拉取镜像（本地有就本地 本地没远程下载）&lt;/li>
&lt;li>Never：只使用本地镜像，从不去远程仓库拉取，本地没有就报错 （一直使用本地）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>默认值说明：&lt;/p>
&lt;p>如果镜像tag为具体版本号， 默认策略是：IfNotPresent&lt;/p>
&lt;p>如果镜像tag为：latest（最终版本） ，默认策略是always&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl create -f pod-imagepullpolicy.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-imagepullpolicy&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod详情&lt;/span>
&lt;span class="c"># 此时明显可以看到nginx镜像有一步Pulling image &amp;#34;nginx:1.17.1&amp;#34;的过程&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl describe pod pod-imagepullpolicy -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Scheduled&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">assigned&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-imagePullPolicy&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulling&lt;/span> &lt;span class="n">32s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Pulling&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="n">26s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">pulled&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">26s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">25s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="n">7s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">25s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;busybox:1.30&amp;#34;&lt;/span> &lt;span class="n">already&lt;/span> &lt;span class="n">present&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">machine&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">7s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">25s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">busybox&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">7s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">25s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">busybox&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="启动命令">启动命令&lt;/h3>
&lt;p>在前面的案例中，一直有一个问题没有解决，就是的busybox容器一直没有成功运行，那么到底是什么原因导致这个容器的故障呢？&lt;/p>
&lt;p>原来busybox并不是一个程序，而是类似于一个工具类的集合，kubernetes集群启动管理后，它会自动关闭。解决方法就是让其一直在运行，这就用到了command配置。&lt;/p>
&lt;p>创建pod-command.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-command&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;touch /tmp/hello.txt;while true;do /bin/echo $(date +%T) &amp;gt;&amp;gt; /tmp/hello.txt; sleep 3; done;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>command，用于在pod中的容器初始化完毕之后运行一个命令。&lt;/p>
&lt;blockquote>
&lt;p>稍微解释下上面命令的意思：&lt;/p>
&lt;p>&amp;ldquo;/bin/sh&amp;rdquo;,&amp;quot;-c&amp;quot;, 使用sh执行命令&lt;/p>
&lt;p>touch /tmp/hello.txt; 创建一个/tmp/hello.txt 文件&lt;/p>
&lt;p>while true;do /bin/echo $(date +%T) &amp;raquo; /tmp/hello.txt; sleep 3; done; 每隔3秒向文件中写入当前时间&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl create -f pod-command.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-command&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod状态&lt;/span>
&lt;span class="c"># 此时发现两个pod都正常运行了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl get pods pod-command -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-command&lt;/span> &lt;span class="n">2&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Runing&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2s&lt;/span>
&lt;span class="c"># 进入pod中的busybox容器，查看文件内容&lt;/span>
&lt;span class="c"># 补充一个命令: kubectl exec pod名称 -n 命名空间 -it -c 容器名称 /bin/sh 在容器内部执行命令&lt;/span>
&lt;span class="c"># 使用这个命令就可以进入某个容器的内部，然后进行相关操作了&lt;/span>
&lt;span class="c"># 比如，可以查看txt文件的内容&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="n">pod&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="c"># kubectl exec pod-command -n dev -it -c busybox /bin/sh&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># tail -f /tmp/hello.txt&lt;/span>
&lt;span class="n">13&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">35&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">35&lt;/span>
&lt;span class="n">13&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">35&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">38&lt;/span>
&lt;span class="n">13&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">35&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">41&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>特别说明：
通过上面发现command已经可以完成启动命令和传递参数的功能，为什么这里还要提供一个args选项，用于传递参数呢?这其实跟docker有点关系，kubernetes中的command、args两项其实是实现覆盖Dockerfile中ENTRYPOINT的功能。
1 如果command和args均没有写，那么用Dockerfile的配置。
2 如果command写了，但args没有写，那么Dockerfile默认的配置会被忽略，执行输入的command
3 如果command没写，但args写了，那么Dockerfile中配置的ENTRYPOINT的命令会被执行，使用当前args的参数
4 如果command和args都写了，那么Dockerfile的配置被忽略，执行command并追加上args参数&lt;/p>
&lt;h3 id="环境变量">环境变量&lt;/h3>
&lt;p>创建pod-env.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-env&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;while true;do /bin/echo $(date +%T);sleep 60; done;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置环境变量列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;username&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;123456&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>env，环境变量，用于在pod中的容器设置环境变量。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-env.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-env&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 进入容器，输出环境变量&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl exec pod-env -n dev -c busybox -it /bin/sh&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># echo $username&lt;/span>
&lt;span class="n">admin&lt;/span>
&lt;span class="p">/&lt;/span> &lt;span class="c"># echo $password&lt;/span>
&lt;span class="n">123456&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种方式不是很推荐，推荐将这些配置单独存储在配置文件中，这种方式将在后面介绍。&lt;/p>
&lt;h3 id="端口设置">端口设置&lt;/h3>
&lt;p>本小节来介绍容器的端口设置，也就是containers的ports选项。&lt;/p>
&lt;p>首先看下ports支持的子选项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl explain pod.spec.containers.ports&lt;/span>
&lt;span class="n">KIND&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Pod&lt;/span>
&lt;span class="n">VERSION&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">RESOURCE&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">ports&lt;/span> &lt;span class="p">&amp;lt;[]&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">FIELDS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">name&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 端口名称，如果指定，必须保证name在pod中是唯一的 &lt;/span>
&lt;span class="n">containerPort&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器要监听的端口(0&amp;lt;x&amp;lt;65536)&lt;/span>
&lt;span class="n">hostPort&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">integer&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 容器要在主机上公开的端口，如果设置，主机上只能运行容器的一个副本(一般省略) &lt;/span>
&lt;span class="n">hostIP&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 要将外部端口绑定到的主机IP(一般省略)&lt;/span>
&lt;span class="n">protocol&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="c"># 端口协议。必须是UDP、TCP或SCTP。默认为“TCP”。&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，编写一个测试案例，创建pod-ports.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-ports&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置容器暴露的端口列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-ports.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-ports&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="c"># 在下面可以明显看到配置信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-ports -n dev -o yaml&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">containers&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="n">image&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="n">imagePullPolicy&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">IfNotPresent&lt;/span>
&lt;span class="n">name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">ports&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="n">containerPort&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">80&lt;/span>
&lt;span class="n">name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx-port&lt;/span>
&lt;span class="n">protocol&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">TCP&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>访问容器中的程序需要使用的是&lt;code>podIp:containerPort&lt;/code>&lt;/p>
&lt;h3 id="资源配额">资源配额&lt;/h3>
&lt;p>容器中的程序要运行，肯定是要占用一定资源的，比如cpu和内存等，如果不对某个容器的资源做限制，那么它就可能吃掉大量资源，导致其它容器无法运行。针对这种情况，kubernetes提供了对内存和cpu的资源进行配额的机制，这种机制主要通过resources选项实现，他有两个子选项：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>limits：用于限制运行时容器的最大占用资源，当容器占用资源超过limits时会被终止，并进行重启&lt;/p>
&lt;/li>
&lt;li>
&lt;p>requests ：用于设置容器需要的最小资源，如果环境资源不够，容器将无法启动&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>可以通过上面两个选项设置资源的上下限。&lt;/p>
&lt;p>接下来，编写一个测试案例，创建pod-resources.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-resources&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">resources&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 资源配额&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">limits&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 限制资源（上限）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># CPU限制，单位是core数&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">memory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10Gi&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 内存限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 请求资源（下限）&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># CPU限制，单位是core数，或 100m&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">memory&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;10Mi&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 内存限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这对cpu和memory的单位做一个说明：&lt;/p>
&lt;ul>
&lt;li>cpu：core数，可以为整数或小数
&lt;ul>
&lt;li>如0.1核表示：100m&lt;/li>
&lt;li>1000m = 1核&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>memory： 内存大小，可以使用Gi、Mi、G、M等形式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 运行Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-resources.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-resources&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看发现pod运行正常&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-resources -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-resources&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">39s&lt;/span>
&lt;span class="c"># 接下来，停止Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pod-resources.yaml&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-resources&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="c"># 编辑pod，修改resources.requests.memory的值为10Gi&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim pod-resources.yaml&lt;/span>
&lt;span class="c"># 再次启动pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-resources.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-resources&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod状态，发现Pod启动失败&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-resources -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-resources&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">20s&lt;/span>
&lt;span class="c"># 查看pod详情会发现，如下提示&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pod pod-resources -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">FailedScheduling&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="n">available&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">Insufficient&lt;/span> &lt;span class="n">memory&lt;/span>&lt;span class="p">.(&lt;/span>&lt;span class="n">内存不足&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="pod生命周期">Pod生命周期&lt;/h2>
&lt;p>我们一般将pod对象从创建至终的这段时间范围称为pod的生命周期，它主要包含下面的过程：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>pod创建过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行初始化容器（init container）过程&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行主容器（main container）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>容器启动后钩子（post start）、容器终止前钩子（pre stop）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>容器的存活性探测（liveness probe）、就绪性探测（readiness probe）&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>pod终止过程&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200412111402706.png?imageslim" alt="">&lt;/p>
&lt;p>在整个生命周期中，Pod会出现5种&lt;strong>状态&lt;/strong>（&lt;strong>相位&lt;/strong>），分别如下：&lt;/p>
&lt;ul>
&lt;li>挂起（Pending）：apiserver已经创建了pod资源对象，但它尚未被调度完成或者仍处于下载镜像的过程中&lt;/li>
&lt;li>运行中（Running）：pod已经被调度至某节点，并且所有容器都已经被kubelet创建完成&lt;/li>
&lt;li>成功（Succeeded）：pod中的所有容器都已经成功终止并且不会被重启&lt;/li>
&lt;li>失败（Failed）：所有容器都已经终止，但至少有一个容器终止失败，即容器返回了非0值的退出状态&lt;/li>
&lt;li>未知（Unknown）：apiserver无法正常获取到pod对象的状态信息，通常由网络通信失败所导致&lt;/li>
&lt;/ul>
&lt;h3 id="创建和终止">创建和终止&lt;/h3>
&lt;p>&lt;strong>pod的创建过程&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>用户通过kubectl或其他api客户端提交需要创建的pod信息给apiServer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>apiServer开始生成pod对象的信息，并将信息存入etcd，然后返回确认信息至客户端&lt;/p>
&lt;/li>
&lt;li>
&lt;p>apiServer开始反映etcd中的pod对象的变化，其它组件使用watch机制来跟踪检查apiServer上的变动&lt;/p>
&lt;/li>
&lt;li>
&lt;p>scheduler发现有新的pod对象要创建，开始为Pod分配主机并将结果信息更新至apiServer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>node节点上的kubelet发现有pod调度过来，尝试调用docker启动容器，并将结果回送至apiServer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>apiServer将接收到的pod状态信息存入etcd中&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200406184656917.png?imageslim" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>pod的终止过程&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>用户向apiServer发送删除pod对象的命令&lt;/li>
&lt;li>apiServcer中的pod对象信息会随着时间的推移而更新，在宽限期内（默认30s），pod被视为dead&lt;/li>
&lt;li>将pod标记为terminating状态&lt;/li>
&lt;li>kubelet在监控到pod对象转为terminating状态的同时启动pod关闭过程&lt;/li>
&lt;li>端点控制器监控到pod对象的关闭行为时将其从所有匹配到此端点的service资源的端点列表中移除&lt;/li>
&lt;li>如果当前pod对象定义了preStop钩子处理器，则在其标记为terminating后即会以同步的方式启动执行&lt;/li>
&lt;li>pod对象中的容器进程收到停止信号&lt;/li>
&lt;li>宽限期结束后，若pod中还存在仍在运行的进程，那么pod对象会收到立即终止的信号&lt;/li>
&lt;li>kubelet请求apiServer将此pod资源的宽限期设置为0从而完成删除操作，此时pod对于用户已不可见&lt;/li>
&lt;/ol>
&lt;h3 id="初始化容器">初始化容器&lt;/h3>
&lt;p>初始化容器是在pod的主容器启动之前要运行的容器，主要是做一些主容器的前置工作，它具有两大特征：&lt;/p>
&lt;ol>
&lt;li>初始化容器必须运行完成直至结束，若某初始化容器运行失败，那么kubernetes需要重启它直到成功完成&lt;/li>
&lt;li>初始化容器必须按照定义的顺序执行，当且仅当前一个成功之后，后面的一个才能运行&lt;/li>
&lt;/ol>
&lt;p>初始化容器有很多的应用场景，下面列出的是最常见的几个：&lt;/p>
&lt;ul>
&lt;li>提供主容器镜像中不具备的工具程序或自定义代码&lt;/li>
&lt;li>初始化容器要先于应用容器串行启动并运行完成，因此可用于延后应用容器的启动直至其依赖的条件得到满足&lt;/li>
&lt;/ul>
&lt;p>接下来做一个案例，模拟下面这个需求：&lt;/p>
&lt;p>假设要以主容器来运行nginx，但是要求在运行nginx之前先要能够连接上mysql和redis所在服务器&lt;/p>
&lt;p>为了简化测试，事先规定好mysql&lt;code>(192.168.109.201)&lt;/code>和redis&lt;code>(192.168.109.202)&lt;/code>服务器的地址&lt;/p>
&lt;p>创建pod-initcontainer.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-initcontainer&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main-container&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">initContainers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-mysql&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;sh&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;-c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;until ping 192.168.109.201 -c 1 ; do echo waiting for mysql...; sleep 2; done;&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test-redis&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">busybox:1.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;sh&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;-c&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;until ping 192.168.109.202 -c 1 ; do echo waiting for reids...; sleep 2; done;&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-initcontainer.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod状态&lt;/span>
&lt;span class="c"># 发现pod卡在启动第一个初始化容器过程中，后面的容器不会运行&lt;/span>
&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pod pod-initcontainer -n dev&lt;/span>
&lt;span class="p">........&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Scheduled&lt;/span> &lt;span class="n">49s&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">assigned&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="n">48s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;busybox:1.30&amp;#34;&lt;/span> &lt;span class="n">already&lt;/span> &lt;span class="n">present&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">machine&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">48s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="nb">test-mysql&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">48s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="nb">test-mysql&lt;/span>
&lt;span class="c"># 动态查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-initcontainer -n dev -w&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Init&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">15s&lt;/span>
&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Init&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">52s&lt;/span>
&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Init&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">2&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">53s&lt;/span>
&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">PodInitializing&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">89s&lt;/span>
&lt;span class="n">pod-initcontainer&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">90s&lt;/span>
&lt;span class="c"># 接下来新开一个shell，为当前服务器新增两个ip，观察pod的变化&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ifconfig ens33:1 192.168.109.201 netmask 255.255.255.0 up&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># ifconfig ens33:2 192.168.109.202 netmask 255.255.255.0 up&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="钩子函数">钩子函数&lt;/h3>
&lt;p>钩子函数能够感知自身生命周期中的事件，并在相应的时刻到来时运行用户指定的程序代码。&lt;/p>
&lt;p>kubernetes在主容器的启动之后和停止之前提供了两个钩子函数：&lt;/p>
&lt;ul>
&lt;li>post start：容器创建之后执行，如果失败了会重启容器&lt;/li>
&lt;li>pre stop ：容器终止之前执行，执行完成之后容器将成功终止，在其完成之前会阻塞删除容器的操作&lt;/li>
&lt;/ul>
&lt;p>钩子处理器支持使用下面三种方式定义动作：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Exec命令：在容器内执行一次命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lifecycle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">postStart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">cat&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp/healthy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>TCPSocket：在当前容器尝试访问指定的socket&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">…… &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lifecycle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">postStart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tcpSocket&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>HTTPGet：在当前容器中向某url发起http请求&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lifecycle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">postStart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#URI地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#端口号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.109.100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#主机地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#支持的协议，http或者https&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>接下来，以exec方式为例，演示下钩子函数的使用，创建pod-hook-exec.yaml文件，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-hook-exec&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main-container&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lifecycle&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">postStart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 在容器启动的时候执行一个命令，修改掉nginx的默认首页内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo postStart... &amp;gt; /usr/share/nginx/html/index.html&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">preStop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 在容器停止之前停止nginx服务&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/usr/sbin/nginx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;-s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;quit&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-hook-exec.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-hook-exec&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-hook-exec -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">pod-hook-exec&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">29s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">48&lt;/span> &lt;span class="n">node2&lt;/span>
&lt;span class="c"># 访问pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.244.2.48&lt;/span>
&lt;span class="n">postStart&lt;/span>&lt;span class="p">...&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="容器探测">容器探测&lt;/h3>
&lt;p>容器探测用于检测容器中的应用实例是否正常工作，是保障业务可用性的一种传统机制。如果经过探测，实例的状态不符合预期，那么kubernetes就会把该问题实例&amp;quot; 摘除 &amp;ldquo;，不承担业务流量。kubernetes提供了两种探针来实现容器探测，分别是：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>liveness probes：存活性探针，用于检测应用实例当前是否处于正常运行状态，如果不是，k8s会重启容器&lt;/p>
&lt;/li>
&lt;li>
&lt;p>readiness probes：就绪性探针，用于检测应用实例当前是否可以接收请求，如果不能，k8s不会转发流量&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>livenessProbe 决定是否重启容器，readinessProbe 决定是否将请求转发给容器。&lt;/p>
&lt;/blockquote>
&lt;p>上面两种探针目前均支持三种探测方式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Exec命令：在容器内执行一次命令，如果命令执行的退出码为0，则认为程序正常，否则不正常&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">cat&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp/healthy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>TCPSocket：将会尝试访问一个用户容器的端口，如果能够建立这条连接，则认为程序正常，否则不正常&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">…… &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tcpSocket&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>HTTPGet：调用容器内Web应用的URL，如果返回的状态码在200和399之间，则认为程序正常，否则不正常&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#URI地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#端口号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">127.0.0.1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#主机地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#支持的协议，http或者https&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">……&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>下面以liveness probes为例，做几个演示：&lt;/p>
&lt;p>&lt;strong>方式一：Exec&lt;/strong>&lt;/p>
&lt;p>创建pod-liveness-exec.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-liveness-exec&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">exec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/cat&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;/tmp/hello.txt&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 执行一个查看文件的命令&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建pod，观察效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-liveness-exec.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-liveness-exec&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pods pod-liveness-exec -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">20s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">50s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">20s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">50s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Killing&lt;/span> &lt;span class="n">20s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">liveness&lt;/span> &lt;span class="n">probe&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">will&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">restarted&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">Unhealthy&lt;/span> &lt;span class="n">0s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x5&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">40s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Liveness&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">cat&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">can&lt;/span>&lt;span class="s1">&amp;#39;t open &amp;#39;&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">hello11&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">txt&lt;/span>&lt;span class="err">&amp;#39;:&lt;/span> &lt;span class="n">No&lt;/span> &lt;span class="n">such&lt;/span> &lt;span class="n">file&lt;/span> &lt;span class="n">or&lt;/span> &lt;span class="n">directory&lt;/span>
&lt;span class="c"># 观察上面的信息就会发现nginx容器启动之后就进行了健康检查&lt;/span>
&lt;span class="c"># 检查失败之后，容器被kill掉，然后尝试进行重启（这是重启策略的作用，后面讲解）&lt;/span>
&lt;span class="c"># 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-liveness-exec -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-liveness-exec&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">CrashLoopBackOff&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">3m19s&lt;/span>
&lt;span class="c"># 当然接下来，可以修改成一个存在的文件，比如/tmp/hello.txt，再试，结果就正常了......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>方式二：TCPSocket&lt;/strong>&lt;/p>
&lt;p>创建pod-liveness-tcpsocket.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-liveness-tcpsocket&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tcpSocket&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 尝试访问8080端口&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建pod，观察效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-liveness-tcpsocket.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-liveness-tcpsocket&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pods pod-liveness-tcpsocket -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Scheduled&lt;/span> &lt;span class="n">31s&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">assigned&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-liveness-tcpsocket&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">node2&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">invalid&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span> &lt;span class="n">already&lt;/span> &lt;span class="n">present&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">machine&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">invalid&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">invalid&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">Unhealthy&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">invalid&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">invalid&lt;/span>&lt;span class="p">&amp;gt;)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="n">Liveness&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dial&lt;/span> &lt;span class="n">tcp&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">44&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">8080&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">connect&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="n">refused&lt;/span>
&lt;span class="c"># 观察上面的信息，发现尝试访问8080端口,但是失败了&lt;/span>
&lt;span class="c"># 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-liveness-tcpsocket -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-liveness-tcpsocket&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">CrashLoopBackOff&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">3m19s&lt;/span>
&lt;span class="c"># 当然接下来，可以修改成一个可以访问的端口，比如80，再试，结果就正常了......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>方式三：HTTPGet&lt;/strong>&lt;/p>
&lt;p>创建pod-liveness-httpget.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-liveness-httpget&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 其实就是访问http://127.0.0.1:80/hello &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HTTP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#支持的协议，http或者https&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#端口号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#URI地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建pod，观察效果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-liveness-httpget.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-liveness-httpget&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod详情&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pod pod-liveness-httpget -n dev&lt;/span>
&lt;span class="p">.......&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">64s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span> &lt;span class="n">already&lt;/span> &lt;span class="n">present&lt;/span> &lt;span class="n">on&lt;/span> &lt;span class="n">machine&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">64s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">63s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">Unhealthy&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x6&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">56s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Liveness&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">HTTP&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">statuscode&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">404&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Killing&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x2&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">36s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">liveness&lt;/span> &lt;span class="n">probe&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">will&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">restarted&lt;/span>
&lt;span class="c"># 观察上面信息，尝试访问路径，但是未找到,出现404错误&lt;/span>
&lt;span class="c"># 稍等一会之后，再观察pod信息，就可以看到RESTARTS不再是0，而是一直增长&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod pod-liveness-httpget -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-liveness-httpget&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">5&lt;/span> &lt;span class="n">3m17s&lt;/span>
&lt;span class="c"># 当然接下来，可以修改成一个可以访问的路径path，比如/，再试，结果就正常了......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，已经使用liveness Probe演示了三种探测方式，但是查看livenessProbe的子属性，会发现除了这三种方式，还有一些其他的配置，在这里一并解释下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="o">[&lt;/span>root@master ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># kubectl explain pod.spec.containers.livenessProbe&lt;/span>
FIELDS:
&lt;span class="nb">exec&lt;/span> &amp;lt;Object&amp;gt;
tcpSocket &amp;lt;Object&amp;gt;
httpGet &amp;lt;Object&amp;gt;
initialDelaySeconds &amp;lt;integer&amp;gt; &lt;span class="c1"># 容器启动后等待多少秒执行第一次探测&lt;/span>
timeoutSeconds &amp;lt;integer&amp;gt; &lt;span class="c1"># 探测超时时间。默认1秒，最小1秒&lt;/span>
periodSeconds &amp;lt;integer&amp;gt; &lt;span class="c1"># 执行探测的频率。默认是10秒，最小1秒&lt;/span>
failureThreshold &amp;lt;integer&amp;gt; &lt;span class="c1"># 连续探测失败多少次才被认定为失败。默认是3。最小值是1&lt;/span>
successThreshold &amp;lt;integer&amp;gt; &lt;span class="c1"># 连续探测成功多少次才被认定为成功。默认是1&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面稍微配置两个，演示下效果即可：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="p">[&lt;/span>&lt;span class="l">root@master ~]# more pod-liveness-httpget.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-liveness-httpget&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HTTP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">initialDelaySeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 容器启动后30s开始探测&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">timeoutSeconds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 探测超时时间为5s&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="重启策略">重启策略&lt;/h3>
&lt;p>在上一节中，一旦容器探测出现了问题，kubernetes就会对容器所在的Pod进行重启，其实这是由pod的重启策略决定的，pod的重启策略有 3 种，分别如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Always ：容器失效时，自动重启该容器，这也是默认值。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>OnFailure ： 容器终止运行且退出码不为0时重启&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Never ： 不论状态为何，都不重启该容器&lt;/p>
&lt;p>重启策略适用于pod对象中的所有容器，首次需要重启的容器，将在其需要时立即进行重启，随后再次需要重启的操作将由kubelet延迟一段时间后进行，且反复的重启操作的延迟时长以此为10s、20s、40s、80s、160s和300s，300s是最大延迟时长。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>创建pod-restartpolicy.yaml：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-restartpolicy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">livenessProbe&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">httpGet&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">scheme&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">HTTP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/hello&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restartPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Never&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 设置重启策略为Never&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行Pod测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-restartpolicy.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-restartpolicy&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看Pod详情，发现nginx容器失败&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pods pod-restartpolicy -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">Unhealthy&lt;/span> &lt;span class="n">15s&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">x3&lt;/span> &lt;span class="n">over&lt;/span> &lt;span class="n">35s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Liveness&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">HTTP&lt;/span> &lt;span class="n">probe&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">statuscode&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">404&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Killing&lt;/span> &lt;span class="n">15s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Container&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">failed&lt;/span> &lt;span class="n">liveness&lt;/span> &lt;span class="n">probe&lt;/span>
&lt;span class="c"># 多等一会，再观察pod的重启次数，发现一直是0，并未重启 &lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-restartpolicy -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-restartpolicy&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">5min42s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="pod调度">Pod调度&lt;/h2>
&lt;p>在默认情况下，一个Pod在哪个Node节点上运行，是由Scheduler组件采用相应的算法计算出来的，这个过程是不受人工控制的。但是在实际使用中，这并不满足的需求，因为很多情况下，我们想控制某些Pod到达某些节点上，那么应该怎么做呢？这就要求了解kubernetes对Pod的调度规则，kubernetes提供了四大类调度方式：&lt;/p>
&lt;ul>
&lt;li>自动调度：运行在哪个节点上完全由Scheduler经过一系列的算法计算得出&lt;/li>
&lt;li>定向调度：NodeName、NodeSelector&lt;/li>
&lt;li>亲和性调度：NodeAffinity、PodAffinity、PodAntiAffinity&lt;/li>
&lt;li>污点（容忍）调度：Taints、Toleration&lt;/li>
&lt;/ul>
&lt;h3 id="定向调度">定向调度&lt;/h3>
&lt;p>定向调度，指的是利用在pod上声明nodeName或者nodeSelector，以此将Pod调度到期望的node节点上。注意，这里的调度是强制的，这就意味着即使要调度的目标Node不存在，也会向上面进行调度，只不过pod运行失败而已。&lt;/p>
&lt;p>&lt;strong>NodeName&lt;/strong>&lt;/p>
&lt;p>NodeName用于强制约束将Pod调度到指定的Name的Node节点上。这种方式，其实是直接跳过Scheduler的调度逻辑，直接将Pod调度到指定名称的节点。&lt;/p>
&lt;p>接下来，实验一下：创建一个pod-nodename.yaml文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-nodename&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定调度到node1节点上&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c">#创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodename.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodename&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c">#查看Pod调度到NODE属性，确实是调度到了node1节点上&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-nodename -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-nodename&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">56s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">87&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="c"># 接下来，删除pod，修改nodeName的值为node3（并没有node3节点）&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pod-nodename.yaml&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-nodename&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim pod-nodename.yaml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodename.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodename&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c">#再次查看，发现已经向Node3节点调度，但是由于不存在node3节点，所以pod无法正常运行&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-nodename -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-nodename&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">node3&lt;/span> &lt;span class="p">......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>NodeSelector&lt;/strong>&lt;/p>
&lt;p>NodeSelector用于将pod调度到添加了指定标签的node节点上。它是通过kubernetes的label-selector机制实现的，也就是说，在pod创建之前，会由scheduler使用MatchNodeSelector调度策略进行label匹配，找出目标node，然后将pod调度到目标节点，该匹配规则是强制约束。&lt;/p>
&lt;p>接下来，实验一下：&lt;/p>
&lt;p>1 首先分别为node节点添加标签&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl label nodes node1 nodeenv=pro&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">node2&lt;/span> &lt;span class="n">labeled&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl label nodes node2 nodeenv=test&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">node2&lt;/span> &lt;span class="n">labeled&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2 创建一个pod-nodeselector.yaml文件，并使用它创建Pod&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-nodeselector&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeenv&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pro&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 指定调度到具有nodeenv=pro标签的节点上&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c">#创建Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodeselector.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodeselector&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c">#查看Pod调度到NODE属性，确实是调度到了node1节点上&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-nodeselector -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-nodeselector&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">47s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">87&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="c"># 接下来，删除pod，修改nodeSelector的值为nodeenv: xxxx（不存在打有此标签的节点）&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pod-nodeselector.yaml&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-nodeselector&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim pod-nodeselector.yaml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodeselector.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodeselector&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c">#再次查看，发现pod无法正常运行,Node的值为none&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">pod-nodeselector&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m20s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c"># 查看详情,发现node selector匹配失败的提示&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pods pod-nodeselector -n dev&lt;/span>
&lt;span class="p">.......&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">FailedScheduling&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="n">available&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">didn&lt;/span>&lt;span class="s1">&amp;#39;t match node selector.
&lt;/span>&lt;span class="s1"> Warning FailedScheduling &amp;lt;unknown&amp;gt; default-scheduler 0/3 nodes are available: 3 node(s) didn&amp;#39;&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">match&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="n">selector&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="亲和性调度">亲和性调度&lt;/h3>
&lt;p>上一节，介绍了两种定向调度的方式，使用起来非常方便，但是也有一定的问题，那就是如果没有满足条件的Node，那么Pod将不会被运行，即使在集群中还有可用Node列表也不行，这就限制了它的使用场景。&lt;/p>
&lt;p>基于上面的问题，kubernetes还提供了一种亲和性调度（Affinity）。它在NodeSelector的基础之上的进行了扩展，可以通过配置的形式，实现优先选择满足条件的Node进行调度，如果没有，也可以调度到不满足条件的节点上，使调度更加灵活。&lt;/p>
&lt;p>Affinity主要分为三类：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>nodeAffinity(node亲和性）: 以node为目标，解决pod可以调度到哪些node的问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>podAffinity(pod亲和性) : 以pod为目标，解决pod可以和哪些已存在的pod部署在同一个拓扑域中的问题&lt;/p>
&lt;/li>
&lt;li>
&lt;p>podAntiAffinity(pod反亲和性) : 以pod为目标，解决pod不能和哪些已存在pod部署在同一个拓扑域中的问题&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>关于亲和性(反亲和性)使用场景的说明：&lt;/p>
&lt;p>&lt;strong>亲和性&lt;/strong>：如果两个应用频繁交互，那就有必要利用亲和性让两个应用的尽可能的靠近，这样可以减少因网络通信而带来的性能损耗。&lt;/p>
&lt;p>&lt;strong>反亲和性&lt;/strong>：当应用的采用多副本部署时，有必要采用反亲和性让各个应用实例打散分布在各个node上，这样可以提高服务的高可用性。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>NodeAffinity&lt;/strong>&lt;/p>
&lt;p>首先来看一下&lt;code>NodeAffinity&lt;/code>的可配置项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">pod.spec.affinity.nodeAffinity
requiredDuringSchedulingIgnoredDuringExecution Node节点必须满足指定的所有规则才可以，相当于硬限制
nodeSelectorTerms 节点选择列表
matchFields 按节点字段列出的节点选择器要求列表
matchExpressions 按节点标签列出的节点选择器要求列表(推荐)
key 键
values 值
operator 关系符 支持Exists, DoesNotExist, In, NotIn, Gt, Lt
preferredDuringSchedulingIgnoredDuringExecution 优先调度到满足指定的规则的Node，相当于软限制 (倾向)
preference 一个节点选择器项，与相应的权重相关联
matchFields 按节点字段列出的节点选择器要求列表
matchExpressions 按节点标签列出的节点选择器要求列表(推荐)
key 键
values 值
operator 关系符 支持In, NotIn, Exists, DoesNotExist, Gt, Lt
weight 倾向权重，在范围1-100。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">关系符的使用说明:
&lt;span class="k">-&lt;/span> matchExpressions:
&lt;span class="k">-&lt;/span> key: nodeenv # 匹配存在标签的key为nodeenv的节点
operator: Exists
&lt;span class="k">-&lt;/span> key: nodeenv # 匹配标签的key为nodeenv,且value是&amp;#34;xxx&amp;#34;或&amp;#34;yyy&amp;#34;的节点
operator: In
values: [&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]
&lt;span class="k">-&lt;/span> key: nodeenv # 匹配标签的key为nodeenv,且value大于&amp;#34;xxx&amp;#34;的节点
operator: Gt
values: &amp;#34;xxx&amp;#34;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来首先演示一下&lt;code>requiredDuringSchedulingIgnoredDuringExecution&lt;/code> ,&lt;/p>
&lt;p>创建pod-nodeaffinity-required.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-nodeaffinity-required&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">affinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#亲和性设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeAffinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置node亲和性&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 硬限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeSelectorTerms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 匹配env的值在[&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]中的标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nodeenv&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;yyy&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodeaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodeaffinity-required&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod状态 （运行失败）&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-nodeaffinity-required -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-nodeaffinity-required&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">16s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="c"># 查看Pod的详情&lt;/span>
&lt;span class="c"># 发现调度失败，提示node选择失败&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pod pod-nodeaffinity-required -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">FailedScheduling&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="n">available&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">didn&lt;/span>&lt;span class="s1">&amp;#39;t match node selector.
&lt;/span>&lt;span class="s1"> Warning FailedScheduling &amp;lt;unknown&amp;gt; default-scheduler 0/3 nodes are available: 3 node(s) didn&amp;#39;&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">match&lt;/span> &lt;span class="n">node&lt;/span> &lt;span class="n">selector&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c">#接下来，停止pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pod-nodeaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-nodeaffinity-required&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="c"># 修改文件，将values: [&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]------&amp;gt; [&amp;#34;pro&amp;#34;,&amp;#34;yyy&amp;#34;]&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim pod-nodeaffinity-required.yaml&lt;/span>
&lt;span class="c"># 再次启动&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-nodeaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-nodeaffinity-required&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 此时查看，发现调度成功，已经将pod调度到了node1上&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-nodeaffinity-required -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">......&lt;/span>
&lt;span class="n">pod-nodeaffinity-required&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">11s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">89&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">......&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来再演示一下&lt;code>preferredDuringSchedulingIgnoredDuringExecution&lt;/code>：&lt;/p>
&lt;p>创建pod-nodeaffinity-preferred.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-nodeaffinity-preferred&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">affinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#亲和性设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeAffinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置node亲和性&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">preferredDuringSchedulingIgnoredDuringExecution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 软限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">weight&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">preference&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 匹配env的值在[&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]中的标签(当前环境没有)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nodeenv&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;yyy&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 创建pod&lt;/span>
&lt;span class="o">[&lt;/span>root@master ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># kubectl create -f pod-nodeaffinity-preferred.yaml&lt;/span>
pod/pod-nodeaffinity-preferred created
&lt;span class="c1"># 查看pod状态 （运行成功）&lt;/span>
&lt;span class="o">[&lt;/span>root@master ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># kubectl get pod pod-nodeaffinity-preferred -n dev&lt;/span>
NAME READY STATUS RESTARTS AGE
pod-nodeaffinity-preferred 1/1 Running &lt;span class="m">0&lt;/span> 40s
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>NodeAffinity规则设置的注意事项：
1 如果同时定义了nodeSelector和nodeAffinity，那么必须两个条件都得到满足，Pod才能运行在指定的Node上
2 如果nodeAffinity指定了多个nodeSelectorTerms，那么只需要其中一个能够匹配成功即可
3 如果一个nodeSelectorTerms中有多个matchExpressions ，则一个节点必须满足所有的才能匹配成功
4 如果一个pod所在的Node在Pod运行期间其标签发生了改变，不再符合该Pod的节点亲和性需求，则系统将忽略此变化&lt;/p>
&lt;p>&lt;strong>PodAffinity&lt;/strong>&lt;/p>
&lt;p>PodAffinity主要实现以运行的Pod为参照，实现让新创建的Pod跟参照pod在一个区域的功能。&lt;/p>
&lt;p>首先来看一下&lt;code>PodAffinity&lt;/code>的可配置项：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="l">pod.spec.affinity.podAffinity&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">requiredDuringSchedulingIgnoredDuringExecution 硬限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">namespaces 指定参照pod的namespace&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">topologyKey 指定调度作用域&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">labelSelector 标签选择器&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matchExpressions 按节点标签列出的节点选择器要求列表(推荐)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">key 键&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">values 值&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">operator 关系符 支持In, NotIn, Exists, DoesNotExist.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matchLabels 指多个matchExpressions映射的内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">preferredDuringSchedulingIgnoredDuringExecution 软限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">podAffinityTerm 选项&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">namespaces &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">topologyKey&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">labelSelector&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matchExpressions &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">key 键&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">values 值&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">operator&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">matchLabels &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">weight 倾向权重，在范围1-100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>topologyKey用于指定调度时作用域,例如:&lt;/p>
&lt;ul>
&lt;li>如果指定为kubernetes.io/hostname，那就是以Node节点为区分范围&lt;/li>
&lt;li>如果指定为beta.kubernetes.io/os,则以Node节点的操作系统类型来区分&lt;/li>
&lt;/ul>
&lt;p>接下来，演示下&lt;code>requiredDuringSchedulingIgnoredDuringExecution&lt;/code>,&lt;/p>
&lt;p>1）首先创建一个参照Pod，pod-podaffinity-target.yaml：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-podaffinity-target&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">podenv&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pro&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 将目标pod名确指定到node1上&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 启动目标pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-podaffinity-target.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-podaffinity-target&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod状况&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-podaffinity-target -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-podaffinity-target&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">4s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）创建pod-podaffinity-required.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-podaffinity-required&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">affinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#亲和性设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">podAffinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置pod亲和性&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 硬限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">labelSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 匹配env的值在[&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]中的标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">podenv&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;xxx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;yyy&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">topologyKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">kubernetes.io/hostname&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面配置表达的意思是：新Pod必须要与拥有标签nodeenv=xxx或者nodeenv=yyy的pod在同一Node上，显然现在没有这样pod，接下来，运行测试一下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 启动pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-podaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-podaffinity-required&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod状态，发现未运行&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-podaffinity-required -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod-podaffinity-required&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">9s&lt;/span>
&lt;span class="c"># 查看详细信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pods pod-podaffinity-required -n dev&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Warning&lt;/span> &lt;span class="n">FailedScheduling&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">are&lt;/span> &lt;span class="n">available&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">2&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">didn&lt;/span>&lt;span class="s1">&amp;#39;t match pod affinity rules, 1 node(s) had taints that the pod didn&amp;#39;&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">tolerate&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c"># 接下来修改 values: [&amp;#34;xxx&amp;#34;,&amp;#34;yyy&amp;#34;]-----&amp;gt;values:[&amp;#34;pro&amp;#34;,&amp;#34;yyy&amp;#34;]&lt;/span>
&lt;span class="c"># 意思是：新Pod必须要与拥有标签nodeenv=xxx或者nodeenv=yyy的pod在同一Node上&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># vim pod-podaffinity-required.yaml&lt;/span>
&lt;span class="c"># 然后重新创建pod，查看效果&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f pod-podaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-podaffinity-required&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-podaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-podaffinity-required&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 发现此时Pod运行正常&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-podaffinity-required -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">LABELS&lt;/span>
&lt;span class="n">pod-podaffinity-required&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关于&lt;code>PodAffinity&lt;/code>的 &lt;code>preferredDuringSchedulingIgnoredDuringExecution&lt;/code>，这里不再演示。&lt;/p>
&lt;p>&lt;strong>PodAntiAffinity&lt;/strong>&lt;/p>
&lt;p>PodAntiAffinity主要实现以运行的Pod为参照，让新创建的Pod跟参照pod不在一个区域中的功能。&lt;/p>
&lt;p>它的配置方式和选项跟PodAffinty是一样的，这里不再做详细解释，直接做一个测试案例。&lt;/p>
&lt;p>1）继续使用上个案例中目标pod&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide --show-labels&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="n">LABELS&lt;/span>
&lt;span class="n">pod-podaffinity-required&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3m29s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">38&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">pod-podaffinity-target&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">9m25s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">37&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">podenv&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">pro&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）创建pod-podantiaffinity-required.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-podantiaffinity-required&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">affinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#亲和性设置&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">podAntiAffinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#设置pod亲和性&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 硬限制&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">labelSelector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 匹配podenv的值在[&amp;#34;pro&amp;#34;]中的标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">podenv&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pro&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">topologyKey&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">kubernetes.io/hostname&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面配置表达的意思是：新Pod必须要与拥有标签nodeenv=pro的pod不在同一Node上，运行测试一下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f pod-podantiaffinity-required.yaml&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod-podantiaffinity-required&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看pod&lt;/span>
&lt;span class="c"># 发现调度到了node2上&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods pod-podantiaffinity-required -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">..&lt;/span>
&lt;span class="n">pod-podantiaffinity-required&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">30s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">96&lt;/span> &lt;span class="n">node2&lt;/span> &lt;span class="p">..&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="污点和容忍">污点和容忍&lt;/h3>
&lt;p>&lt;strong>污点（Taints）&lt;/strong>&lt;/p>
&lt;p>前面的调度方式都是站在Pod的角度上，通过在Pod上添加属性，来确定Pod是否要调度到指定的Node上，其实我们也可以站在Node的角度上，通过在Node上添加&lt;strong>污点&lt;/strong>属性，来决定是否允许Pod调度过来。&lt;/p>
&lt;p>Node被设置上污点之后就和Pod之间存在了一种相斥的关系，进而拒绝Pod调度进来，甚至可以将已经存在的Pod驱逐出去。&lt;/p>
&lt;p>污点的格式为：&lt;code>key=value:effect&lt;/code>, key和value是污点的标签，effect描述污点的作用，支持如下三个选项：&lt;/p>
&lt;ul>
&lt;li>PreferNoSchedule：kubernetes将尽量避免把Pod调度到具有该污点的Node上，除非没有其他节点可调度&lt;/li>
&lt;li>NoSchedule：kubernetes将不会把Pod调度到具有该污点的Node上，但不会影响当前Node上已存在的Pod&lt;/li>
&lt;li>NoExecute：kubernetes将不会把Pod调度到具有该污点的Node上，同时也会将Node上已存在的Pod驱离&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200605021831545.png?imageslim" alt="">&lt;/p>
&lt;p>使用kubectl设置和去除污点的命令示例如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 设置污点&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">taint&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">effect&lt;/span>
&lt;span class="c"># 去除污点&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">taint&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">effect&lt;/span>&lt;span class="p">-&lt;/span>
&lt;span class="c"># 去除所有污点&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">taint&lt;/span> &lt;span class="n">nodes&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">key&lt;/span>&lt;span class="p">-&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>接下来，演示下污点的效果：&lt;/p>
&lt;ol>
&lt;li>准备节点node1（为了演示效果更加明显，暂时停止node2节点）&lt;/li>
&lt;li>为node1节点设置一个污点: &lt;code>tag=heima:PreferNoSchedule&lt;/code>；然后创建pod1( pod1 可以 )&lt;/li>
&lt;li>修改为node1节点设置一个污点: &lt;code>tag=heima:NoSchedule&lt;/code>；然后创建pod2( pod1 正常 pod2 失败 )&lt;/li>
&lt;li>修改为node1节点设置一个污点: &lt;code>tag=heima:NoExecute&lt;/code>；然后创建pod3 ( 3个pod都失败 )&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 为node1设置污点(PreferNoSchedule)&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl taint nodes node1 tag=heima:PreferNoSchedule&lt;/span>
&lt;span class="c"># 创建pod1&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run taint1 --image=nginx:1.17.1 -n dev&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">taint1&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7665f7fd85&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">574h4&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m24s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">59&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="c"># 为node1设置污点(取消PreferNoSchedule，设置NoSchedule)&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl taint nodes node1 tag:PreferNoSchedule-&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl taint nodes node1 tag=heima:NoSchedule&lt;/span>
&lt;span class="c"># 创建pod2&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run taint2 --image=nginx:1.17.1 -n dev&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods taint2 -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span>
&lt;span class="n">taint1&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7665f7fd85&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">574h4&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2m24s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">59&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">taint2&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">544694789&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6zmlf&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">21s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c"># 为node1设置污点(取消NoSchedule，设置NoExecute)&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl taint nodes node1 tag:NoSchedule-&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl taint nodes node1 tag=heima:NoExecute&lt;/span>
&lt;span class="c"># 创建pod3&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run taint3 --image=nginx:1.17.1 -n dev&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="n">NOMINATED&lt;/span>
&lt;span class="n">taint1&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">7665f7fd85-htkmp&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">35s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">taint2&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">544694789-bn7wb&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">35s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">taint3&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6d78dbd749-tktkq&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">6s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-markdown" data-lang="markdown">小提示：
使用kubeadm搭建的集群，默认就会给master节点添加一个污点标记,所以pod就不会调度到master节点上.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>容忍（Toleration）&lt;/strong>&lt;/p>
&lt;p>上面介绍了污点的作用，我们可以在node上添加污点用于拒绝pod调度上来，但是如果就是想将一个pod调度到一个有污点的node上去，这时候应该怎么做呢？这就要使用到&lt;strong>容忍&lt;/strong>。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200514095913741.png?imageslim" alt="image-20200514095913741">&lt;/p>
&lt;blockquote>
&lt;p>污点就是拒绝，容忍就是忽略，Node通过污点拒绝pod调度上去，Pod通过容忍忽略拒绝&lt;/p>
&lt;/blockquote>
&lt;p>下面先通过一个案例看下效果：&lt;/p>
&lt;ol>
&lt;li>上一小节，已经在node1节点上打上了&lt;code>NoExecute&lt;/code>的污点，此时pod是调度不上去的&lt;/li>
&lt;li>本小节，可以通过给pod添加容忍，然后将其调度上去&lt;/li>
&lt;/ol>
&lt;p>创建pod-toleration.yaml,内容如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod-toleration&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">tolerations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 添加容忍&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;tag&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 要容忍的污点的key&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Equal&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 操作符&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">value&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;heima&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 容忍的污点的value&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">effect&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;NoExecute&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 添加容忍的规则，这里必须和标记的污点规则相同&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 添加容忍之前的pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="n">NOMINATED&lt;/span>
&lt;span class="n">pod-toleration&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Pending&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3s&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="c"># 添加容忍之后的pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="n">NOMINATED&lt;/span>
&lt;span class="n">pod-toleration&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">3s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">62&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面看一下容忍的详细配置:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl explain pod.spec.tolerations&lt;/span>
&lt;span class="p">......&lt;/span>
&lt;span class="n">FIELDS&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">key&lt;/span> &lt;span class="c"># 对应着要容忍的污点的键，空意味着匹配所有的键&lt;/span>
&lt;span class="n">value&lt;/span> &lt;span class="c"># 对应着要容忍的污点的值&lt;/span>
&lt;span class="n">operator&lt;/span> &lt;span class="c"># key-value的运算符，支持Equal和Exists（默认）&lt;/span>
&lt;span class="n">effect&lt;/span> &lt;span class="c"># 对应污点的effect，空意味着匹配所有影响&lt;/span>
&lt;span class="n">tolerationSeconds&lt;/span> &lt;span class="c"># 容忍时间, 当effect为NoExecute时生效，表示pod在Node上的停留时间&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第四章 Kubernetes 实战操作</title><link>/k8s-operation.html</link><pubDate>Thu, 28 Oct 2021 16:33:37 +0800</pubDate><guid>/k8s-operation.html</guid><description>&lt;blockquote>
&lt;p>本章节将介绍如何在kubernetes集群中部署一个nginx服务，并且能够对其进行访问。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="namespace">Namespace&lt;/h2>
&lt;p>Namespace是kubernetes系统中的一种非常重要资源，它的主要作用是用来实现&lt;strong>多套环境的资源隔离&lt;/strong>或者&lt;strong>多租户的资源隔离&lt;/strong>。&lt;/p>
&lt;p>默认情况下，kubernetes集群中的所有的Pod都是可以相互访问的。但是在实际中，可能不想让两个Pod之间进行互相的访问，那此时就可以将两个Pod划分到不同的namespace下。kubernetes通过将集群内部的资源分配到不同的Namespace中，可以形成逻辑上的&amp;quot;组&amp;quot;，以方便不同的组的资源进行隔离使用和管理。&lt;/p>
&lt;p>可以通过kubernetes的授权机制，将不同的namespace交给不同租户进行管理，这样就实现了多租户的资源隔离。此时还能结合kubernetes的资源配额机制，限定不同租户能占用的资源，例如CPU使用量、内存使用量等等，来实现租户可用资源的管理。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200407100850484.png?imageslim" alt="">&lt;/p>
&lt;p>kubernetes在集群启动之后，会默认创建几个namespace&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get namespace&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span> &lt;span class="c"># 所有未指定Namespace的对象都会被分配在default命名空间&lt;/span>
&lt;span class="n">kube-node-lease&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span> &lt;span class="c"># 集群节点之间的心跳维护，v1.13开始引入&lt;/span>
&lt;span class="n">kube-public&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span> &lt;span class="c"># 此命名空间下的资源可以被所有人访问（包括未认证用户）&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span> &lt;span class="c"># 所有由Kubernetes系统创建的资源都处于这个命名空间&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面来看namespace资源的具体操作：&lt;/p>
&lt;p>&lt;strong>查看&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 1 查看所有的ns 命令：kubectl get ns&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ns&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span>
&lt;span class="n">kube-node-lease&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span>
&lt;span class="n">kube-public&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span>
&lt;span class="c"># 2 查看指定的ns 命令：kubectl get ns ns名称&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ns default&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">45h&lt;/span>
&lt;span class="c"># 3 指定输出格式 命令：kubectl get ns ns名称 -o 格式参数&lt;/span>
&lt;span class="c"># kubernetes支持的格式有很多，比较常见的是wide、json、yaml&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ns default -o yaml&lt;/span>
&lt;span class="n">apiVersion&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">v1&lt;/span>
&lt;span class="n">kind&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Namespace&lt;/span>
&lt;span class="n">metadata&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">creationTimestamp&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;2020-04-05T04:44:16Z&amp;#34;&lt;/span>
&lt;span class="n">name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="k">default&lt;/span>
&lt;span class="n">resourceVersion&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;151&amp;#34;&lt;/span>
&lt;span class="n">selfLink&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">v1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">namespaces&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="k">default&lt;/span>
&lt;span class="n">uid&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">7405f73a-e486&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">43d4&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">9db6&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">145f1409f090&lt;/span>
&lt;span class="n">spec&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">finalizers&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">-&lt;/span> &lt;span class="n">kubernetes&lt;/span>
&lt;span class="n">status&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">phase&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Active&lt;/span>
&lt;span class="c"># 4 查看ns详情 命令：kubectl describe ns ns名称&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe ns default&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="k">default&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Status&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="c"># Active 命名空间正在使用中 Terminating 正在删除命名空间&lt;/span>
&lt;span class="c"># ResourceQuota 针对namespace做的资源限制&lt;/span>
&lt;span class="c"># LimitRange针对namespace中的每个组件做的资源限制&lt;/span>
&lt;span class="n">No&lt;/span> &lt;span class="n">resource&lt;/span> &lt;span class="n">quota&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="n">No&lt;/span> &lt;span class="n">LimitRange&lt;/span> &lt;span class="n">resource&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>创建&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create ns dev&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">created&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>删除&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 删除namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete ns dev&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置方式&lt;/strong>&lt;/p>
&lt;p>首先准备一个yaml文件：ns-dev.yaml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Namespace&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以执行对应的创建和删除命令了：&lt;/p>
&lt;pre>&lt;code>创建：kubectl create -f ns-dev.yaml
删除：kubectl delete -f ns-dev.yaml
&lt;/code>&lt;/pre>
&lt;h2 id="pod">Pod&lt;/h2>
&lt;p>Pod是kubernetes集群进行管理的最小单元，程序要运行必须部署在容器中，而容器必须存在于Pod中。&lt;/p>
&lt;p>Pod可以认为是容器的封装，一个Pod中可以存在一个或者多个容器。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200407121501907.png?imageslim" alt="">&lt;/p>
&lt;p>kubernetes在集群启动之后，集群中的各个组件也都是以Pod方式运行的。可以通过下面命令查看：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n kube-system&lt;/span>
&lt;span class="n">NAMESPACE&lt;/span> &lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">coredns&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6955765f44&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">68g6v&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">coredns&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6955765f44-cs5r8&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">etcd-master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-apiserver-master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-controller-manager-master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-flannel-ds-amd64&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">47r25&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-flannel-ds-amd64-ls5lh&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-proxy&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">685tk&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-proxy&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">87spt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">kube-scheduler-master&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">2d1h&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>创建并运行&lt;/strong>&lt;/p>
&lt;p>kubernetes没有提供单独运行Pod的命令，都是通过Pod控制器来实现的&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 命令格式： kubectl run (pod控制器名称) [参数] &lt;/span>
&lt;span class="c"># --image 指定Pod的镜像&lt;/span>
&lt;span class="c"># --port 指定端口&lt;/span>
&lt;span class="c"># --namespace 指定namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run nginx --image=nginx:1.17.1 --port=80 --namespace dev &lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">created&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>查看pod信息&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 查看Pod基本信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-fg2db&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">43s&lt;/span>
&lt;span class="c"># 查看Pod的详细信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe pod nginx-5ff7956ff6-fg2db -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-fg2db&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">Priority&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="n">Node&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">node1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">101&lt;/span>
&lt;span class="nb">Start &lt;/span>&lt;span class="n">Time&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Wed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">08&lt;/span> &lt;span class="n">Apr&lt;/span> &lt;span class="n">2020&lt;/span> &lt;span class="n">09&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">24&lt;/span> &lt;span class="p">+&lt;/span>&lt;span class="n">0800&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">pod-template-hash&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">5ff7956ff6&lt;/span>
&lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Status&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Running&lt;/span>
&lt;span class="n">IP&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">23&lt;/span>
&lt;span class="n">IPs&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">IP&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">23&lt;/span>
&lt;span class="n">Controlled&lt;/span> &lt;span class="n">By&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">ReplicaSet&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6&lt;/span>
&lt;span class="n">Containers&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Container&lt;/span> &lt;span class="n">ID&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">docker&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">4c62b8c0648d2512380f4ffa5da2c99d16e05634979973449c98e9b829f6253c&lt;/span>
&lt;span class="n">Image&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="n">Image&lt;/span> &lt;span class="n">ID&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">docker-pullable&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="nv">@sha256&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">485b610fefec7ff6c463ced9623314a04ed67e3945b9c08d7e53a47f6d108dc7&lt;/span>
&lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">Host&lt;/span> &lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">State&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Running&lt;/span>
&lt;span class="n">Started&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Wed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">08&lt;/span> &lt;span class="n">Apr&lt;/span> &lt;span class="n">2020&lt;/span> &lt;span class="n">09&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">01&lt;/span> &lt;span class="p">+&lt;/span>&lt;span class="n">0800&lt;/span>
&lt;span class="n">Ready&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">True&lt;/span>
&lt;span class="n">Restart&lt;/span> &lt;span class="n">Count&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="n">Environment&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Mounts&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="p">/&lt;/span>&lt;span class="n">var&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">secrets&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">serviceaccount&lt;/span> &lt;span class="n">from&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-token-hwvvw&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ro&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">Conditions&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Status&lt;/span>
&lt;span class="n">Initialized&lt;/span> &lt;span class="n">True&lt;/span>
&lt;span class="n">Ready&lt;/span> &lt;span class="n">True&lt;/span>
&lt;span class="n">ContainersReady&lt;/span> &lt;span class="n">True&lt;/span>
&lt;span class="n">PodScheduled&lt;/span> &lt;span class="n">True&lt;/span>
&lt;span class="n">Volumes&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="n">-token-hwvvw&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Type&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Secret&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="n">volume&lt;/span> &lt;span class="n">populated&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">Secret&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">SecretName&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-token-hwvvw&lt;/span>
&lt;span class="n">Optional&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">false&lt;/span>
&lt;span class="n">QoS&lt;/span> &lt;span class="n">Class&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">BestEffort&lt;/span>
&lt;span class="n">Node-Selectors&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Tolerations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">not-ready&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">NoExecute&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">300s&lt;/span>
&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">unreachable&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">NoExecute&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">300s&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Scheduled&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">unknown&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="k">default&lt;/span>&lt;span class="n">-scheduler&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">assigned&lt;/span> &lt;span class="n">dev&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-fg2db&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">node1&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulling&lt;/span> &lt;span class="n">4m11s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Pulling&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Pulled&lt;/span> &lt;span class="n">3m36s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Successfully&lt;/span> &lt;span class="n">pulled&lt;/span> &lt;span class="n">image&lt;/span> &lt;span class="s2">&amp;#34;nginx:1.17.1&amp;#34;&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">3m36s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Created&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">3m36s&lt;/span> &lt;span class="n">kubelet&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="n">Started&lt;/span> &lt;span class="n">container&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>访问Pod&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 获取podIP&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">IP&lt;/span> &lt;span class="n">NODE&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-fg2db&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">190s&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">244&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">23&lt;/span> &lt;span class="n">node1&lt;/span> &lt;span class="p">...&lt;/span>
&lt;span class="c">#访问POD&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl http://10.244.1.23:80&lt;/span>
&lt;span class="p">&amp;lt;!&lt;/span>&lt;span class="n">DOCTYPE&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="n">Welcome&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">!&amp;lt;/&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="n">Thank&lt;/span> &lt;span class="n">you&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">using&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">.&amp;lt;/&lt;/span>&lt;span class="n">em&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>删除指定Pod&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 删除指定Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete pod nginx-5ff7956ff6-fg2db -n dev&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;nginx-5ff7956ff6-fg2db&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="c"># 此时，显示删除Pod成功，但是再查询，发现又新产生了一个 &lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-jj4ng&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">21s&lt;/span>
&lt;span class="c"># 这是因为当前Pod是由Pod控制器创建的，控制器会监控Pod状况，一旦发现Pod死亡，会立即重建&lt;/span>
&lt;span class="c"># 此时要想删除Pod，必须删除Pod控制器&lt;/span>
&lt;span class="c"># 先来查询一下当前namespace下的Pod控制器&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">1&lt;/span> &lt;span class="n">9m7s&lt;/span>
&lt;span class="c"># 接下来，删除此PodPod控制器&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete deploy nginx -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;nginx&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="c"># 稍等片刻，再查询Pod，发现Pod被删除了&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">No&lt;/span> &lt;span class="n">resources&lt;/span> &lt;span class="n">found&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">dev&lt;/span> &lt;span class="n">namespace&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置操作&lt;/strong>&lt;/p>
&lt;p>创建一个pod-nginx.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以执行对应的创建和删除命令了：&lt;/p>
&lt;pre>&lt;code>创建：kubectl create -f pod-nginx.yaml
删除：kubectl delete -f pod-nginx.yaml
&lt;/code>&lt;/pre>
&lt;h2 id="label">Label&lt;/h2>
&lt;p>Label是kubernetes系统中的一个重要概念。它的作用就是在资源上添加标识，用来对它们进行区分和选择。&lt;/p>
&lt;p>Label的特点：&lt;/p>
&lt;ul>
&lt;li>一个Label会以key/value键值对的形式附加到各种对象上，如Node、Pod、Service等等&lt;/li>
&lt;li>一个资源对象可以定义任意数量的Label ，同一个Label也可以被添加到任意数量的资源对象上去&lt;/li>
&lt;li>Label通常在资源对象定义时确定，当然也可以在对象创建后动态添加或者删除&lt;/li>
&lt;/ul>
&lt;p>可以通过Label实现资源的多维度分组，以便灵活、方便地进行资源分配、调度、配置、部署等管理工作。&lt;/p>
&lt;blockquote>
&lt;p>一些常用的Label 示例如下：&lt;/p>
&lt;ul>
&lt;li>版本标签：&amp;ldquo;version&amp;rdquo;:&amp;ldquo;release&amp;rdquo;, &amp;ldquo;version&amp;rdquo;:&amp;ldquo;stable&amp;rdquo;&amp;hellip;&amp;hellip;&lt;/li>
&lt;li>环境标签：&amp;ldquo;environment&amp;rdquo;:&amp;ldquo;dev&amp;rdquo;，&amp;ldquo;environment&amp;rdquo;:&amp;ldquo;test&amp;rdquo;，&amp;ldquo;environment&amp;rdquo;:&amp;ldquo;pro&amp;rdquo;&lt;/li>
&lt;li>架构标签：&amp;ldquo;tier&amp;rdquo;:&amp;ldquo;frontend&amp;rdquo;，&amp;ldquo;tier&amp;rdquo;:&amp;ldquo;backend&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>标签定义完毕之后，还要考虑到标签的选择，这就要使用到Label Selector，即：&lt;/p>
&lt;ul>
&lt;li>Label用于给某个资源对象定义标识&lt;/li>
&lt;li>Label Selector用于查询和筛选拥有某些标签的资源对象&lt;/li>
&lt;/ul>
&lt;p>当前有两种Label Selector：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>基于等式的Label Selector&lt;/p>
&lt;p>name = slave: 选择所有包含Label中key=&amp;ldquo;name&amp;quot;且value=&amp;ldquo;slave&amp;quot;的对象&lt;/p>
&lt;p>env != production: 选择所有包括Label中的key=&amp;ldquo;env&amp;quot;且value不等于&amp;quot;production&amp;quot;的对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>基于集合的Label Selector&lt;/p>
&lt;p>name in (master, slave): 选择所有包含Label中的key=&amp;ldquo;name&amp;quot;且value=&amp;ldquo;master&amp;quot;或&amp;quot;slave&amp;quot;的对象&lt;/p>
&lt;p>name not in (frontend): 选择所有包含Label中的key=&amp;ldquo;name&amp;quot;且value不等于&amp;quot;frontend&amp;quot;的对象&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>标签的选择条件可以使用多个，此时将多个Label Selector进行组合，使用逗号&amp;rdquo;,&amp;ldquo;进行分隔即可。例如：&lt;/p>
&lt;pre>&lt;code> name=slave，env!=production
name not in (frontend)，env!=production
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>命令方式&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 为pod资源打标签&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl label pod nginx-pod version=1.0 -n dev&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx-pod&lt;/span> &lt;span class="n">labeled&lt;/span>
&lt;span class="c"># 为pod资源更新标签&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl label pod nginx-pod version=2.0 -n dev --overwrite&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx-pod&lt;/span> &lt;span class="n">labeled&lt;/span>
&lt;span class="c"># 查看标签&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod nginx-pod -n dev --show-labels&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">LABELS&lt;/span>
&lt;span class="n">nginx-pod&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">10m&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>
&lt;span class="c"># 筛选标签&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n dev -l version=2.0 --show-labels&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">LABELS&lt;/span>
&lt;span class="n">nginx-pod&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">17m&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n dev -l version!=2.0 --show-labels&lt;/span>
&lt;span class="n">No&lt;/span> &lt;span class="n">resources&lt;/span> &lt;span class="n">found&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">dev&lt;/span> &lt;span class="n">namespace&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="c">#删除标签&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl label pod nginx-pod version- -n dev&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx-pod&lt;/span> &lt;span class="n">labeled&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置方式&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;3.0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">env&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-port&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以执行对应的更新命令了：kubectl apply -f pod-nginx.yaml&lt;/p>
&lt;h2 id="deployment">Deployment&lt;/h2>
&lt;p>在kubernetes中，Pod是最小的控制单元，但是kubernetes很少直接控制Pod，一般都是通过Pod控制器来完成的。Pod控制器用于pod的管理，确保pod资源符合预期的状态，当pod的资源出现故障时，会尝试进行重启或重建pod。&lt;/p>
&lt;p>在kubernetes中Pod控制器的种类有很多，本章节只介绍一种：Deployment。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200408193950807.png?imageslim" alt="">&lt;/p>
&lt;p>&lt;strong>命令操作&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 命令格式: kubectl run deployment名称 [参数] &lt;/span>
&lt;span class="c"># --image 指定pod的镜像&lt;/span>
&lt;span class="c"># --port 指定端口&lt;/span>
&lt;span class="c"># --replicas 指定创建pod数量&lt;/span>
&lt;span class="c"># --namespace 指定namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run nginx --image=nginx:1.17.1 --port=80 --replicas=3 -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginx&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看创建的Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pods -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">6k8cb&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">19s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-jxfjt&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">19s&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6-v6jqw&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">19s&lt;/span>
&lt;span class="c"># 查看deployment的信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">2m42s&lt;/span>
&lt;span class="c"># UP-TO-DATE：成功升级的副本数量&lt;/span>
&lt;span class="c"># AVAILABLE：可用副本的数量&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get deploy -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">UP-TO-DATE&lt;/span> &lt;span class="n">AVAILABLE&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">CONTAINERS&lt;/span> &lt;span class="n">IMAGES&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">nginx&lt;/span> &lt;span class="n">3&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">2m51s&lt;/span> &lt;span class="n">nginx&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="c"># 查看deployment的详细信息&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl describe deploy nginx -n dev&lt;/span>
&lt;span class="n">Name&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>
&lt;span class="n">Namespace&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">dev&lt;/span>
&lt;span class="n">CreationTimestamp&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">Wed&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">08&lt;/span> &lt;span class="n">Apr&lt;/span> &lt;span class="n">2020&lt;/span> &lt;span class="n">11&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">14&lt;/span> &lt;span class="p">+&lt;/span>&lt;span class="n">0800&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="n">Annotations&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">revision&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">1&lt;/span>
&lt;span class="n">Selector&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="n">Replicas&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">desired&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">updated&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">total&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="n">3&lt;/span> &lt;span class="n">available&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">unavailable&lt;/span>
&lt;span class="n">StrategyType&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">RollingUpdate&lt;/span>
&lt;span class="n">MinReadySeconds&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">0&lt;/span>
&lt;span class="n">RollingUpdateStrategy&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">25&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">max&lt;/span> &lt;span class="n">unavailable&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">25&lt;/span>&lt;span class="p">%&lt;/span> &lt;span class="n">max&lt;/span> &lt;span class="n">surge&lt;/span>
&lt;span class="n">Pod&lt;/span> &lt;span class="n">Template&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Labels&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="n">Containers&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="n">Image&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">17&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">1&lt;/span>
&lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">Host&lt;/span> &lt;span class="n">Port&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span>
&lt;span class="n">Environment&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Mounts&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Volumes&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">Conditions&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Status&lt;/span> &lt;span class="n">Reason&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">------&lt;/span>
&lt;span class="n">Available&lt;/span> &lt;span class="n">True&lt;/span> &lt;span class="n">MinimumReplicasAvailable&lt;/span>
&lt;span class="n">Progressing&lt;/span> &lt;span class="n">True&lt;/span> &lt;span class="n">NewReplicaSetAvailable&lt;/span>
&lt;span class="n">OldReplicaSets&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="n">NewReplicaSet&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">3&lt;/span> &lt;span class="n">replicas&lt;/span> &lt;span class="n">created&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">Events&lt;/span>&lt;span class="err">:&lt;/span>
&lt;span class="nb">Type &lt;/span> &lt;span class="n">Reason&lt;/span> &lt;span class="n">Age&lt;/span> &lt;span class="n">From&lt;/span> &lt;span class="n">Message&lt;/span>
&lt;span class="p">----&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">----&lt;/span> &lt;span class="p">-------&lt;/span>
&lt;span class="n">Normal&lt;/span> &lt;span class="n">ScalingReplicaSet&lt;/span> &lt;span class="n">5m43s&lt;/span> &lt;span class="n">deployment-controller&lt;/span> &lt;span class="n">Scaled&lt;/span> &lt;span class="n">up&lt;/span> &lt;span class="n">replicaset&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">5ff7956ff6&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">3&lt;/span>
&lt;span class="c"># 删除 &lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete deploy nginx -n dev&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span> &lt;span class="s2">&amp;#34;nginx&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置操作&lt;/strong>&lt;/p>
&lt;p>创建一个deploy-nginx.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以执行对应的创建和删除命令了：&lt;/p>
&lt;ul>
&lt;li>创建：&lt;code>kubectl create -f deploy-nginx.yaml&lt;/code>&lt;/li>
&lt;li>删除：&lt;code>kubectl delete -f deploy-nginx.yaml&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="service">Service&lt;/h2>
&lt;p>通过上节课的学习，已经能够利用Deployment来创建一组Pod来提供具有高可用性的服务。&lt;/p>
&lt;p>虽然每个Pod都会分配一个单独的Pod IP，然而却存在如下两问题：&lt;/p>
&lt;ul>
&lt;li>Pod IP 会随着Pod的重建产生变化&lt;/li>
&lt;li>Pod IP 仅仅是集群内可见的虚拟IP，外部无法访问&lt;/li>
&lt;/ul>
&lt;p>这样对于访问这个服务带来了难度。因此，kubernetes设计了Service来解决这个问题。&lt;/p>
&lt;p>Service可以看作是一组同类Pod&lt;strong>对外的访问接口&lt;/strong>。借助Service，应用可以方便地实现服务发现和负载均衡。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200408194716912.png?imageslim" alt="image-20200408194716912">&lt;/p>
&lt;p>&lt;strong>操作一：创建集群内部可访问的Service&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 暴露Service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl expose deploy nginx --name=svc-nginx1 --type=ClusterIP --port=80 --target-port=80 -n dev&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">svc-nginx1&lt;/span> &lt;span class="n">exposed&lt;/span>
&lt;span class="c"># 查看service&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc svc-nginx -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">svc-nginx1&lt;/span> &lt;span class="n">ClusterIP&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">179&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">231&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">3m51s&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="c"># 这里产生了一个CLUSTER-IP，这就是service的IP，在Service的生命周期中，这个地址是不会变动的&lt;/span>
&lt;span class="c"># 可以通过这个IP访问当前service对应的POD&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># curl 10.109.179.231:80&lt;/span>
&lt;span class="p">&amp;lt;!&lt;/span>&lt;span class="n">DOCTYPE&lt;/span> &lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="n">Welcome&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">!&amp;lt;/&lt;/span>&lt;span class="n">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="n">Welcome&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">!&amp;lt;/&lt;/span>&lt;span class="n">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">.......&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="n">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>操作二：创建集群外部也可访问的Service&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 上面创建的Service的type类型为ClusterIP，这个ip地址只用集群内部可访问&lt;/span>
&lt;span class="c"># 如果需要创建外部也可以访问的Service，需要修改type为NodePort&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl expose deploy nginx --name=svc-nginx2 --type=NodePort --port=80 --target-port=80 -n dev&lt;/span>
&lt;span class="n">service&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">svc-nginx2&lt;/span> &lt;span class="n">exposed&lt;/span>
&lt;span class="c"># 此时查看，会发现出现了NodePort类型的Service，而且有一对Port（80:31928/TC）&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get svc svc-nginx-1 -n dev -o wide&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="nb">TYPE &lt;/span> &lt;span class="n">CLUSTER-IP&lt;/span> &lt;span class="n">EXTERNAL-IP&lt;/span> &lt;span class="n">PORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">S&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">AGE&lt;/span> &lt;span class="n">SELECTOR&lt;/span>
&lt;span class="n">svc-nginx2&lt;/span> &lt;span class="n">NodePort&lt;/span> &lt;span class="n">10&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">94&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">0&lt;/span> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="n">80&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">31928&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">TCP&lt;/span> &lt;span class="n">9s&lt;/span> &lt;span class="n">run&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">nginx&lt;/span>
&lt;span class="c"># 接下来就可以通过集群外的主机访问 节点IP:31928访问服务了&lt;/span>
&lt;span class="c"># 例如在的电脑主机上通过浏览器访问下面的地址&lt;/span>
&lt;span class="n">http&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="p">//&lt;/span>&lt;span class="n">192&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">168&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">109&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">31928&lt;/span>&lt;span class="p">/&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>删除Service&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete svc svc-nginx-1 -n dev service &amp;#34;svc-nginx-1&amp;#34; deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>配置方式&lt;/strong>&lt;/p>
&lt;p>创建一个svc-nginx.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">svc-nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterIP&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10.109.179.231&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">TCP&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">targetPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ClusterIP&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后就可以执行对应的创建和删除命令了：&lt;/p>
&lt;pre>&lt;code>创建：kubectl create -f svc-nginx.yaml
删除：kubectl delete -f svc-nginx.yaml
&lt;/code>&lt;/pre>
&lt;blockquote>
&lt;p>&lt;strong>小结&lt;/strong>&lt;/p>
&lt;p>至此，已经掌握了Namespace、Pod、Deployment、Service资源的基本操作，有了这些操作，就可以在kubernetes集群中实现一个服务的简单部署和访问了，但是如果想要更好的使用kubernetes，就需要深入学习这几种资源的细节和原理。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第三章 Kubernetes 资源管理</title><link>/k8s-resource.html</link><pubDate>Thu, 28 Oct 2021 16:19:54 +0800</pubDate><guid>/k8s-resource.html</guid><description>&lt;blockquote>
&lt;p>本章节主要介绍yaml语法和kubernetes的资源管理方式&lt;/p>
&lt;/blockquote>
&lt;h2 id="资源管理介绍">资源管理介绍&lt;/h2>
&lt;p>在kubernetes中，所有的内容都抽象为资源，用户需要通过操作资源来管理kubernetes。&lt;/p>
&lt;blockquote>
&lt;p>kubernetes的本质上就是一个集群系统，用户可以在集群中部署各种服务，所谓的部署服务，其实就是在kubernetes集群中运行一个个的容器，并将指定的程序跑在容器中。&lt;/p>
&lt;p>kubernetes的最小管理单元是pod而不是容器，所以只能将容器放在&lt;code>Pod&lt;/code>中，而kubernetes一般也不会直接管理Pod，而是通过&lt;code>Pod控制器&lt;/code>来管理Pod的。&lt;/p>
&lt;p>Pod可以提供服务之后，就要考虑如何访问Pod中服务，kubernetes提供了&lt;code>Service&lt;/code>资源实现这个功能。&lt;/p>
&lt;p>当然，如果Pod中程序的数据需要持久化，kubernetes还提供了各种&lt;code>存储&lt;/code>系统。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200406225334627.png?imageslim" alt="">&lt;/p>
&lt;blockquote>
&lt;p>学习kubernetes的核心，就是学习如何对集群上的&lt;code>Pod、Pod控制器、Service、存储&lt;/code>等各种资源进行操作&lt;/p>
&lt;/blockquote>
&lt;h2 id="yaml语言介绍">YAML语言介绍&lt;/h2>
&lt;p>YAML是一个类似 XML、JSON 的标记性语言。它强调以&lt;strong>数据&lt;/strong>为中心，并不是以标识语言为重点。因而YAML本身的定义比较简单，号称&amp;quot;一种人性化的数据格式语言&amp;quot;。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="nt">&amp;lt;heima&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;age&amp;gt;&lt;/span>15&lt;span class="nt">&amp;lt;/age&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;address&amp;gt;&lt;/span>Beijing&lt;span class="nt">&amp;lt;/address&amp;gt;&lt;/span>
&lt;span class="nt">&amp;lt;/heima&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">heima&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Beijing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>YAML的语法比较简单，主要有下面几个：&lt;/p>
&lt;ul>
&lt;li>大小写敏感&lt;/li>
&lt;li>使用缩进表示层级关系&lt;/li>
&lt;li>缩进不允许使用tab，只允许空格( 低版本限制 )&lt;/li>
&lt;li>缩进的空格数不重要，只要相同层级的元素左对齐即可&lt;/li>
&lt;li>&amp;lsquo;#&amp;lsquo;表示注释&lt;/li>
&lt;/ul>
&lt;p>YAML支持以下几种数据类型：&lt;/p>
&lt;ul>
&lt;li>纯量：单个的、不可再分的值&lt;/li>
&lt;li>对象：键值对的集合，又称为映射（mapping）/ 哈希（hash） / 字典（dictionary）&lt;/li>
&lt;li>数组：一组按次序排列的值，又称为序列（sequence） / 列表（list）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 纯量, 就是指的一个简单的值，字符串、布尔值、整数、浮点数、Null、时间、日期&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 1 布尔类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">(或者True)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 2 整型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">234&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 3 浮点型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.14&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 4 null类型 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">~ &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用~表示null&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 5 日期类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="ld">2018-02-17&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 日期必须使用ISO 8601格式，即yyyy-MM-dd&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 6 时间类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="ld">2018-02-17T15:02:31&lt;/span>&lt;span class="m">+08&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="m">00&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 7 字符串类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c7&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">heima &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 简单写法，直接写值 , 如果字符串中间有特殊字符，必须使用双引号或者单引号包裹 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">c8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">line1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">line2 &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 字符串过多的情况可以拆成多行，每一行会被转化成一个空格&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 对象&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 形式一(推荐):&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">heima&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Beijing&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 形式二(了解):&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">heima&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>{&lt;span class="nt">age: 15,address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Beijing}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="c"># 数组&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 形式一(推荐):&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">顺义&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">昌平 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="c"># 形式二(了解):&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">顺义,昌平]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>小提示：&lt;/p>
&lt;p>1 书写yaml切记&lt;code>:&lt;/code> 后面要加一个空格&lt;/p>
&lt;p>2 如果需要将多段yaml配置放在一个文件中，中间要使用&lt;code>---&lt;/code>分隔&lt;/p>
&lt;p>3 下面是一个yaml转json的网站，可以通过它验证yaml是否书写正确&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://www.json2yaml.com/convert-yaml-to-json">YAML转JSON&lt;/a>&lt;/p>
&lt;h2 id="资源管理方式">资源管理方式&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>命令式对象管理：直接使用命令去操作kubernetes资源&lt;/p>
&lt;p>&lt;code>kubectl run nginx-pod --image=nginx:1.17.1 --port=80&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>命令式对象配置：通过命令配置和配置文件去操作kubernetes资源&lt;/p>
&lt;p>&lt;code>kubectl create/patch -f nginx-pod.yaml&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>声明式对象配置：通过apply命令和配置文件去操作kubernetes资源&lt;/p>
&lt;p>&lt;code>kubectl apply -f nginx-pod.yaml&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>操作对象&lt;/th>
&lt;th>适用环境&lt;/th>
&lt;th>优点&lt;/th>
&lt;th>缺点&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>命令式对象管理&lt;/td>
&lt;td>对象&lt;/td>
&lt;td>测试&lt;/td>
&lt;td>简单&lt;/td>
&lt;td>只能操作活动对象，无法审计、跟踪&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>命令式对象配置&lt;/td>
&lt;td>文件&lt;/td>
&lt;td>开发&lt;/td>
&lt;td>可以审计、跟踪&lt;/td>
&lt;td>项目大时，配置文件多，操作麻烦&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>声明式对象配置&lt;/td>
&lt;td>目录&lt;/td>
&lt;td>开发&lt;/td>
&lt;td>支持目录操作&lt;/td>
&lt;td>意外情况下难以调试&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="命令式对象管理">命令式对象管理&lt;/h3>
&lt;p>&lt;strong>kubectl命令&lt;/strong>&lt;/p>
&lt;p>kubectl是kubernetes集群的命令行工具，通过它能够对集群本身进行管理，并能够在集群上进行容器化应用的安装部署。kubectl命令的语法如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">kubectl [command] [type] [name] [flags]
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>comand&lt;/strong>：指定要对资源执行的操作，例如create、get、delete&lt;/p>
&lt;p>&lt;strong>type&lt;/strong>：指定资源类型，比如deployment、pod、service&lt;/p>
&lt;p>&lt;strong>name&lt;/strong>：指定资源的名称，名称大小写敏感&lt;/p>
&lt;p>&lt;strong>flags&lt;/strong>：指定额外的可选参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 查看所有pod&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="n">pod&lt;/span>
&lt;span class="c"># 查看某个pod&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">pod_name&lt;/span>
&lt;span class="c"># 查看某个pod,以yaml格式展示结果&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">get&lt;/span> &lt;span class="n">pod&lt;/span> &lt;span class="n">pod_name&lt;/span> &lt;span class="n">-o&lt;/span> &lt;span class="n">yaml&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>资源类型&lt;/strong>&lt;/p>
&lt;p>kubernetes中所有的内容都抽象为资源，可以通过下面的命令进行查看:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">kubectl&lt;/span> &lt;span class="n">api-resources&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>经常使用的资源有下面这些：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>操作&lt;/strong>&lt;/p>
&lt;p>kubernetes允许对资源进行多种操作，可以通过&amp;ndash;help查看详细的操作命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">kubectl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-help&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>经常使用的操作有下面这些：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>下面以一个namespace / pod的创建和删除简单演示下命令的使用：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 创建一个namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create namespace dev&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 获取namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get ns&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="k">default&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">21h&lt;/span>
&lt;span class="n">dev&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">21s&lt;/span>
&lt;span class="n">kube-node-lease&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">21h&lt;/span>
&lt;span class="n">kube-public&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">21h&lt;/span>
&lt;span class="n">kube-system&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">21h&lt;/span>
&lt;span class="c"># 在此namespace下创建并运行一个nginx的Pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl run pod --image=nginx -n dev&lt;/span>
&lt;span class="n">kubectl&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-generator&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">deployment&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">v1&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">DEPRECATED&lt;/span> &lt;span class="n">and&lt;/span> &lt;span class="n">will&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">removed&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="n">future&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="n">Use&lt;/span> &lt;span class="n">kubectl&lt;/span> &lt;span class="n">run&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-generator&lt;/span>&lt;span class="p">=&lt;/span>&lt;span class="n">run-pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">v1&lt;/span> &lt;span class="n">or&lt;/span> &lt;span class="n">kubectl&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">instead&lt;/span>&lt;span class="p">.&lt;/span>
&lt;span class="n">deployment&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">apps&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">pod&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 查看新创建的pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get pod -n dev&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">864f9875b9-pcw7x&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">21s&lt;/span>
&lt;span class="c"># 删除指定的pod&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete pod pod-864f9875b9-pcw7x&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;pod-864f9875b9-pcw7x&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="c"># 删除指定的namespace&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete ns dev&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="命令式对象配置">命令式对象配置&lt;/h3>
&lt;p>命令式对象配置就是使用命令配合配置文件一起来操作kubernetes资源。&lt;/p>
&lt;p>1） 创建一个nginxpod.yaml，内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Namespace&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Pod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginxpod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dev&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx-containers&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx:1.17.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2）执行create命令，创建资源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl create -f nginxpod.yaml&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginxpod&lt;/span> &lt;span class="n">created&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时发现创建了两个资源对象，分别是namespace和pod&lt;/p>
&lt;p>3）执行get命令，查看资源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl get -f nginxpod.yaml&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">Active&lt;/span> &lt;span class="n">18s&lt;/span>
&lt;span class="n">NAME&lt;/span> &lt;span class="n">READY&lt;/span> &lt;span class="n">STATUS&lt;/span> &lt;span class="n">RESTARTS&lt;/span> &lt;span class="n">AGE&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginxpod&lt;/span> &lt;span class="n">1&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">1&lt;/span> &lt;span class="n">Running&lt;/span> &lt;span class="n">0&lt;/span> &lt;span class="n">17s&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样就显示了两个资源对象的信息&lt;/p>
&lt;p>4）执行delete命令，删除资源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl delete -f nginxpod.yaml&lt;/span>
&lt;span class="n">namespace&lt;/span> &lt;span class="s2">&amp;#34;dev&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;span class="n">pod&lt;/span> &lt;span class="s2">&amp;#34;nginxpod&amp;#34;&lt;/span> &lt;span class="n">deleted&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时发现两个资源对象被删除了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">总结:
命令式对象配置的方式操作资源，可以简单的认为：命令 + yaml配置文件（里面是命令需要的各种参数）
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="声明式对象配置">声明式对象配置&lt;/h3>
&lt;p>声明式对象配置跟命令式对象配置很相似，但是它只有一个命令apply。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="c"># 首先执行一次kubectl apply -f yaml文件，发现创建了资源&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl apply -f nginxpod.yaml&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginxpod&lt;/span> &lt;span class="n">created&lt;/span>
&lt;span class="c"># 再次执行一次kubectl apply -f yaml文件，发现说资源没有变动&lt;/span>
&lt;span class="p">[&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="nv">@master&lt;/span> &lt;span class="p">~]&lt;/span>&lt;span class="c"># kubectl apply -f nginxpod.yaml&lt;/span>
&lt;span class="n">namespace&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">dev&lt;/span> &lt;span class="n">unchanged&lt;/span>
&lt;span class="n">pod&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="n">nginxpod&lt;/span> &lt;span class="n">unchanged&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-md" data-lang="md">总结:
其实声明式对象配置就是使用apply描述一个资源最终的状态（在yaml中定义状态）
使用apply操作资源：
如果资源不存在，就创建，相当于 kubectl create
如果资源已存在，就更新，相当于 kubectl patch
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>扩展：kubectl可以在node节点上运行吗 ?&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>kubectl的运行是需要进行配置的，它的配置文件是\$HOME/.kube，如果想要在node节点运行此命令，需要将master上的.kube文件复制到node节点上，即在master节点上执行下面操作：
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">scp&lt;/span> &lt;span class="n">-r&lt;/span> &lt;span class="n">HOME&lt;/span>&lt;span class="p">/.&lt;/span>&lt;span class="n">kube&lt;/span> &lt;span class="n">node1&lt;/span>&lt;span class="err">:&lt;/span> &lt;span class="n">HOME&lt;/span>&lt;span class="p">/&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>使用推荐: 三种方式应该怎么用 ?&lt;/p>
&lt;/blockquote>
&lt;p>创建/更新资源 使用声明式对象配置 kubectl apply -f XXX.yaml&lt;/p>
&lt;p>删除资源 使用命令式对象配置 kubectl delete -f XXX.yaml&lt;/p>
&lt;p>查询资源 使用命令式对象管理 kubectl get(describe) 资源名称&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第二章 Kubernetes 安装</title><link>/k8s-install.html</link><pubDate>Thu, 28 Oct 2021 15:24:42 +0800</pubDate><guid>/k8s-install.html</guid><description>&lt;ul>
&lt;li>&lt;a href="#kubectl-%E5%AE%89%E8%A3%85">kubectl 安装&lt;/a>&lt;/li>
&lt;li>&lt;a href="#kind-%E5%AE%89%E8%A3%85">kind 安装&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%9B%86%E7%BE%A4">创建一个集群&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E6%9F%A5%E7%9C%8B%E9%9B%86%E7%BE%A4">查看集群&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%88%A0%E9%99%A4%E9%9B%86%E7%BE%A4">删除集群&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>kubernetes 安装比较复杂，用于学习可以搭建单机集群安装。
推荐使用 linux 系统安装实验。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>kubernetes有多种部署方式，目前主流的方式有kind、kubeadm、minikube、二进制包&lt;/p>
&lt;ul>
&lt;li>kind: 一个基于 Docker 安装的 kubernetes 工具（推荐）&lt;/li>
&lt;li>minikube：一个用于快速搭建单节点 kubernetes 的工具&lt;/li>
&lt;li>kubeadm：一个用于快速搭建 kubernetes 集群的工具&lt;/li>
&lt;li>二进制包 ：从官网下载每个组件的二进制包，依次去安装，此方式对于理解 kubernetes 组件更加有效&lt;/li>
&lt;/ul>
&lt;h2 id="kubectl-安装">kubectl 安装&lt;/h2>
&lt;blockquote>
&lt;p>参考: &lt;a href="https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-linux/">https://kubernetes.io/zh/docs/tasks/tools/install-kubectl-linux/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>kubectl 是 kubernetes 运行命令工具，用于部署应用、监测和管理集群资源以及查看日志。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 下载安装&lt;/span>
curl -LO &lt;span class="s2">&amp;#34;https://dl.k8s.io/release/&lt;/span>&lt;span class="k">$(&lt;/span>curl -L -s https://dl.k8s.io/release/stable.txt&lt;span class="k">)&lt;/span>&lt;span class="s2">/bin/linux/amd64/kubectl&amp;#34;&lt;/span>
&lt;span class="c1"># 添加权限，复制到/bin下，方便全局使用&lt;/span>
chmod +x kubectl
mkdir -p ~/.local/bin/kubectl
mv ./kubectl ~/.local/bin/kubectl
&lt;span class="c1"># 验证安装是否成功&lt;/span>
kubectl version --client
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="kind-安装">kind 安装&lt;/h2>
&lt;blockquote>
&lt;p>官网：https://kind.sigs.k8s.io/&lt;/p>
&lt;/blockquote>
&lt;p>下载二进制包，无须其它依赖&lt;/p>
&lt;p>&lt;a href="https://github.com/kubernetes-sigs/kind/releases">https://github.com/kubernetes-sigs/kind/releases&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
chmod +x ./kind
mv ./kind /usr/local/bin/kind
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="创建一个集群">创建一个集群&lt;/h3>
&lt;blockquote>
&lt;p>一个节点也叫集群。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 不指定名称，默认名称:kind &lt;/span>
kind create cluster
&lt;span class="c1"># 指定名称&lt;/span>
kind create cluster --name kind-2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="查看集群">查看集群&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">kind get clusters
&lt;span class="c1"># 详情&lt;/span>
kubectl cluster-info --context kind-kind
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="删除集群">删除集群&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">kind delete cluster
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="minikube-安装">minikube 安装&lt;/h2>
&lt;p>快通车：&lt;a href="https://sgfoot.com/k8s-minikube.html">Minikube&lt;/a>&lt;/p>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>第一章 kubernetes 介绍</title><link>/k8s-intro.html</link><pubDate>Thu, 28 Oct 2021 14:57:31 +0800</pubDate><guid>/k8s-intro.html</guid><description>&lt;ul>
&lt;li>&lt;a href="#%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E6%BC%94%E5%8F%98">应用部署方式演变&lt;/a>&lt;/li>
&lt;li>&lt;a href="#kubernetes%E7%AE%80%E4%BB%8B">kubernetes简介&lt;/a>&lt;/li>
&lt;li>&lt;a href="#kubernetes%E7%BB%84%E4%BB%B6">kubernetes组件&lt;/a>&lt;/li>
&lt;li>&lt;a href="#kubernetes%E6%A6%82%E5%BF%B5">kubernetes概念&lt;/a>&lt;/li>
&lt;li>&lt;a href="#%E5%8F%82%E8%80%83">参考&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>本章节主要介绍应用程序在服务器上部署方式演变以及kubernetes的概念、组件和工作原理。&lt;/p>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="应用部署方式演变">应用部署方式演变&lt;/h2>
&lt;p>在部署应用程序的方式上，主要经历了三个时代：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>传统部署&lt;/strong>：互联网早期，会直接将应用程序部署在物理机上&lt;/p>
&lt;blockquote>
&lt;p>优点：简单，不需要其它技术的参与&lt;/p>
&lt;p>缺点：不能为应用程序定义资源使用边界，很难合理地分配计算资源，而且程序之间容易产生影响&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>虚拟化部署&lt;/strong>：可以在一台物理机上运行多个虚拟机，每个虚拟机都是独立的一个环境&lt;/p>
&lt;blockquote>
&lt;p>优点：程序环境不会相互产生影响，提供了一定程度的安全性&lt;/p>
&lt;p>缺点：增加了操作系统，浪费了部分资源&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>容器化部署&lt;/strong>：与虚拟化类似，但是共享了操作系统&lt;/p>
&lt;blockquote>
&lt;p>优点：&lt;/p>
&lt;p>可以保证每个容器拥有自己的文件系统、CPU、内存、进程空间等&lt;/p>
&lt;p>运行应用程序所需要的资源都被容器包装，并和底层基础架构解耦&lt;/p>
&lt;p>容器化的应用程序可以跨云服务商、跨Linux操作系统发行版进行部署&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200505183738289.png?imageslim" alt="image-20200505183738289">&lt;/p>
&lt;p>容器化部署方式给带来很多的便利，但是也会出现一些问题，比如说：&lt;/p>
&lt;ul>
&lt;li>一个容器故障停机了，怎么样让另外一个容器立刻启动去替补停机的容器&lt;/li>
&lt;li>当并发访问量变大的时候，怎么样做到横向扩展容器数量&lt;/li>
&lt;/ul>
&lt;p>这些容器管理的问题统称为&lt;strong>容器编排&lt;/strong>问题，为了解决这些容器编排问题，就产生了一些容器编排的软件：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Swarm&lt;/strong>：Docker自己的容器编排工具&lt;/li>
&lt;li>&lt;strong>Mesos&lt;/strong>：Apache的一个资源统一管控的工具，需要和Marathon结合使用&lt;/li>
&lt;li>&lt;strong>Kubernetes&lt;/strong>：Google开源的的容器编排工具&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200524150339551.png?imageslim" alt="">&lt;/p>
&lt;h2 id="kubernetes简介">kubernetes简介&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/v2-353855dec58fcaa1477e90a869b30ad0_1440w.jpg?imageslim" alt="">&lt;/p>
&lt;p>​&lt;/p>
&lt;p>kubernetes，是一个全新的基于容器技术的分布式架构领先方案，是谷歌严格保密十几年的秘密武器 Borg 系统的一个开源版本，于2014年9月发布第一个版本，2015年7月发布第一个正式版本。&lt;/p>
&lt;p>kubernetes的本质是&lt;strong>一组服务器集群&lt;/strong>，它可以在集群的每个节点上运行特定的程序，来对节点中的容器进行管理。目的是实现资源管理的自动化，主要提供了如下的主要功能：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自我修复&lt;/strong>：一旦某一个容器崩溃，能够在1秒中左右迅速启动新的容器&lt;/li>
&lt;li>&lt;strong>弹性伸缩&lt;/strong>：可以根据需要，自动对集群中正在运行的容器数量进行调整&lt;/li>
&lt;li>&lt;strong>服务发现&lt;/strong>：服务可以通过自动发现的形式找到它所依赖的服务&lt;/li>
&lt;li>&lt;strong>负载均衡&lt;/strong>：如果一个服务起动了多个容器，能够自动实现请求的负载均衡&lt;/li>
&lt;li>&lt;strong>版本回退&lt;/strong>：如果发现新发布的程序版本有问题，可以立即回退到原来的版本&lt;/li>
&lt;li>&lt;strong>存储编排&lt;/strong>：可以根据容器自身的需求自动创建存储卷&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetes组件">kubernetes组件&lt;/h2>
&lt;p>一个kubernetes集群主要是由 &lt;strong>控制节点(master)&lt;/strong>、&lt;strong>工作节点(node)&lt;/strong> 构成，每个节点上都会安装不同的组件。&lt;/p>
&lt;p>&lt;strong>master：集群的控制平面，负责集群的决策 ( 管理 )&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>ApiServer&lt;/strong> : 资源操作的唯一入口，接收用户输入的命令，提供认证、授权、API注册和发现等机制&lt;/p>
&lt;p>&lt;strong>Scheduler&lt;/strong> : 负责集群资源调度，按照预定的调度策略将Pod调度到相应的node节点上&lt;/p>
&lt;p>&lt;strong>ControllerManager&lt;/strong> : 负责维护集群的状态，比如程序部署安排、故障检测、自动扩展、滚动更新等&lt;/p>
&lt;p>&lt;strong>Etcd&lt;/strong>：负责存储集群中各种资源对象的信息&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>node：集群的数据平面，负责为容器提供运行环境 ( 干活 )&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Kubelet&lt;/strong> : 负责维护容器的生命周期，即通过控制docker，来创建、更新、销毁容器&lt;/p>
&lt;p>&lt;strong>KubeProxy&lt;/strong> : 负责提供集群内部的服务发现和负载均衡&lt;/p>
&lt;p>&lt;strong>Docker&lt;/strong> : 负责节点上容器的各种操作&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200406184656917.png?imageslim" alt="">&lt;/p>
&lt;p>下面，以部署一个nginx服务来说明kubernetes系统各个组件调用关系：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>首先要明确，一旦kubernetes环境启动之后，master和node都会将自身的信息存储到etcd数据库中&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个nginx服务的安装请求会首先被发送到master节点的apiServer组件&lt;/p>
&lt;/li>
&lt;li>
&lt;p>apiServer组件会调用scheduler组件来决定到底应该把这个服务安装到哪个node节点上&lt;/p>
&lt;p>在此时，它会从etcd中读取各个node节点的信息，然后按照一定的算法进行选择，并将结果告知apiServer&lt;/p>
&lt;/li>
&lt;li>
&lt;p>apiServer调用controller-manager去调度Node节点安装nginx服务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>kubelet接收到指令后，会通知docker，然后由docker来启动一个nginx的pod&lt;/p>
&lt;p>pod是kubernetes的最小操作单元，容器必须跑在pod中至此，&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一个nginx服务就运行了，如果需要访问nginx，就需要通过kube-proxy来对pod产生访问的代理&lt;/p>
&lt;pre>&lt;code> 这样，外界用户就可以访问集群中的nginx服务了
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/image-20200403224313355.png?imageslim" alt="">&lt;/p>
&lt;h2 id="kubernetes概念">kubernetes概念&lt;/h2>
&lt;p>&lt;strong>Master&lt;/strong>：集群控制节点，每个集群需要至少一个master节点负责集群的管控&lt;/p>
&lt;p>&lt;strong>Node&lt;/strong>：工作负载节点，由master分配容器到这些node工作节点上，然后node节点上的docker负责容器的运行&lt;/p>
&lt;p>&lt;strong>Pod&lt;/strong>：kubernetes的最小控制单元，容器都是运行在pod中的，一个pod中可以有1个或者多个容器&lt;/p>
&lt;p>&lt;strong>Controller&lt;/strong>：控制器，通过它来实现对pod的管理，比如启动pod、停止pod、伸缩pod的数量等等&lt;/p>
&lt;p>&lt;strong>Service&lt;/strong>：pod对外服务的统一入口，下面可以维护者同一类的多个pod&lt;/p>
&lt;p>&lt;strong>Label&lt;/strong>：标签，用于对pod进行分类，同一类pod会拥有相同的标签&lt;/p>
&lt;p>&lt;strong>NameSpace&lt;/strong>：命名空间，用来隔离pod的运行环境&lt;/p>
&lt;blockquote>
&lt;p>找不到目录, 传送门：&lt;a href="https://sgfoot.com/k8s-mindmap.html">Kubernetes 总纲及脑图&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="参考">参考&lt;/h2>
&lt;ol>
&lt;li>以上笔记来自于黑马视频课程整理.&lt;/li>
&lt;li>视频入口：&lt;a href="https://www.bilibili.com/video/BV1cK4y1L7Am">https://www.bilibili.com/video/BV1cK4y1L7Am&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>如何搭建博客</title><link>/how-blog.html</link><pubDate>Thu, 21 Oct 2021 11:02:22 +0800</pubDate><guid>/how-blog.html</guid><description>&lt;h2 id="关于作者">关于作者&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Awesome Go</title><link>/awesome-go.html</link><pubDate>Tue, 28 Sep 2021 20:35:09 +0800</pubDate><guid>/awesome-go.html</guid><description>&lt;blockquote>
&lt;p>收录极好的Golang库及框架，也是本人使用过，认为不错的。分享给大家。&lt;/p>
&lt;/blockquote>
&lt;h2 id="框架类">框架类&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Gin Web 框架&lt;/td>
&lt;td>&lt;a href="https://github.com/gin-gonic/gin">https://github.com/gin-gonic/gin&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Colly 爬虫框架&lt;/td>
&lt;td>&lt;a href="https://github.com/gocolly/colly">https://github.com/gocolly/colly&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="工具类">工具类&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>名称&lt;/th>
&lt;th>网址&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Gjson 动态获取JSON&lt;/td>
&lt;td>&lt;a href="https://github.com/tidwall/gjson">https://github.com/tidwall/gjson&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sjson 动态设置JSON&lt;/td>
&lt;td>&lt;a href="https://github.com/tidwall/sjson">https://github.com/tidwall/sjson&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Prometheus: Grafana 监控 Node Exporter 主机</title><link>/node-exporter.html</link><pubDate>Fri, 24 Sep 2021 17:05:06 +0800</pubDate><guid>/node-exporter.html</guid><description>&lt;h2 id="node_exporter-安装">node_exporter 安装&lt;/h2>
&lt;blockquote>
&lt;p>监控远程 linux 服务器CPU、内存、磁盘、I/O等信息&lt;/p>
&lt;p>下载慢，请查看&lt;a href="https://www.sgfoot.com/soft.html">软件下载列表&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://prometheus.io/download/">https://prometheus.io/download/&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20200831161414.png?imageslim" alt="image-20200831161413148">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">cd /usr/local/src
wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz
tar -zxvf node_exporter-1.0.1.linux-amd64.tar.gz -C /usr/local/
cd /usr/local/
mv node_exporter-1.0.1.linux-amd64 node_exporter
cd node_exporter
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="运行">运行&lt;/h3>
&lt;p>先创建 systemd 服务&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">cat &amp;gt; /usr/lib/systemd/system/node_exporter.service &amp;lt;&amp;lt; EOF
[Unit]
Description=node_exporter
Documentation=https://prometheus.io/
After=network.target
[Service]
Type=simple
User=root
ExecStart=/usr/local/node_exporter/node_exporter
KillMode=process
Restart=on-failure
RestartSec=10s
[Install]
WantedBy=multi-user.target
EOF
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>刷新 systemd &amp;amp;&amp;amp; 运行 &amp;amp;&amp;amp; 查看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">systemctl daemon-reload # 刷新 systemd 配置
systemctl enable node_exporter # 加入开机启动
systemctl start node_exporter # 启动服务
systemctl status node_exporter # 查看详情
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="预览">预览&lt;/h3>
&lt;p>http://192.168.61.66:9100/metrics&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20200831170127.png?imageslim" alt="image-20200831170126304">&lt;/p>
&lt;h2 id="添加监控节点">添加监控节点&lt;/h2>
&lt;h3 id="添加-node_exporter">添加 node_exporter&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">vim /usr/local/prometheus/prometheus.yml
# 在最后一个节点 scrape_configs 下添加 job_name
# 空2个空格
- job_name: &amp;#39;node&amp;#39; # 一定要全局唯一, 采集本机的 metrics，需要在本机安装 node_exporter
scrape_interval: 10s # 采集的间隔时间
static_configs:
- targets: [&amp;#39;localhost:9100&amp;#39;] # 本机 node_exporter 的 endpoint
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20200831171239.png?imageslim" alt="image-20200831171238397">&lt;/p>
&lt;p>重启服务&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">systemctl&lt;/span> &lt;span class="n">restart&lt;/span> &lt;span class="n">prometheus&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="docker-安装">docker 安装&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run -d -p 9100:9100 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v &lt;span class="s2">&amp;#34;/proc:/host/proc:ro&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v &lt;span class="s2">&amp;#34;/sys:/host/sys:ro&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> -v &lt;span class="s2">&amp;#34;/:/rootfs:ro&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --net&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;host&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> prom/node-exporter
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="验证">验证&lt;/h2>
&lt;p>&lt;strong>浏览器上查看添加是否成功&lt;/strong>&lt;/p>
&lt;p>http://192.168.61.66:9090/targets&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20200831171652.png?imageslim" alt="image-20200831171651802">&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Prometheus: 安装</title><link>/prometheus-install.html</link><pubDate>Fri, 24 Sep 2021 17:04:51 +0800</pubDate><guid>/prometheus-install.html</guid><description>&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>&lt;a href="#1-%E5%AE%89%E8%A3%85">.1. 安装&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#11-%E4%B8%8B%E8%BD%BD">.1.1. 下载&lt;/a>&lt;/li>
&lt;li>&lt;a href="#12-%E8%BF%90%E8%A1%8C">.1.2. 运行&lt;/a>&lt;/li>
&lt;li>&lt;a href="#13-%E9%A2%84%E8%A7%88">.1.3. 预览&lt;/a>&lt;/li>
&lt;li>&lt;a href="#14-nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86">.1.4. nginx 反向代理&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#2-docker-%E5%AE%89%E8%A3%85">.2. Docker 安装&lt;/a>&lt;/li>
&lt;li>&lt;a href="#3-%E5%85%B3%E4%BA%8E%E4%BD%9C%E8%80%85">.3. 关于作者&lt;/a>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;h2 id="1-安装">.1. 安装&lt;/h2>
&lt;h3 id="11-下载">.1.1. 下载&lt;/h3>
&lt;blockquote>
&lt;p>prometheus提供二进制,直接解压即可用.由 go 编写&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>官网下载: &lt;a href="https://prometheus.io/download/">https://prometheus.io/download/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Centos 64x 选择下载 &lt;code>*linux-amd64.tar.gz&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">wget -c https://github.com/prometheus/prometheus/releases/download/v2.18.1/prometheus-2.18.1.darwin-amd64.tar.gz
tar -xvf prometheus-2.18.1.darwin-amd64.tar.gz -C /usr/local/
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="12-运行">.1.2. 运行&lt;/h3>
&lt;p>创建 systemd 服务&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-shell" data-lang="shell">cat &amp;gt; /usr/lib/systemd/system/prometheus.service &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s">[Unit]
&lt;/span>&lt;span class="s">Description=Prometheus
&lt;/span>&lt;span class="s">Documentation=https://prometheus.io/
&lt;/span>&lt;span class="s">After=network.target
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">[Service]
&lt;/span>&lt;span class="s">Type=simple
&lt;/span>&lt;span class="s">ExecStart=/usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/usr/local/prometheus/data
&lt;/span>&lt;span class="s">Restart=on-failure
&lt;/span>&lt;span class="s">RestartSec=42s
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">[Install]
&lt;/span>&lt;span class="s">WantedBy=multi-user.target
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>刷新 systemd &amp;amp;&amp;amp; 运行 &amp;amp;&amp;amp; 查看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">systemctl daemon-reload &lt;span class="c1"># 刷新 systemd 配置&lt;/span>
systemctl &lt;span class="nb">enable&lt;/span> prometheus &lt;span class="c1"># 加入开机启动&lt;/span>
systemctl start prometheus &lt;span class="c1"># 启动服务 &lt;/span>
systemctl status prometheus &lt;span class="c1"># 查看详情&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="13-预览">.1.3. 预览&lt;/h3>
&lt;p>&lt;a href="http://localhost:9090">http://localhost:9090&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20200831170057.png?imageslim" alt="image-20200831170056207">&lt;/p>
&lt;p>&lt;strong>自带也会产生监控数据:&lt;/strong>&lt;/p>
&lt;p>&lt;a href="http://192.168.61.66:9090/metrics">http://192.168.61.66:9090/metrics&lt;/a>&lt;/p>
&lt;h3 id="14-nginx-反向代理">.1.4. nginx 反向代理&lt;/h3>
&lt;blockquote>
&lt;p>htpasswd 参考: &lt;a href="https://www.sgfoot.com/htpasswd.html">https://www.sgfoot.com/htpasswd.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-nginx" data-lang="nginx">&lt;span class="k">server&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">listen&lt;/span> &lt;span class="mi">80&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">server_name&lt;/span> &lt;span class="s">prome.sgfoot.com&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">auth_basic&lt;/span> &lt;span class="s">&amp;#34;Auth&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">auth_basic_user_file&lt;/span> &lt;span class="s">/usr/local/nginx/conf/vhost/htpasswd.users&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">location&lt;/span> &lt;span class="s">/&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kn">proxy_pass&lt;/span> &lt;span class="s">http://127.0.0.1:9090&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kn">index&lt;/span> &lt;span class="s">index.html&lt;/span> &lt;span class="s">index.htm&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2-docker-安装">.2. Docker 安装&lt;/h2>
&lt;p>创建配置文件，进行挂载&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">mkdir -p /root/prometheus/conf/
cat &amp;gt; ~/prometheus/conf/prometheus.yml &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s"># my global config
&lt;/span>&lt;span class="s">global:
&lt;/span>&lt;span class="s"> scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
&lt;/span>&lt;span class="s"> evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
&lt;/span>&lt;span class="s"> # scrape_timeout is set to the global default (10s).
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s"># Alertmanager configuration
&lt;/span>&lt;span class="s">alerting:
&lt;/span>&lt;span class="s"> alertmanagers:
&lt;/span>&lt;span class="s"> - static_configs:
&lt;/span>&lt;span class="s"> - targets:
&lt;/span>&lt;span class="s"> - 192.168.100.100:9093
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s"># Load rules once and periodically evaluate them according to the global &amp;#39;evaluation_interval&amp;#39;.
&lt;/span>&lt;span class="s">rule_files:
&lt;/span>&lt;span class="s"> # - &amp;#34;first_rules.yml&amp;#34;
&lt;/span>&lt;span class="s"> # - &amp;#34;second_rules.yml&amp;#34;
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s"># A scrape configuration containing exactly one endpoint to scrape:
&lt;/span>&lt;span class="s"># Here it&amp;#39;s Prometheus itself.
&lt;/span>&lt;span class="s">scrape_configs:
&lt;/span>&lt;span class="s"> # The job name is added as a label `job=&amp;lt;job_name&amp;gt;` to any timeseries scraped from this config.
&lt;/span>&lt;span class="s"> - job_name: &amp;#34;prometheus&amp;#34;
&lt;/span>&lt;span class="s"> # metrics_path defaults to &amp;#39;/metrics&amp;#39;
&lt;/span>&lt;span class="s"> # scheme defaults to &amp;#39;http&amp;#39;.
&lt;/span>&lt;span class="s"> scrape_interval: 10s # 间隔pull时间
&lt;/span>&lt;span class="s"> static_configs:
&lt;/span>&lt;span class="s"> - targets: [&amp;#34;localhost:9090&amp;#34;]
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run -d -p 9090:9090 --name&lt;span class="o">=&lt;/span>prometheus -v ~/prometheus/conf/:/etc/prometheus/ quay.io/prometheus/prometheus
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="3-关于作者">.3. 关于作者&lt;/h2>
&lt;p>我的博客：&lt;a href="https://www.sgfoot.com">https://www.sgfoot.com&lt;/a>&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>再述 SOLID 原则</title><link>/again-solid.html</link><pubDate>Thu, 06 May 2021 16:40:10 +0800</pubDate><guid>/again-solid.html</guid><description>&lt;blockquote>
&lt;p>再述 SOLID 原则，因为这些原则是设计模式的基石，所有的模式都是基于这些原则展开的。&lt;/p>
&lt;/blockquote>
&lt;h2 id="单一职责原则">单一职责原则&lt;/h2>
&lt;p>经典定义：应该有且仅有一个原因引起”类“的变更。(不仅仅适应于类，还适应于方法，接口，函数等)&lt;/p>
&lt;p>&lt;strong>好处：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>类的复杂性降低，实现什么职责都有清晰的定义。&lt;/li>
&lt;li>可读性提高，复杂性降低，那当然可读性提高了。&lt;/li>
&lt;li>可维护性提高，可读性提高，那当然更容易维护了。&lt;/li>
&lt;li>变更引 起的风险降低，变更是必不可少的，如果接口的单一职责做得好，一个接口修改只对相应的实现类有影响，对其他的接口无影响，这对系统的扩展性、维护性都有非常大的帮助。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：单一职责原则，最重要做到单一职责，类的设计尽量做到只有一个原因引起变化。&lt;/em>&lt;/p>
&lt;h2 id="里氏替换原则">里氏替换原则&lt;/h2>
&lt;p>经典定义：父类能出现的地方子类就可以出现，而且替换为子类也不会产生任何错误或异常。使用者可能根本就不需要知道是父类还是子类。但是，反过来就不行，有子类出现的地方，父类未必能适应。&lt;/p>
&lt;p>继承即有优点与有缺点，为了平衡引入里氏替换原则。&lt;/p>
&lt;p>&lt;strong>继承的优点：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>代码共享，减少创建类的工作量。&lt;/li>
&lt;li>提高代码的重用性。&lt;/li>
&lt;li>子类可以形似父类，但又异于父类。&lt;/li>
&lt;li>提高代码的可扩展性。&lt;/li>
&lt;li>提高产品或项目的开放性。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>继承的缺点：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>继承是侵入性的。&lt;/li>
&lt;li>降低代码的灵活性。&lt;/li>
&lt;li>增强了耦合性。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：父类出现的地方子类就可以出现且无异常。反之不行。&lt;/em>&lt;/p>
&lt;h2 id="依赖倒置原则">依赖倒置原则&lt;/h2>
&lt;p>经典定义：高层模块不应该依赖低层模块，两者都应该依赖其抽象。抽象不应该依赖细节。细节应该依赖抽象。&lt;/p>
&lt;p>每一个逻辑的实现都是由原子逻辑组成的，不可以分割的原子逻辑就是低层模块，原子逻辑的再组装就是高层模块。&lt;/p>
&lt;p>抽象是指接口或抽象类，两者都是不能直接被实例化的。&lt;/p>
&lt;p>细节就是实现类，实现接口或继承抽象而产生的类就是细节。&lt;/p>
&lt;p>优点：&lt;/p>
&lt;ol>
&lt;li>减少类间的耦合性。&lt;/li>
&lt;li>易于扩展&lt;/li>
&lt;/ol>
&lt;p>依赖的三种写法：&lt;/p>
&lt;ol>
&lt;li>构造函数传递依赖对象。&lt;/li>
&lt;li>Setter 方法传递依赖对象。&lt;/li>
&lt;li>接口声明依赖对象即依赖注入。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：面向接口编程。&lt;/em>&lt;/p>
&lt;h2 id="接口隔离原则">接口隔离原则&lt;/h2>
&lt;p>经典定义：客户端不应该依赖它不需要的接口。或类间依赖关系应该建立在最小的接口上。&lt;/p>
&lt;ol>
&lt;li>接口要尽量小。&lt;/li>
&lt;li>接口要高内聚。&lt;/li>
&lt;li>定制服务 。&lt;/li>
&lt;li>接口设计是有限度的。
&lt;ol>
&lt;li>接口的设计粒度越小，系统越灵活&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>一句话：接口尽量细化，同时接口中的方法尽量少。&lt;/p>
&lt;h2 id="迪米特法则">迪米特法则&lt;/h2>
&lt;p>经典定义：一个对象应该对其他对象有最少的了解。&lt;/p>
&lt;ol>
&lt;li>只与直接的朋友通信。&lt;/li>
&lt;li>朋友间也是有距离的。
&lt;ol>
&lt;li>尽量不要对外公布太多的 public 方法和非静态的 public 变量。&lt;/li>
&lt;li>多使用 private 权限。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>是自己的就是自己的。
&lt;ol>
&lt;li>如果一个方法放在本类中，即不增加类间的关系，也对本类不产生负面影响，那就放置在本类中。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>谨慎使用 &lt;code>Serializable&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：一个对象应该对自己需要耦合或调用的类知道得最少。&lt;/em>&lt;/p>
&lt;h2 id="开闭原则">开闭原则&lt;/h2>
&lt;blockquote>
&lt;p>开闭原则是最基础的一个原则。也是前五个原则的精神领袖。&lt;/p>
&lt;/blockquote>
&lt;p>经典定义：对修改关闭，对扩展开放。&lt;/p>
&lt;ol>
&lt;li>开闭原则有于利测试。&lt;/li>
&lt;li>开闭原则可以提高复用性。&lt;/li>
&lt;li>可以原则可以提高维护性。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：开闭原则是其它原则的精神领袖。&lt;/em>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>&lt;img src="https://gitee.com/sgfoot/img/raw/master/blog/20210508184150.png" alt="">&lt;/p>
&lt;ol>
&lt;li>如图所示，开闭原则是以上5种原则的精神领袖，贯穿始终。&lt;/li>
&lt;li>单一原则与迪米特原则更像一位导师，为了更好的指导每一个类，方法和接口的设计。&lt;/li>
&lt;li>单一原则强调地是单一职责，仅有一个原因引起。&lt;/li>
&lt;li>迪米特原则强调不依赖过多的关系，仅依赖直接关系，避免交叉依赖导致系统复杂难以维护。&lt;/li>
&lt;li>里氏替换原则更像一种约束，保证替换的准确性。&lt;/li>
&lt;li>接口隔离原则是避免拥肿的方法堆积，只设计需要的接口，保持接口的单一性，复杂的接口则采用组合实现。&lt;/li>
&lt;li>依赖倒置原则是整个接口设计的灵魂，永远底层或细节依赖抽象。保证系统接口的稳定性，规范性。&lt;/li>
&lt;/ol>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Docker 安装 php 环境</title><link>/docker-php.html</link><pubDate>Tue, 06 Apr 2021 11:38:33 +0800</pubDate><guid>/docker-php.html</guid><description>&lt;blockquote>
&lt;p>php 环境需要与 nginx 配合安装，共享 nginx 解析的目录(www)&lt;/p>
&lt;/blockquote>
&lt;h2 id="基本参数">基本参数&lt;/h2>
&lt;ol>
&lt;li>&lt;code>-d&lt;/code> 后台启动&lt;/li>
&lt;li>&lt;code>--name&lt;/code> 定义一个别名&lt;/li>
&lt;li>&lt;code>-v&lt;/code> 挂载目录&lt;/li>
&lt;li>&lt;code>--link&lt;/code> 链接其它 docker 容器名称&lt;/li>
&lt;/ol>
&lt;h2 id="安装-php">安装 php&lt;/h2>
&lt;blockquote>
&lt;p>即安装 php-fpm 环境&lt;/p>
&lt;p>docker search php&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run --name dev-phpfpm -v /d/local/nginx/www:/www -d php:5.6-fpm
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;code>/d/local/nginx/www&lt;/code> 这里必须是 nginx 解析的目录，也就是与 nginx 共享目录。&lt;/li>
&lt;/ol>
&lt;h2 id="安装-nginx">安装 nginx&lt;/h2>
&lt;blockquote>
&lt;p>ro 表示只读权限&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run --name dev-nginx-php -p 8080:80 -d -v /d/local/nginx/www:/usr/share/nginx/html:ro -v /d/local/nginx/conf.d:/etc/nginx/conf.d:ro --link dev-phpfpm:php nginx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;code>/d/local/nginx/www&lt;/code> , &lt;code>/d/local/nginx/conf.d&lt;/code>是宿主机的目录，可以自定义。&lt;/li>
&lt;li>&lt;code>/usr/share/nginx/html&lt;/code>, &lt;code>/etc/nginx/conf.d&lt;/code> 是 nginx 里的固定目录，不能更改。&lt;/li>
&lt;li>&lt;code>--link dev-phpfpm:php&lt;/code> 是链接上面的 &lt;code>php&lt;/code> 容器，&lt;code>dev-phpfpm&lt;/code>是别名，&lt;code>php&lt;/code> 是php容器&lt;/li>
&lt;/ol>
&lt;h2 id="修改nginx配置文件">修改nginx配置文件&lt;/h2>
&lt;blockquote>
&lt;p>/d/local/nginx/conf.d 是 nginx 映射的目录。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>/d/local/nginx/conf.d&lt;/code> 目录下创建:&lt;code>php.conf&lt;/code>文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">server &lt;span class="o">{&lt;/span>
listen 80&lt;span class="p">;&lt;/span>
server_name localhost&lt;span class="p">;&lt;/span>
location / &lt;span class="o">{&lt;/span>
root /usr/share/nginx/html&lt;span class="p">;&lt;/span>
index index.html index.htm index.php&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
error_page &lt;span class="m">500&lt;/span> &lt;span class="m">502&lt;/span> &lt;span class="m">503&lt;/span> &lt;span class="m">504&lt;/span> /50x.html&lt;span class="p">;&lt;/span>
&lt;span class="nv">location&lt;/span> &lt;span class="o">=&lt;/span> /50x.html &lt;span class="o">{&lt;/span>
root /usr/share/nginx/html&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
location ~ &lt;span class="se">\.&lt;/span>php$ &lt;span class="o">{&lt;/span>
fastcgi_pass php:9000&lt;span class="p">;&lt;/span>
fastcgi_index index.php&lt;span class="p">;&lt;/span>
fastcgi_param SCRIPT_FILENAME /www/&lt;span class="nv">$fastcgi_script_name&lt;/span>&lt;span class="p">;&lt;/span>
include fastcgi_params&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="验证">验证&lt;/h2>
&lt;p>在 &lt;code>/d/local/nginx/www&lt;/code>目录下创建，&lt;code>phpinfo.php&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-php" data-lang="php">&lt;span class="o">&amp;lt;?&lt;/span>&lt;span class="nx">php&lt;/span>
&lt;span class="k">echo&lt;/span> &lt;span class="nx">phpinfo&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Docker笔记(七) 安装 Redis</title><link>/docker-redis.html</link><pubDate>Tue, 23 Mar 2021 11:49:46 +0800</pubDate><guid>/docker-redis.html</guid><description>&lt;h2 id="下载镜像">下载镜像&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker search redis
docker pull redis &lt;span class="c1"># 下载最新的 redis&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装脚本">安装脚本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="c1">################&lt;/span>
&lt;span class="c1"># DOCKER 创建 Redis 实例&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1">################&lt;/span>
&lt;span class="nv">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span> &lt;span class="c1"># Docker 名称&lt;/span>
&lt;span class="nv">home&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$2&lt;/span> &lt;span class="c1"># 安装目录&lt;/span>
&lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">6379&lt;/span> &lt;span class="c1"># 端口号&lt;/span>
&lt;span class="nv">host&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span> &lt;span class="c1"># 绑定HOST&lt;/span>
&lt;span class="nv">password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;123456&amp;#34;&lt;/span> &lt;span class="c1"># 密码&lt;/span>
&lt;span class="c1"># docker 名称必须输入&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> -z &lt;span class="nv">$name&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;docker name is null&amp;#34;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="m">0&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 未设置安装目录则默认 /data/docker&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> -z &lt;span class="nv">$home&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nv">home&lt;/span>&lt;span class="o">=&lt;/span>/data/docker/
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># redis 存储目录&lt;/span>
&lt;span class="nv">redis_home&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">redis/&amp;#34;&lt;/span>
&lt;span class="c1"># 持久化存储目录&lt;/span>
&lt;span class="nv">append_home&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">redis_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">data/&amp;#34;&lt;/span>
&lt;span class="c1"># 配置存储目录&lt;/span>
&lt;span class="nv">conf_home&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">redis_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">conf/&amp;#34;&lt;/span>
&lt;span class="c1"># 配置文件名&lt;/span>
&lt;span class="nv">conf_filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">conf_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">redis.conf&amp;#34;&lt;/span>
&lt;span class="c1"># 目录为空则创建&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> ! -d &lt;span class="si">${&lt;/span>&lt;span class="nv">redis_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
mkdir -p &lt;span class="si">${&lt;/span>&lt;span class="nv">redis_home&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> ! -d &lt;span class="si">${&lt;/span>&lt;span class="nv">append_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
mkdir -p &lt;span class="si">${&lt;/span>&lt;span class="nv">append_home&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nb">test&lt;/span> ! -d &lt;span class="si">${&lt;/span>&lt;span class="nv">conf_home&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
mkdir -p &lt;span class="si">${&lt;/span>&lt;span class="nv">conf_home&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
cat &amp;gt; &lt;span class="si">${&lt;/span>&lt;span class="nv">conf_filename&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s">bind ${host}
&lt;/span>&lt;span class="s">protected-mode no
&lt;/span>&lt;span class="s">appendonly yes
&lt;/span>&lt;span class="s">requirepass ${password}
&lt;/span>&lt;span class="s">EOF&lt;/span>
docker run --restart&lt;span class="o">=&lt;/span>always --name &lt;span class="si">${&lt;/span>&lt;span class="nv">name&lt;/span>&lt;span class="si">}&lt;/span> -p &lt;span class="si">${&lt;/span>&lt;span class="nv">port&lt;/span>&lt;span class="si">}&lt;/span>:6379 -v &lt;span class="si">${&lt;/span>&lt;span class="nv">append_home&lt;/span>&lt;span class="si">}&lt;/span>:/data -v &lt;span class="si">${&lt;/span>&lt;span class="nv">conf_filename&lt;/span>&lt;span class="si">}&lt;/span>:/etc/redis/redis.conf -d redis redis-server /etc/redis/redis.conf
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;installed is ok!&amp;#34;&lt;/span>
docker ps
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Systemd 管理 Golang 进程</title><link>/systemd-golang.html</link><pubDate>Mon, 15 Mar 2021 20:13:44 +0800</pubDate><guid>/systemd-golang.html</guid><description>&lt;h2 id="systemd-脚本">systemd 脚本&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">project_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;mygo&amp;#34;&lt;/span>
&lt;span class="nv">project_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/data/backend/&amp;#34;&lt;/span>
&lt;span class="nv">exec_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">project_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">project_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
cat &amp;gt; /lib/systemd/system/&lt;span class="si">${&lt;/span>&lt;span class="nv">project_name&lt;/span>&lt;span class="si">}&lt;/span>.service &lt;span class="s">&amp;lt;&amp;lt; EOF
&lt;/span>&lt;span class="s">[Unit]
&lt;/span>&lt;span class="s">Description=mygo systemd
&lt;/span>&lt;span class="s">Documentation=https://www.sgfoot.com
&lt;/span>&lt;span class="s">After=network.target
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">[Service]
&lt;/span>&lt;span class="s">Type=simple
&lt;/span>&lt;span class="s">User=root
&lt;/span>&lt;span class="s"># 启动命令
&lt;/span>&lt;span class="s">ExecStart=${exec_path}
&lt;/span>&lt;span class="s"># 重启命令
&lt;/span>&lt;span class="s">ExecReload=/bin/kill -SIGINT
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s"># 环境变量
&lt;/span>&lt;span class="s">Environment=&amp;#34;SGFOOT_ENV=pro&amp;#34;
&lt;/span>&lt;span class="s">Environment=&amp;#34;SGFOOT_PATH=/data/conf&amp;#34;
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">KillMode=process
&lt;/span>&lt;span class="s">Restart=on-failure
&lt;/span>&lt;span class="s">RestartSec=3s
&lt;/span>&lt;span class="s">
&lt;/span>&lt;span class="s">[Install]
&lt;/span>&lt;span class="s">WantedBy=multi-user.targe
&lt;/span>&lt;span class="s">EOF&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="管理">管理&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">systemctl daemon-reload &lt;span class="c1"># 更新配置&lt;/span>
systemctl start mygo &lt;span class="c1"># 启动&lt;/span>
systemctl stop mygo &lt;span class="c1"># 停止&lt;/span>
systemctl restart mygo &lt;span class="c1"># 重启&lt;/span>
systemctl &lt;span class="nb">enable&lt;/span> mygo &lt;span class="c1"># 加入开机启动&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>linux 忘记密码</title><link>/linux-forget-password.html</link><pubDate>Wed, 03 Mar 2021 15:57:12 +0800</pubDate><guid>/linux-forget-password.html</guid><description>&lt;h2 id="启动">启动&lt;/h2>
&lt;ol>
&lt;li>使用上下键选择不同的内核（可能有些机器就只有一个内核）&lt;/li>
&lt;li>选中内核后，按&lt;code>e&lt;/code> 键进入编辑状态&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210303160003.png?imageslim" alt="image-20210303160002306">&lt;/p>
&lt;h2 id="编辑">编辑&lt;/h2>
&lt;ol>
&lt;li>以下内容都是可以编辑，添加或删除的代码。（谨慎操作）&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210303160105.png?imageslim" alt="image-20210303160104283">&lt;/p>
&lt;ol start="2">
&lt;li>找到&lt;code>linux16&lt;/code>的字符串， 然后再在本行中找到&lt;code>ro&lt;/code>的字母，将其替换成&lt;code>rw init=/sysroot/bin/sh&lt;/code>&lt;/li>
&lt;li>然后按&lt;code>ctrl+x&lt;/code>组合键，系统进入emergency(紧急情况)模式&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210303160720.png?imageslim" alt="image-20210303160719076">&lt;/p>
&lt;ol start="4">
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">chroot /sysroot/ &lt;span class="c1"># 切换回原始系统&lt;/span>
&lt;span class="nv">LANG&lt;/span>&lt;span class="o">=&lt;/span>en &lt;span class="c1"># 如果出现方块，不是字母的情况下设置成英文语言&lt;/span>
passwd root &lt;span class="c1"># 对 root 修改密码&lt;/span>
touch /.autorelabel &lt;span class="c1"># 使SELinux生效，密码生效&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="c1"># 退出&lt;/span>
reboot &lt;span class="c1"># 重启命令&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210318192332.png?imageslim" alt="image-20210318192331000">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210318191749.png?imageslim" alt="image-20210318191741120">&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-设计原则与思想总结(二十)</title><link>/gof-think-summary.html</link><pubDate>Fri, 26 Feb 2021 21:12:54 +0800</pubDate><guid>/gof-think-summary.html</guid><description>&lt;h2 id="编写高质量代码">编写高质量代码&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210226211411.png?imageslim" alt="img">&lt;/p>
&lt;h2 id="代码质量评判标准">代码质量评判标准&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210226211509.jpeg?imageslim" alt="img">&lt;/p>
&lt;h2 id="面向对象">面向对象&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210226211540.jpeg?imageslim" alt="img">&lt;/p>
&lt;h2 id="设计原则">设计原则&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210226211609.jpeg?imageslim" alt="img">&lt;/p>
&lt;h2 id="规范与重构">规范与重构&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210226211635.jpeg?imageslim" alt="img">&lt;/p>
&lt;blockquote>
&lt;p>以上脑图来自极客时间&lt;/p>
&lt;/blockquote>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Iptables 防火墙基础操作(一)</title><link>/iptables.html</link><pubDate>Tue, 23 Feb 2021 11:53:51 +0800</pubDate><guid>/iptables.html</guid><description>&lt;blockquote>
&lt;p>基于 linxu centos 7&lt;/p>
&lt;/blockquote>
&lt;h2 id="查看防火墙">查看防火墙&lt;/h2>
&lt;blockquote>
&lt;p>iptables 命令大小写敏感&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">iptables -nL
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="添加一条规则">添加一条规则&lt;/h2>
&lt;p>添加一条开放 9090 端口的规则&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 插入最前面&lt;/span>
iptables -I INPUT -p tcp --dport &lt;span class="m">9090&lt;/span> -j ACCEPT
&lt;span class="c1"># 追加最后面&lt;/span>
iptables -A INPUT -p tcp --dport &lt;span class="m">9090&lt;/span> -j ACCEPT
&lt;span class="c1"># 插入某指定位置&lt;/span>
iptables -I INPUT &lt;span class="m">3&lt;/span> -p tcp --dport &lt;span class="m">9090&lt;/span> -j ACCEPT
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-重构-15条编程规范(十九)</title><link>/gof-refactor-4.html</link><pubDate>Mon, 22 Feb 2021 19:48:31 +0800</pubDate><guid>/gof-refactor-4.html</guid><description>&lt;h2 id="为什么要编程规范">为什么要编程规范&lt;/h2>
&lt;p>构建一个大型项目，往往是很多人一起参与，堆砌的代码行数都是成千上万行。如何保证代码的健壮性？编程规范必不可少。&lt;/p>
&lt;h2 id="命名">命名&lt;/h2>
&lt;blockquote>
&lt;p>命名能力体现了一个程序员的基本编程素养。&lt;/p>
&lt;/blockquote>
&lt;p>让你的名字承载更多的信息，把信息装到名字里。&lt;/p>
&lt;ol>
&lt;li>命名的关键是能准确达意，对于不同作用域的命名，我们可以适当地选择不同的长度。&lt;/li>
&lt;li>利用上下文简化命名。&lt;/li>
&lt;li>命名要可读，可搜索。如 get, select, set等等。&lt;/li>
&lt;li>用具体的名字代替抽象的名字。
&lt;ul>
&lt;li>检测服务是否可以监听某个给定的TCP/IP端口。&lt;/li>
&lt;li>ServerCanStart() 换成 CanListenOnPort()&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 可以到 &lt;a href="https://github.com">github&lt;/a> 上找一些相关的项目，看看别人是如何命名的。&lt;/em>&lt;/p>
&lt;h2 id="注释">注释&lt;/h2>
&lt;blockquote>
&lt;p>命名很重要，注释跟命名同等重要。注释就是对代码的有力解释。&lt;/p>
&lt;/blockquote>
&lt;p>注释的内容主要包括三个方面：做什么(what)，为什么(why)，怎么做(how)。&lt;/p>
&lt;p>为什么要写注释呢？&lt;/p>
&lt;ol>
&lt;li>注释比代码承载的信息更多。&lt;/li>
&lt;li>注释起到总结性作用，文档的作用。通过注释大概了解代码的实现思路，阅读起来更加容易。&lt;/li>
&lt;li>一些总结性注释能让代码结构更清晰。&lt;/li>
&lt;/ol>
&lt;p>对于类和函数一定要写注释，尽量写全面，详细。对于函数内部，可以少写一些。&lt;/p>
&lt;h2 id="代码行数">代码行数&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>函数的行数最好不要超过一屏幕。大约在50~80行。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写长函数时，需要拆分主干逻辑和次要逻辑。抽取公共且独立的处理逻辑。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="一行代码">一行代码&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>一行代码最好不要超过IDE显示的宽度。大约在80~100个字符。&lt;/p>
&lt;p>如果超出行数导致换行会影响代码的整洁，不利用阅读。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="空行分割单元块">空行分割单元块&lt;/h2>
&lt;p>对于那些影响逻辑的长函数，无法拆分的长函数，为了让逻辑更加清晰，可以使用空行来分割各个代码块。&lt;/p>
&lt;h2 id="代码缩进">代码缩进&lt;/h2>
&lt;blockquote>
&lt;p>Go 语言，使用 gofmt 或 goimports 自动缩进。&lt;/p>
&lt;/blockquote>
&lt;p>目前有使用两格缩进和四格缩进。主要看你使用的语言业内，主流如何使用。&lt;/p>
&lt;p>如 php 用四格缩进，JAVA 用两格缩进。&lt;/p>
&lt;h2 id="大括号是否另起一行">大括号是否另起一行&lt;/h2>
&lt;blockquote>
&lt;p>Go 语言强制使用与函数名同一行。&lt;/p>
&lt;/blockquote>
&lt;p>目前有使用与函数名同一行或单独占一行。&lt;/p>
&lt;p>主要看你使用的语言业内，主流如何使用。&lt;/p>
&lt;p>如 php 喜欢使用单独占一行。JAVA 喜欢使用与函数名同一行。&lt;/p>
&lt;h2 id="排列顺序">排列顺序&lt;/h2>
&lt;blockquote>
&lt;p>Go 语言，使用 gofmt 或 goimports 自动排序。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>依赖类，按照字母序从小到大排列。&lt;/li>
&lt;li>在类中，成员变量排在函数前面。&lt;/li>
&lt;li>在函数中，成员排在最上面。&lt;/li>
&lt;li>作用域从大到小排列。public &amp;gt; protected &amp;gt; private。&lt;/li>
&lt;/ol>
&lt;h2 id="把代码分割成更小的单元块">把代码分割成更小的单元块&lt;/h2>
&lt;p>&lt;strong>为什么要分割更小的单元块：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>大部分人阅读代码的习惯都是，先看整体再看细节。&lt;/li>
&lt;li>我们要有模块化和抽象思维，善于将大块的复杂逻辑提炼成类或者函数，屏蔽掉细节。&lt;/li>
&lt;li>让阅读代码的人不至于迷失在细节中，这样能极大地提高代码的可读性。&lt;/li>
&lt;/ol>
&lt;h2 id="避免函数参数过多">避免函数参数过多&lt;/h2>
&lt;p>函数的参数大于等于5个以上时，会影响代码可读性，使用起来也不方便。针对这种情况，一般有2种处理方法：&lt;/p>
&lt;ol>
&lt;li>考虑函数是否职责单一，是否能通过拆分成多个函数的方式来减少参数。&lt;/li>
&lt;li>将函数的参数封装成对象。&lt;/li>
&lt;/ol>
&lt;h2 id="勿用函数参数来控制逻辑">勿用函数参数来控制逻辑&lt;/h2>
&lt;p>不要在函数中使用布尔类的标识参数来控制内部逻辑。这明显违背单一职责和接口隔离原则。&lt;/p>
&lt;p>我们的建议将其拆成两个函数，可读性也要更好。&lt;/p>
&lt;h2 id="函数设计要职责单一">函数设计要职责单一&lt;/h2>
&lt;p>一个函数只描述一件事，保持函数的单一职责。&lt;/p>
&lt;h2 id="移除过深的嵌套层次">移除过深的嵌套层次&lt;/h2>
&lt;p>代码嵌套层次过深往往是因为&lt;code>if-else&lt;/code>, &lt;code>switch-case&lt;/code>,&lt;code>for&lt;/code> 循环过度嵌套导致的。&lt;/p>
&lt;p>建议超过2~3层就要思考一下如何减少嵌套。过深的嵌套本身理解起来就比较费劲。&lt;/p>
&lt;p>4种常见的思路：&lt;/p>
&lt;ol>
&lt;li>去掉多余的 if 或 else 语句。&lt;/li>
&lt;li>使用编程语言提供的 continue,break, return 关键字，提前退出嵌套。&lt;/li>
&lt;li>调整执行顺序来减少嵌套。&lt;/li>
&lt;li>将部分嵌套逻辑封装成函数调用，以此来减少嵌套。&lt;/li>
&lt;/ol>
&lt;h2 id="学会使用解释性变量">学会使用解释性变量&lt;/h2>
&lt;ol>
&lt;li>常量取代魔法数字。&lt;/li>
&lt;li>使用解释性变量来解释复杂表达式。&lt;/li>
&lt;/ol>
&lt;h2 id="统计编码规范">统计编码规范&lt;/h2>
&lt;p>一个项目，一个团队，一个公司。一定要制定统主的编码规范，并且通过 Code Review 督促执行，这对提高代码质量有立竿见影的效果。&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-重构-解耦(十八)</title><link>/gof-refactor-3.html</link><pubDate>Sat, 20 Feb 2021 21:22:55 +0800</pubDate><guid>/gof-refactor-3.html</guid><description>&lt;h2 id="解耦为何如此重要">解耦为何如此重要&lt;/h2>
&lt;p>解耦是保证代码的松耦合，高内聚。防止代码质量腐化到不可救药地步的有效手段。&lt;/p>
&lt;p>代码”高内聚，松耦合“也就意味着，代码结构清晰，分层和模块化合理，依赖关系简单，模块或类之间的耦合小，代码质量自然就高。&lt;/p>
&lt;h2 id="代码是否需要解耦">代码是否需要解耦&lt;/h2>
&lt;p>判断代码是否符合”高内聚，松耦合”，可以从如下方法判断。&lt;/p>
&lt;ol>
&lt;li>看修改代码会不会牵一发而动全身。&lt;/li>
&lt;li>把模块与模块之间，类与类之间的依赖关系画出来。根据依赖关系图的复杂性判断是否需要解耦重构。&lt;/li>
&lt;/ol>
&lt;h2 id="如何给代码解耦">如何给代码解耦&lt;/h2>
&lt;h3 id="1封装与抽象">1.封装与抽象&lt;/h3>
&lt;p>封装和抽象可以有效地隐藏实现的复杂性，隔离实现的易变性，给依赖的模块提供稳定且易用的抽象接口。&lt;/p>
&lt;h3 id="2中间层">2.中间层&lt;/h3>
&lt;p>引入中间层能简化模块或类之间的依赖关系。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210220213635.png?imageslim" alt="image-20210220213635763">&lt;/p>
&lt;p>我们在进行重构的时候，引入中间层可以起到过渡的作用，能够让开发和重构同步进行，不互相干扰。&lt;/p>
&lt;p>分四个阶段完成接口的修改：&lt;/p>
&lt;ol>
&lt;li>引入一个中间层，包裹老的接口，提供新的接口定义。&lt;/li>
&lt;li>新开发的代码依赖中间层提供的新接口。&lt;/li>
&lt;li>将依赖老接口的代码改为调用新接口。&lt;/li>
&lt;li>确保所有代码都调用新接口之后，删除掉老的接口。&lt;/li>
&lt;/ol>
&lt;h3 id="3模块化">3.模块化&lt;/h3>
&lt;p>模块化是构建复杂系统常用的手段。&lt;/p>
&lt;p>将大而复杂的系统拆分成各个独立的模块，让不同人负责不同的模块。&lt;/p>
&lt;p>每个模块之间耦合很小，每个小团队聚集于一个独立的高内聚模块来开发。&lt;/p>
&lt;p>最终像搭积木一样将各个模块组装起来，构建成一个超级复杂的系统。&lt;/p>
&lt;h3 id="4设计思想和原则">4.设计思想和原则&lt;/h3>
&lt;ol>
&lt;li>单一职责原则&lt;/li>
&lt;li>基于接口而非实现编程&lt;/li>
&lt;li>依赖注入&lt;/li>
&lt;li>多用组合少用继承&lt;/li>
&lt;li>迪米特法则&lt;/li>
&lt;/ol>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-重构-单元测试(十七)</title><link>/gof-refactor-2.html</link><pubDate>Fri, 19 Feb 2021 21:06:22 +0800</pubDate><guid>/gof-refactor-2.html</guid><description>&lt;h2 id="什么是单元测试">什么是单元测试&lt;/h2>
&lt;p>单元测试是代码层面的测试，由研发自己来编写，用于测试“自己”编写的代码逻辑的正确性。&lt;/p>
&lt;p>&lt;strong>单元测试主要测试范围：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>类&lt;/li>
&lt;li>函数&lt;/li>
&lt;/ol>
&lt;p>单元测试有别于集成测试。&lt;/p>
&lt;p>&lt;strong>集成测试主要测试范围：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>模块&lt;/li>
&lt;li>系统&lt;/li>
&lt;li>功能块&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 单元测试是粒度小的测试。考验程序员思维的缜密程度。&lt;/em>&lt;/p>
&lt;h2 id="为什么要写单元测试">为什么要写单元测试&lt;/h2>
&lt;ol>
&lt;li>单元测试能有效地帮你发现代码中的BUG
&lt;ul>
&lt;li>写代码的最高境界就是 bug free 的状态。&lt;/li>
&lt;li>避免低级 bug 的出现。&lt;/li>
&lt;li>保证每一行代码运行良好，逻辑正确。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>写单元测试能帮你发现代码设计上的问题
&lt;ul>
&lt;li>如果我很难为其编写单元测试，或者单元测试写起来很吃力，那往往就意味着代码设计得不够合理。&lt;/li>
&lt;li>如没有使用依赖注入，大量使用静态函数，全局变量，代码调试耦合等情况。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单元测试是对集成测试的有力补充
&lt;ul>
&lt;li>集成测试无法覆盖得很全面，复杂系统往往很多模块。需要单元测试加持。&lt;/li>
&lt;li>如果我们能保证每个类，每个函数能按照我们的预期来执行，底层bug少了。组装起来的整个系统，bug也相应减少。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>写单元测试的过程本身就是代码重构的过程
&lt;ul>
&lt;li>单元测试实际上就是落地执行持续重构的一个有效途径。&lt;/li>
&lt;li>编写单元测试就相当于对代码的一次自我Code Review。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>阅读单元测试能帮助你快速熟悉代码
&lt;ul>
&lt;li>单元测试用例就是用户用例，反映了代码的功能和如何使用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单元测试是TDD可落地执行的改进方案
&lt;ul>
&lt;li>单元测试正好是对TDD测试驱动开发的一种改进方案。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="如何编写单元测试">如何编写单元测试&lt;/h2>
&lt;p>每个语言都有不同的写法。如 Golang 只需要以下划线加 test 命名，函数以 Test 开头就是单元测试。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kd">func&lt;/span> &lt;span class="nf">TestFunc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">testing&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">T&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// todo
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还可以使用第三方提供的单元测试框架。如 GoConvey 。&lt;/p>
&lt;ol>
&lt;li>写单元测试真的是件很耗时的事情。单元测试代码量一般是被测代码本身的1~2倍&lt;/li>
&lt;li>单元测试不会在生产上运行，而且每个类的测试代码比较独立，基本不互相依赖。&lt;/li>
&lt;li>单元测试覆盖率做到 60 ~ 70% 之间算合格。GoConvey 也有提供覆盖率的报告。&lt;/li>
&lt;li>单元测试不依赖被测试函数的具体实现逻辑，它只关心被测函数实现了什么功能。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 对于函数写不写单元测试，工程师要有足够的主人翁意识(ownership)。 也是拉开与其它人差距的“杀手锏“。&lt;/em>&lt;/p>
&lt;h2 id="测试不友好的代码">测试不友好的代码&lt;/h2>
&lt;ol>
&lt;li>代码中包含未决行为逻辑&lt;/li>
&lt;li>滥用可变全局变量&lt;/li>
&lt;li>滥用静态方法&lt;/li>
&lt;li>使用复杂的继承关系&lt;/li>
&lt;li>高度耦合的代码&lt;/li>
&lt;/ol>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-重构(十六)</title><link>/gof-refactor-1.html</link><pubDate>Thu, 18 Feb 2021 19:48:20 +0800</pubDate><guid>/gof-refactor-1.html</guid><description>&lt;h2 id="纲要">纲要&lt;/h2>
&lt;blockquote>
&lt;p>3W1H&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>why 为什么重构&lt;/li>
&lt;li>what 重构什么&lt;/li>
&lt;li>when 什么时候重构&lt;/li>
&lt;li>how 如何重构&lt;/li>
&lt;/ol>
&lt;h2 id="重构的定义">重构的定义&lt;/h2>
&lt;p>软件设计大师 Martin Fowler 这样定义重构：&lt;/p>
&lt;p>“重构是一种对软件内部结构的改善，目的是在&lt;strong>不改变软件的可见行为&lt;/strong>的情况下，使其更易理解，修改成本更低。”&lt;/p>
&lt;h2 id="重构的目的为什么要重构-why">重构的目的：为什么要重构 (why)&lt;/h2>
&lt;p>首先，重构是时刻保证代码质量的一个极其有效的手段，不至于让代码腐化到无可救药的地步。&lt;/p>
&lt;p>其次，优秀的代码或架构不是一开始就能完全设计好的。是一个迭代，不断演进的过程。&lt;/p>
&lt;p>最后，重构是避免过度设计的有效手段。&lt;/p>
&lt;p>&lt;em>tip: 初级工程师在维护代码，高级工程师在设计代码，资深工程师在重构代码。&lt;/em>&lt;/p>
&lt;h2 id="重构的对象到底重构什么what">重构的对象：到底重构什么(what)&lt;/h2>
&lt;p>根据重构的规模，我们可以笼统地分为大规模高层次重构(大重构)和小规模低层次重构(小重构)。&lt;/p>
&lt;p>&lt;strong>大重构：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>重构的范围
&lt;ul>
&lt;li>系统&lt;/li>
&lt;li>模块&lt;/li>
&lt;li>代码结构&lt;/li>
&lt;li>类与类之间的关系&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重构手段
&lt;ul>
&lt;li>分层&lt;/li>
&lt;li>模块化&lt;/li>
&lt;li>解耦&lt;/li>
&lt;li>抽象可复用组件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重构工具
&lt;ul>
&lt;li>设计思想&lt;/li>
&lt;li>设计原则&lt;/li>
&lt;li>设计模式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>小重构：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>重构范围
&lt;ul>
&lt;li>类&lt;/li>
&lt;li>函数&lt;/li>
&lt;li>变量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重构手段
&lt;ul>
&lt;li>规范命名&lt;/li>
&lt;li>规范注释&lt;/li>
&lt;li>消除超大类或函数&lt;/li>
&lt;li>提取重复代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip:我们重构的对象是软件重个生命周期。&lt;/em>&lt;/p>
&lt;h2 id="重构的时机什么时候重构when">重构的时机：什么时候重构(when)&lt;/h2>
&lt;p>重构可以是一刀切，也可以分阶段。我们提倡的策略是持续重构。&lt;/p>
&lt;p>把重构作为我们开发的一部分，见到不符合编码规范，不好的设计，超长函数都可以随时重构一下。成为一种开发习惯，对项目对自己都会很有好处。&lt;/p>
&lt;p>&lt;em>tip: 持续重构意识很重要&lt;/em>&lt;/p>
&lt;h2 id="重构的方法又该如何重构how">重构的方法：又该如何重构(how)&lt;/h2>
&lt;p>对于大重构难度比较大，需要有组织，有计划地进行，分阶段地小步快跑，时刻让代码处于一个可运行的状态。&lt;/p>
&lt;p>对于小重构难度相对小，因为影响范围小，改动耗时短，所以只要你愿意并且有时间，随时随地都可以重构。&lt;/p>
&lt;p>&lt;em>tip: 不管大还是小重构，都要保证代码可运行，逻辑正确的状态。&lt;/em>&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>小狗钱钱</title><link>/puppy-money.html</link><pubDate>Sat, 13 Feb 2021 21:50:42 +0800</pubDate><guid>/puppy-money.html</guid><description>&lt;blockquote>
&lt;p>《小狗钱钱》是一本让孩子和家长共同成长的金钱童话，非常有趣，故事性很强，也很容易读。&lt;/p>
&lt;p>本书的副标题：从此拥有财富，开启富足快乐的人生。&lt;/p>
&lt;/blockquote>
&lt;h2 id="大纲">大纲&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210217153029.png?imageslim" alt="小狗钱钱">&lt;/p>
&lt;h2 id="正视金钱">正视金钱&lt;/h2>
&lt;p>我们总是有种这样的感觉，我们与财富无关，既然这么想，内心就会对金钱有抵触，觉得自己不可能会变得富有。&lt;/p>
&lt;p>如果我们正视金钱，认为追求生活无忧本就是我们与生俱来的权利。有了足够的金钱，我们能更有尊严地生活，更好地对待自己和他人。如果你听说金钱是万恶之源的话，这是一个大错特错的说法。金钱本身是中性的，主要是看金钱在谁的手里。&lt;/p>
&lt;p>我们要正视金钱，什么都不能阻挡你享有与生俱来的权利，让自己变得富裕。&lt;/p>
&lt;p>&lt;em>一句话: 追求金钱是我们与生惧来的权利。&lt;/em>&lt;/p>
&lt;h2 id="明确方向">明确方向&lt;/h2>
&lt;p>要想成事，我们必须有目标，否则就是无头苍蝇。&lt;strong>而且目标越明确，越容易实现。&lt;/strong>&lt;/p>
&lt;p>老子说：天下难事，必作于易。天下大事，必做于细。&lt;/p>
&lt;p>&lt;strong>首先写出10个你想变得富有的理由，即十个愿望清单。然后仔细看看这张清单，选出最重要的三个愿望。&lt;/strong>&lt;/p>
&lt;p>人往往想要的太多，能做的太少。三个愿望是让你专注，聚集。&lt;/p>
&lt;p>我们必须明确自己内心的愿望，知道它是什么，才有可能得到它。&lt;/p>
&lt;p>不是写完就完事了，而是每天要读一读你的清单，你的愿望，这样才能把它们真正放在心上，然后你就要开始密切关注和寻找帮助你实现愿望的机会。&lt;/p>
&lt;p>&lt;em>一句话：专注自己的目标方向&lt;/em>&lt;/p>
&lt;h2 id="梦想相册">梦想相册&lt;/h2>
&lt;p>明确了自己的愿望，然后就是制作相册。因为图片比文字更具体，这样会让你想象你实现你的梦想是多么开心的事，多么有成就的事，值得为之奋斗。&lt;/p>
&lt;p>这本书已经出版20年啦，如今我们可以借用自己手机相册，制作同样效果的相册。&lt;/p>
&lt;p>书中提到一些小技巧&lt;/p>
&lt;ol>
&lt;li>做某事，我们不要说&lt;strong>尝试&lt;/strong>一下，而是&lt;strong>直接去做&lt;/strong> 。因为“尝试”只不过是为失败提前找借口，为自己找退路。&lt;/li>
&lt;li>学习新的思想，新的观念。如果一个人总是用同样的方式思考，他永远只能得出同样的结论。&lt;/li>
&lt;li>精力集中在哪儿，哪儿就会开花结果。&lt;/li>
&lt;li>只有去寻找，才能发现。只有拥有强烈的渴望，才会去寻找。而只有不断地去想象，才会拥有强烈的渴望。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话: 智慧的海鸥：在你展翅飞翔之前，你就必须相信自己一定能到达目的地。&lt;/em>&lt;/p>
&lt;h2 id="梦想储蓄罐">梦想储蓄罐&lt;/h2>
&lt;p>为你想要实现的愿望准备一个梦想储蓄罐，在梦想储蓄罐上写上你的愿望，把照片贴在储蓄罐上。每月向储蓄罐存入钱。这种方法其实就是视觉法。&lt;/p>
&lt;p>当然我们可以使用手机APP来代替。&lt;/p>
&lt;p>这个方法，更加具象，更加立体，时刻提醒自己，不要忘记自己的梦想。&lt;/p>
&lt;p>&lt;em>一句话:梦想储蓄罐是让自己紧盯目标，经常提醒自己。&lt;/em>&lt;/p>
&lt;h2 id="成功日记">成功日记&lt;/h2>
&lt;p>成功日记主要是建立自信，因为自信决定着你是否敢去做某事。也是实现梦想的基石。&lt;/p>
&lt;p>坚持写成功日记，就会不断更深入地思考自己，思考世界，思考成功的规律。&lt;/p>
&lt;p>现在行动吧。每天记录5条成果，任何小事都可以。&lt;/p>
&lt;p>那如何才能让自己有更多的成功的事记录呢？答案就是：做自己擅长的事。&lt;/p>
&lt;p>要把精力始终集中在你知道的，能做到的和拥有的东西上。&lt;/p>
&lt;p>更直白的说就是要始终去帮别人解决问题，才能挣到钱。&lt;/p>
&lt;p>那些不知道，不擅长的事，交给别人去做。&lt;/p>
&lt;p>&lt;em>一句话: 成功日记是让你发现更多挣钱的机会，专注自己能做好的事。&lt;/em>&lt;/p>
&lt;h2 id="致富经">致富经&lt;/h2>
&lt;p>没有现成的发财路等着我们，但随时随地都能挣到钱，你只要到处看看就能发现机会。&lt;/p>
&lt;p>先从你自己喜欢做的事情上思考，想想如何通过这些事来挣到钱。当然想法别太多，而要集中精力做一件事，会出现神奇的作用。&lt;/p>
&lt;p>&lt;em>一句话：不要总是想那些做不成的事情，而是要多想想什么能做成。&lt;/em>&lt;/p>
&lt;h2 id="做重要的事">做重要的事&lt;/h2>
&lt;p>人们总是十万火急的去做某事，却没有时间考虑真正重要的问题。这是一种悲剧。&lt;/p>
&lt;p>只有你的梦想清单上的事才是重要的事，千万别忘记啦。&lt;/p>
&lt;p>生活虽不易，但三件重要的事必须做：&lt;/p>
&lt;ol>
&lt;li>即使遇到困难和问题，我们也得实施自己的计划。
&lt;ul>
&lt;li>只有在出现真正问题时，谁强谁弱才能见分晓。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>当一切进展顺利，你也应当坚持做下去。
&lt;ul>
&lt;li>高兴过头，把自己的计划抛之脑后。实属愚蠢。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>72法则。
&lt;ul>
&lt;li>决定做一件事时，必须在72小时之内开始行动，否则就很有可能再也不会做了。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话: 幸运只不过是充分准备加上努力工作的结果。决定做不做一件事，72法则见分晓&lt;/em>&lt;/p>
&lt;h2 id="摆脱债务">摆脱债务&lt;/h2>
&lt;p>如果你遇到债务危机的话，尝试以下方法。&lt;/p>
&lt;ol>
&lt;li>注销所有的信用卡&lt;/li>
&lt;li>每个月尽可以少地偿还贷款&lt;/li>
&lt;li>除了生活支出，剩下的存起来&lt;/li>
&lt;li>这真的有必要吗？
&lt;ul>
&lt;li>这句话贴在你的手机上，每次消费时问一问自己。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话: 绝不去借债，应该学会如何赚钱，如何理财，做金钱的主人，而不是奴隶。&lt;/em>&lt;/p>
&lt;h2 id="金蛋的鹅">金蛋的鹅&lt;/h2>
&lt;p>我们应该养一只会下金蛋的鹅，为我们下更多更多的金蛋。&lt;/p>
&lt;p>前面提到过的梦想储蓄罐和这里的金蛋的鹅并不冲突，我们可以合理规则自己的金钱。&lt;/p>
&lt;p>一部分喂养鹅，一部分存入梦想钱罐，余下作为我们生活支出。&lt;/p>
&lt;p>如50%喂养鹅，40%存入梦想钱罐，10%生活支出。&lt;/p>
&lt;p>&lt;em>一句话：合理规则自己的金钱，养一只又大又肥的大鹅&lt;/em>&lt;/p>
&lt;h2 id="克服恐惧">克服恐惧&lt;/h2>
&lt;p>前面的梦想日记就是建立自信，自信即可克服恐惧。&lt;/p>
&lt;p>生活中很多因为面子恐惧而错失很多机会。能阻挡你做自己喜欢的事情也只有恐惧。&lt;/p>
&lt;p>如果你一旦克服面子恐惧，你的世界会为你敞开大门。&lt;/p>
&lt;p>很多生命最美好的事情都是自己送给自己的，因为你克服了恐惧，你将拥有与常人不一样的世界与经历。&lt;/p>
&lt;p>&lt;em>一句话:不是因为困难重重，所以我们心生畏惧，而是因为我们心生畏惧，所以事情变得困难重重。&lt;/em>&lt;/p>
&lt;h2 id="投资法则">投资法则&lt;/h2>
&lt;p>投资都希望能赚钱，而不是赔钱。所以我们需要简单易行。有三条规则。&lt;/p>
&lt;ol>
&lt;li>应当把钱投资在安全的地方&lt;/li>
&lt;li>我们的钱应该生出很多“金蛋”&lt;/li>
&lt;li>我们的投资必须简单易懂&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话:投资有风险，须谨慎&lt;/em>&lt;/p>
&lt;h2 id="基金投资">基金投资&lt;/h2>
&lt;p>基金种类很多，这里只提一种：股票基金（本书中提到的基金种类）&lt;/p>
&lt;p>筛选优质基金的注意事项：&lt;/p>
&lt;ol>
&lt;li>基金应当至少有10年的历史，必须表示良好的收益，一般认为未来同样会保持平衡。&lt;/li>
&lt;li>应该是大型的跨国股票基金，这样的基金投资全世界，分散风险，非常安全。&lt;/li>
&lt;li>通过排名对基金走势进行比较，找到过去10年里收益最好的基金。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>一句话：基金投资是一种简单易行且相对安全的投资方式&lt;/em>&lt;/p>
&lt;h2 id="72-公式">72 公式&lt;/h2>
&lt;p>是一种简单计算你的钱多少年翻一倍。&lt;/p>
&lt;p>如年收益率为10%，即72/10 = 7.2 大约7.2年你的钱翻一倍。&lt;/p>
&lt;p>如果是15%，即4.8年翻一倍。&lt;/p>
&lt;p>口晶则不。， 不。&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://yezihack.github.io，https://www.sgfoot.com&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-通用系统开发(十五)</title><link>/gof-common-dev.html</link><pubDate>Wed, 10 Feb 2021 17:37:59 +0800</pubDate><guid>/gof-common-dev.html</guid><description>&lt;blockquote>
&lt;p>针对非业务通用框架开发，需要做到尽量通用，适合百变的场景，做到良好的扩展。&lt;/p>
&lt;/blockquote>
&lt;h2 id="需求分析">需求分析&lt;/h2>
&lt;h3 id="功能性需求分析">功能性需求分析&lt;/h3>
&lt;ol>
&lt;li>满足使用者的需求，尽量通用。&lt;/li>
&lt;li>借助设计产品线框图工具来罗列需求点。&lt;/li>
&lt;li>把最终的数据显示样式画出来，一目了然。&lt;/li>
&lt;/ol>
&lt;h3 id="非功能性需求分析">非功能性需求分析&lt;/h3>
&lt;blockquote>
&lt;p>一个通用系统，需要做好良好的兼容性。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>易用性&lt;/p>
&lt;ul>
&lt;li>框架是否易集成，易插拔，跟业务代码是否松耦合，提供的接口是否够灵活。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>性能&lt;/p>
&lt;ul>
&lt;li>当集成到业务系统的框架里，不会影响业务性能。&lt;/li>
&lt;li>做到低延时，内存消耗低。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>扩展性&lt;/p>
&lt;ul>
&lt;li>做到不修改框架源码进行扩展。&lt;/li>
&lt;li>做到给框架开发插件一样扩展。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>容错性&lt;/p>
&lt;ul>
&lt;li>
&lt;p>非常重要，不能因为框架本身异常导致接口请求错误。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对外暴露的接口抛出的所有运行时，非运行时异常都要进行捕获处理。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>通用性&lt;/p>
&lt;ul>
&lt;li>能够灵活应用到各种场景中。&lt;/li>
&lt;li>多思考一下，除了当前需求场景，还适合其它哪些场景中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="框架设计">框架设计&lt;/h2>
&lt;p>借鉴TDD（测试驱动开发）和 Prototype (最小原型)的思想&lt;/p>
&lt;ol>
&lt;li>先聚集一个简单的应用场景。&lt;/li>
&lt;li>设计实现一个简单的原型。&lt;/li>
&lt;li>尽管功能不完善，但它能够看得见，摸得着，比较具体，不抽象，能够很有效地帮助自己缕清更复杂的设计思路，是迭代设计的基础。&lt;/li>
&lt;li>在原型系统的代码实现中，我们可以把所有代码都塞到一个类中，暂时不用考虑任何代码质量，线程安全，性能，扩展性等等问题，怎么简单怎么来就行。&lt;/li>
&lt;li>最小原型的代码实现虽然简陋，但它帮我们将思路理顺很多。&lt;/li>
&lt;li>我们现在就基于它做最终的框架设计。&lt;/li>
&lt;/ol>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://yezihack.github.io&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-业务系统开发(十四)</title><link>/gof-business-dev.html</link><pubDate>Wed, 10 Feb 2021 15:13:23 +0800</pubDate><guid>/gof-business-dev.html</guid><description>&lt;h2 id="纲要">纲要&lt;/h2>
&lt;p>&lt;strong>完整的系统流程包括：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>前期的需求沟通分析&lt;/li>
&lt;li>中期的代码设计实现&lt;/li>
&lt;li>后期的系统上线维护&lt;/li>
&lt;/ol>
&lt;h2 id="需求分析">需求分析&lt;/h2>
&lt;p>做为技术人员不仅仅是等着产品设计文档，线框图，照着实现就可以。应该参与到产品设计中。具有产品思维，前期应该去市场上调研，参考，借鉴已成熟的产品。充分了解自己公司的产品后，然后再将其糅合到自己的产品中，并做适当的微创新。&lt;/p>
&lt;ol>
&lt;li>调研产品&lt;/li>
&lt;li>充分了解自家产品&lt;/li>
&lt;li>微创新&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 技术人也要有一些产品思维&lt;/em>&lt;/p>
&lt;h2 id="系统设计">系统设计&lt;/h2>
&lt;ol>
&lt;li>合理地将功能划分到不同模块&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>合理地划分代码可以实现代码的高内聚，低耦合，类与类之间的交互简单清晰，代码整体结构一目了然。&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>
&lt;p>设计模块与模块之间的交互关系&lt;/p>
&lt;ul>
&lt;li>同步接口调用
&lt;ul>
&lt;li>适合上下层之间的关系&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>异步接口调用
&lt;ul>
&lt;li>适合同级间的关系&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>设计模块的接口，数据库，业务模型&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="代码实现">代码实现&lt;/h2>
&lt;h3 id="前提">前提&lt;/h3>
&lt;p>数据库和接口设计非常重要，一旦设计好并投入使用之后，这两部门都不能轻易改动。&lt;/p>
&lt;ol>
&lt;li>改动数据库表结构，需要涉及数据的迁移和适配。&lt;/li>
&lt;li>改动接口，需要推动接口的使用都作相应的代码修改。&lt;/li>
&lt;/ol>
&lt;p>一定要多花点心思和时间，切不可过于随意。&lt;/p>
&lt;p>业务逻辑代码侧重内部实现，不涉及外部依赖的接口，也不包括持久化的数据，所以对改动的容忍性更大。&lt;/p>
&lt;h3 id="mvc">MVC&lt;/h3>
&lt;ol>
&lt;li>Controller 层负责接口暴露&lt;/li>
&lt;li>Repository 层负责数据读写&lt;/li>
&lt;li>Service 层负责核心业务逻辑&lt;/li>
&lt;/ol>
&lt;p>两种开发模式&lt;/p>
&lt;ol>
&lt;li>充血 DDD 开发模式&lt;/li>
&lt;li>贫血 OOP 开发模式&lt;/li>
&lt;/ol>
&lt;h3 id="为什么使用mvc开发">为什么使用MVC开发&lt;/h3>
&lt;ol>
&lt;li>分层能起到代码复用的作用
&lt;ul>
&lt;li>同一个 Repository 可能会被多个 Service 来调用。&lt;/li>
&lt;li>同一个 Service 可能会被多个 Controller 调用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>分层能起到隔离变化的作用
&lt;ul>
&lt;li>Repository 层封装了对数据库访问的操作，提供了抽象的数据访问接口。&lt;/li>
&lt;li>基于接口而非实现编程的设计思想，Service 层使用 Repository 层提供的接口，并不关心底层依赖是哪种具体的数据库。&lt;/li>
&lt;li>如果需要替换不同的数据库，只需要修改 Repository 层，Service 层的代码完全不需要修改。&lt;/li>
&lt;li>三层的稳定程序也不同。越底层越应该稳定。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>分层能起到隔离关注点的作用
&lt;ul>
&lt;li>Repository 层只关注数据的读写。&lt;/li>
&lt;li>Service 层只关注业务逻辑，不关注数据的来源。&lt;/li>
&lt;li>Controller 层只关注与外界打交道，数据校验，封装，格式转换，并不关心业务逻辑。&lt;/li>
&lt;li>三层之间的关注点不同，分层之后，职责分明，更加符合单一职责原则，代码的内聚性更好。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>分层能提高代码可测试性
&lt;ul>
&lt;li>使用依赖注入方式，采用 mock 数据替代真实数据。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>分层能应对系统的复杂性
&lt;ul>
&lt;li>水平方向基于业务来做拆分，就是模块化。&lt;/li>
&lt;li>垂直方向基于流程来做拆分，就是分层。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 对于工作不满意，应该我花点时间在技术上;对于当前工作很满意则多花时间在业务上。&lt;/em>&lt;/p>
&lt;h2 id="关于我">关于我&lt;/h2>
&lt;p>我的博客：https://yezihack.github.io&lt;/p>
&lt;p>欢迎关注我的微信公众号【空树之空】，共同学习，一起进步~
&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Proxy</title><link>/proxy.html</link><pubDate>Tue, 09 Feb 2021 10:51:23 +0800</pubDate><guid>/proxy.html</guid><description>&lt;h2 id="设置git代理">设置GIT代理&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">// 查看当前代理设置
git config --global http.proxy
git config --global https.proxy
// 设置当前代理为 http://127.0.0.1:1080 或 socket5://127.0.0.1:1080
git config --global http.proxy &lt;span class="s1">&amp;#39;http://127.0.0.1:1080&amp;#39;&lt;/span>
git config --global https.proxy &lt;span class="s1">&amp;#39;http://127.0.0.1:1080&amp;#39;&lt;/span>
git config --global http.proxy &lt;span class="s1">&amp;#39;socks5://127.0.0.1:1080&amp;#39;&lt;/span>
git config --global https.proxy &lt;span class="s1">&amp;#39;socks5://127.0.0.1:1080&amp;#39;&lt;/span>
// 删除 proxy
git config --global --unset http.proxy
git config --global --unset https.proxy
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-KISS,YAGNI,DRY,LOD 原则(十三)</title><link>/gof-principle-other.html</link><pubDate>Mon, 08 Feb 2021 12:21:28 +0800</pubDate><guid>/gof-principle-other.html</guid><description>&lt;h2 id="纲要">纲要&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210209203935.png?imageslim" alt="KISS,YAGNI,DRY,LOD 原则">&lt;/p>
&lt;h2 id="kiss原则">KISS原则&lt;/h2>
&lt;blockquote>
&lt;p>Keep It Simple and Stupid&lt;/p>
&lt;p>尽量保持简单&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>代码行数越少就越“简单”吗？&lt;/p>
&lt;p>答案是否定的，实现逻辑需要简单，易维护，不过度优化&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码逻辑复杂就违背 Kiss 原则吗？&lt;/p>
&lt;p>​ 答案也是否定的，需要考虑逻辑复杂度，实现难度，可代码的可读性。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>总结&lt;/p>
&lt;ol>
&lt;li>不要使用很另类的技术实现代码&lt;/li>
&lt;li>不要重复造轮子，善于使用已有的工具类库&lt;/li>
&lt;li>不要过度优化&lt;/li>
&lt;/ol>
&lt;p>一句话：KISS原则讲”如何做“的问题（尽量保持简单）&lt;/p>
&lt;p>&lt;em>tip: 在开发中不要过度设计，越是能用简单的方法解决复杂的问题，越能体现一个人的能力。&lt;/em>&lt;/p>
&lt;h2 id="yagni原则">YAGNI原则&lt;/h2>
&lt;blockquote>
&lt;p>You Ain&amp;rsquo;t Gonna Need It&lt;/p>
&lt;p>你不会需要它&lt;/p>
&lt;/blockquote>
&lt;p>核心思想：不要做过度设计。&lt;/p>
&lt;p>一句话：YAGNI原则讲”要不要做“的问题（当前不需要的就不要做）&lt;/p>
&lt;h2 id="dry原则">DRY原则&lt;/h2>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t Repeat Yourself&lt;/p>
&lt;p>不要重复自己，即不要写重复的代码。&lt;/p>
&lt;/blockquote>
&lt;p>三种典型的代码重复情况：&lt;/p>
&lt;ol>
&lt;li>实现逻辑重复
&lt;ul>
&lt;li>实现逻辑重复，但功能语义不重复的代码，并不违反DRY原则。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>功能语义重复
&lt;ul>
&lt;li>实现逻辑不重复，但功能语义重复的代码，也算是违反DRY原则。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>代码执行重复
&lt;ul>
&lt;li>重复执行相同的代码也是违反DRY原则。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="代码复用性">代码复用性&lt;/h3>
&lt;p>三个不同的概念：&lt;/p>
&lt;ol>
&lt;li>代码复用性(Code Reusability)
&lt;ul>
&lt;li>表示一段代码可被复用的特性或能力&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>代码复用(Code Resue)
&lt;ul>
&lt;li>尽量复用已经存在的代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DRY原则(Don&amp;rsquo;t Repeat Yourself)
&lt;ul>
&lt;li>不要写重复的代码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>复用和可复用性关注角度不同&lt;/strong>&lt;/p>
&lt;p>“可复用性”是从代码开发者的角度出发的。&lt;/p>
&lt;p>“复用”是从代码使用者的角度出发的。&lt;/p>
&lt;p>实际上目的是一样的，都是为了减少代码量，提高代码可读性，可维护性。&lt;/p>
&lt;h3 id="提高复用性方法">提高复用性方法&lt;/h3>
&lt;ol>
&lt;li>减少代码耦合
&lt;ul>
&lt;li>高度耦合的代码，往往是牵一发而动全身。&lt;/li>
&lt;li>尽量减少代码耦合，提高代码的复用性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>满足单一职责原则
&lt;ul>
&lt;li>模块，类，函数尽量职责单一。&lt;/li>
&lt;li>越细粒度的代码，代码的通用性会越好，越容易被复用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>模块化
&lt;ul>
&lt;li>类， 函数要尽量将独立的功能封装成模块。&lt;/li>
&lt;li>独立的模块像一块一块积木，更加容易复用，可以直接拿来搭建更加复杂的系统。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>业务与非业务逻辑分离
&lt;ul>
&lt;li>越是跟业务无关的代码越是容易复用。&lt;/li>
&lt;li>越是针对特定业务的代码越难复用。&lt;/li>
&lt;li>为了复用跟业务无关的代码，将业务与非业务逻辑代码分离，抽取成一些通用的框架，类库，组件等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>通用代码下沉
&lt;ul>
&lt;li>从分层的角度来看，越底层的代码越通用，会被越多模块调用，越应该设计得足够可复用。&lt;/li>
&lt;li>避免交叉调用导致关系混乱
&lt;ul>
&lt;li>只允许上层代码调用下层代码及同层代码之间调用。&lt;/li>
&lt;li>杜绝下层代码调用上层代码。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>通用的代码尽量下沉到更下层。&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>继承，多态，抽象，封装
&lt;ul>
&lt;li>利用继承：可以将公共的代码抽取到父类，子类复用父类的属性和方法。&lt;/li>
&lt;li>利用多态：动态地替换一段代码的部分逻辑，让这段代码可复用。&lt;/li>
&lt;li>利用抽象：越抽象，越不依赖具体实现，越容易复用。&lt;/li>
&lt;li>利用封装：代码封装模块，隐藏可变的细节，暴露不变的接口，就越容易复用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>应用模板等设计模式
&lt;ul>
&lt;li>使用设计模式，提高代码复用性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>其它
&lt;ul>
&lt;li>泛型编程，也是提高代码复用性。&lt;/li>
&lt;li>复用意识非常重要，时常要多去思考一下，这部分代码是否可以抽取出来，作为一个独立的模块，类或函数供多处使用。&lt;/li>
&lt;li>设计每个模块，类，函数的时候，要像设计一个外部API一样，去思考它的复用性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="lod原则">LOD原则&lt;/h2>
&lt;blockquote>
&lt;p>Low of Demeter&lt;/p>
&lt;p>最少知道原则。&lt;/p>
&lt;/blockquote>
&lt;p>每个模块只应该了解那些与它关系密切的模块的有限知识，或者说，每个模块只和自己的朋友“说话”，不和陌生人“说话”。&lt;/p>
&lt;p>从类的角度描述：不该有直接依赖关系的类之间，不要有依赖; 有依赖关系的类之间，尽量只依赖必要的接口（也就是定义中“有限知识）。&lt;/p>
&lt;p>&lt;strong>何为“高内聚，松耦合”&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210209203044.png?imageslim" alt="image-20210209203036244">&lt;/p>
&lt;p>**一句话：**高内聚用来指导类本身的设计，松耦合用来指导类与类之间依赖关系的设计。&lt;/p>
&lt;ol>
&lt;li>“高内聚，松耦合是一个非常重要的设计思想，能够有效地提高代码可读性和可维护性，缩小功能改动导致的代码改动范围。&lt;/li>
&lt;li>“高内聚，松耦合”是一个比较通用的设计思想，可以用来指导不同粒度代码的设计与开发，如系统，模块，类和函数。也可以应用不同开发场景，如微服务，框架，组件，类库等。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 如单一职责原则，基于接口而非实现编程都是实现“高内聚，松耦合”的目的。&lt;/em>&lt;/p>
&lt;p>&lt;strong>如何理解“高内聚”，松耦合“&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>“高内聚，松耦合”是一个非常重要的设计思想，能够有效提高代码的可读性和可维护性，缩小功能改动导致的代码改动范围。&lt;/li>
&lt;li>高内聚：用来指导类本身的设计。&lt;/li>
&lt;li>松耦合：用来指导类与类之间依赖关系的设计。&lt;/li>
&lt;li>所谓高内聚：就是指相近的功能应该放到同一个类中，不相近的功能不要放到同一类中。相近的功能往往被同时修改，放到同一个类中，修改会比较集中。&lt;/li>
&lt;li>所谓松耦合：就是指在代码中，类与类之间的依赖关系简单清晰。即使两个类有依赖关系，一个类的代码改动也不会或者很少导致依赖类的代码改动。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>如何理解“迪米特法则”&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>不该有直接依赖关系的类之间，不要有依赖。&lt;/li>
&lt;li>有依赖关系的类之间，尽量只依赖必要的接口。&lt;/li>
&lt;li>迪米特法则只希望减少类之间的耦合，让类越独立越好。&lt;/li>
&lt;li>每个类都应该少了解系统其它部分。&lt;/li>
&lt;li>一旦发生变化，需要了解这一变化的类就会比较少。&lt;/li>
&lt;/ol>
&lt;p>不同原则角度出发不同，最终都是写出扩展性，可维护性，可阅读性的好代码。&lt;/p>
&lt;ol>
&lt;li>高内聚，松耦合
&lt;ul>
&lt;li>基于设计思想考量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>单一职责原则
&lt;ul>
&lt;li>基于自身提供的功能考量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>接口隔离原则
&lt;ul>
&lt;li>基于外部关系上只依赖需要的抽象考量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>基于接口而非实现编程
&lt;ul>
&lt;li>基于使用者考量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>迪米特法则
&lt;ul>
&lt;li>基于关系考量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-控制反转IOC.Go实例(十二)</title><link>/gof-ioc-code.html</link><pubDate>Mon, 08 Feb 2021 11:23:01 +0800</pubDate><guid>/gof-ioc-code.html</guid><description>&lt;h3 id="控制反转ioc">控制反转(IOC)&lt;/h3>
&lt;blockquote>
&lt;p>Inversion Of Control&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>“控制”是指对程序执行流程的控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>”反转“ 指没有使用框架之前，程序员自己控制整个程序的执行。在使用框架之后，整个程序的执行流程可以通过框架来控制。流程的控制权从程序员”反转“到了框架。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 控制反转是指对程序执行流程的控制权交给框架完成。&lt;/em>&lt;/p>
&lt;h2 id="go代码实现">Go代码实现&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;sync&amp;#34;&lt;/span>
&lt;span class="s">&amp;#34;time&amp;#34;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="c1">// 控制反转 ioc
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// 定义一个发送接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Sender&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">Send&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// 发送函数
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义一个发送 app 结构体，实现控制反转操作
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">SendIoc&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">list&lt;/span> &lt;span class="kd">chan&lt;/span> &lt;span class="nx">Sender&lt;/span> &lt;span class="c1">// 使用 chan 的发送接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="kd">var&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="c1">// 定义一个全局的 Ioc 对象，保证全局唯一
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nx">__sendApp&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SendIoc&lt;/span>
&lt;span class="nx">__sendAppOnce&lt;/span> &lt;span class="nx">sync&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Once&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewSendIoc&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SendIoc&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">__sendAppOnce&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Do&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">__sendApp&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">SendIoc&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="nx">list&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">make&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">chan&lt;/span> &lt;span class="nx">Sender&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="k">go&lt;/span> &lt;span class="nx">__sendApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// 进行调度操作，也就是在框架内实现控制反转
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">})&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">__sendApp&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 注册接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SendIoc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ss&lt;/span> &lt;span class="nx">Sender&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">list&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span> &lt;span class="nx">ss&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 实现框架自动调度，即控制反转
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SendIoc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">select&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="o">&amp;lt;-&lt;/span>&lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">list&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="nx">ok&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Send&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 实现 Sender 接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">TxtSend&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ID&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">TxtSend&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Send&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d:使用 txt 发送消息\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 实现 Sender 接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">SmsSend&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ID&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SmsSend&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Send&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d:使用 sms 发送消息\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 向框架里注册，框架自动完成控制反转操作。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">&amp;lt;&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nf">NewSendIoc&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">Register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">TxtSend&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="nf">NewSendIoc&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nf">Register&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">SmsSend&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">ID&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">})&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Millisecond&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1500&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>设计模式-依赖注入DI.Go实例(十一)</title><link>/gof-di-code.html</link><pubDate>Mon, 08 Feb 2021 11:22:56 +0800</pubDate><guid>/gof-di-code.html</guid><description>&lt;h3 id="依赖注入di">依赖注入(DI)&lt;/h3>
&lt;blockquote>
&lt;p>Dependency Injection&lt;/p>
&lt;/blockquote>
&lt;p>不通过 new() 的方式在类内部创建依赖类对象，而是将依赖的类对象在外部创建好之后，通过构造函数，函数参数等方式传递（或注入）给类使用。&lt;/p>
&lt;p>&lt;em>tip: 基于接口而非实现编程&lt;/em>&lt;/p>
&lt;h2 id="go代码实现">Go代码实现&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;span class="kn">import&lt;/span> &lt;span class="s">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;span class="c1">// DI 依赖注入:Dependency Injection
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="c1">// 定义一个发送接口类
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">ManagerSender&lt;/span> &lt;span class="kd">interface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 发送类
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">Send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义短信发送结构体，实现 ManagerSender 接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">SmsSender&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">SmsSender&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;正在使用短信发送消息，手机号:%s,消息内容:%s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 定义站内发送结构体，实现 ManagerSender 接口
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">InboxSender&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">s&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">InboxSender&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">Send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">fmt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;正在使用站内发送消息，手机号:%s,消息内容:%s\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// ----------------- 实现注入的代码 --------------------
&lt;/span>&lt;span class="c1">// 定义一个发消息结构体
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">type&lt;/span> &lt;span class="nx">Notification&lt;/span> &lt;span class="kd">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">ms&lt;/span> &lt;span class="nx">ManagerSender&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 将接口赋值给 Notification
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="nf">NewNotification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="nx">ManagerSender&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Notification&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">Notification&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="nx">ms&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="c1">// 实现发消息，使用接口的对象 Send
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">func&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="nx">Notification&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nf">SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="kt">string&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">n&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">ms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">phone&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// 传入不同的结构体，实现不同的类型发送消息。
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="nf">NewNotification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">SmsSender&lt;/span>&lt;span class="p">{}).&lt;/span>&lt;span class="nf">SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;15112341234&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;你回来没有？&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nf">NewNotification&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="nx">InboxSender&lt;/span>&lt;span class="p">{}).&lt;/span>&lt;span class="nf">SendMessage&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;13198771100&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;我回来了!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Docker笔记(六) 安装 PHPMyAdmin</title><link>/docker-phpmyadmin.html</link><pubDate>Wed, 03 Feb 2021 14:47:10 +0800</pubDate><guid>/docker-phpmyadmin.html</guid><description>&lt;blockquote>
&lt;p>开发项目涉及到 MySQL时就需要MySQL管理工具, phpmyadmin 是一款网页功能强大的免费软件。&lt;/p>
&lt;/blockquote>
&lt;h2 id="安装-mysql">安装 MySQL&lt;/h2>
&lt;p>命令方式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run -itd --name dev_mysql -p 3306:3306 -e &lt;span class="nv">MYSQL_ROOT_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">123456&lt;/span> mysql
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>docker-compose.yml 方式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">version: &lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>
services:
mysql:
image: &lt;span class="s2">&amp;#34;mysql&amp;#34;&lt;/span>
restart: always
container_name: &lt;span class="s2">&amp;#34;mysqld&amp;#34;&lt;/span>
environment:
MYSQL_ROOT_PASSWORD: &lt;span class="s2">&amp;#34;123456&amp;#34;&lt;/span>
ports:
- &lt;span class="s2">&amp;#34;3306:3306&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装-phpmyadmin">安装 phpmyadmin&lt;/h2>
&lt;blockquote>
&lt;p>管理 MySQL 的软件&lt;/p>
&lt;/blockquote>
&lt;h3 id="修改-mysql-配置">修改 MySQL 配置&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker &lt;span class="nb">exec&lt;/span> -it &amp;lt;dockerID&amp;gt; /bin/bash &lt;span class="c1"># 进入容器&lt;/span>
mysql -u root -p &lt;span class="c1"># 进入 mysql&lt;/span>
&lt;span class="c1"># 将root账号（可替换成其他）的host修改为%&lt;/span>
update mysql.user &lt;span class="nb">set&lt;/span> &lt;span class="nv">host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;%&amp;#39;&lt;/span> where &lt;span class="nv">user&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 查看修改结果&lt;/span>
&lt;span class="k">select&lt;/span> host, user from user&lt;span class="p">;&lt;/span>
&lt;span class="c1"># 刷新加密方式&lt;/span>
flush privileges&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="安装-phpmyadmin-1">安装 phpmyadmin&lt;/h3>
&lt;p>命令行方式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker run -d --name myadmin &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>-e &lt;span class="nv">PMA_HOST&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ip route show &lt;span class="p">|&lt;/span> grep docker0 &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $9}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>-e &lt;span class="nv">PMA_PORT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3306&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>-p 3380:80 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>phpmyadmin/phpmyadmin
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;code>PMA_HOST&lt;/code> 连接MYSQL的host&lt;/li>
&lt;li>&lt;code>PMA_PORT&lt;/code> 连接MYSQL的端口号&lt;/li>
&lt;li>&lt;code>3380:80&lt;/code> 3380为宿主机的，80为docker内部的端口号&lt;/li>
&lt;/ol>
&lt;h2 id="docker-compose-套件">docker-compose 套件&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://www.sgfoot.com/docker-install.html#docker-compose-%E5%AE%89%E8%A3%85">安装docker-compose&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>vim mysql-phpmyadmin.yml&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;3.2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">db&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">mysql:8.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">appsDB&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;6603:3306&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">MYSQL_ROOT_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">helloworld&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">depends_on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">db&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">phpmyadmin/phpmyadmin&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">container_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">phpmyadmin&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">restart&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;8080:80&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">PMA_HOST&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">db&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="启动">启动&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker-compose -f mysql-phpmyadmin.yml up -d
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="查看">查看&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker ps
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="停止">停止&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker-composer -f mysql-phpmyadmin.yml stop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="开启">开启&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">docker-composer -f mysql-phpmyadmin.yml start
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>Jenkins 构建及回滚任务</title><link>/jenkins-build-rollback.html</link><pubDate>Wed, 03 Feb 2021 14:47:04 +0800</pubDate><guid>/jenkins-build-rollback.html</guid><description>&lt;blockquote>
&lt;p>以 golang 构建项目为例。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203173409.png?imageslim" alt="cicd">&lt;/p>
&lt;h2 id="新建任务">新建任务&lt;/h2>
&lt;ol>
&lt;li>输入一个任务名称&lt;/li>
&lt;li>选择：构建一个自由风格的软件项目&lt;/li>
&lt;li>可选：也可以复制已创建的任务&lt;/li>
&lt;li>确定提交&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203153838.png?imageslim" alt="image-20210203153829359">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203153955.png?imageslim" alt="image-20210203153954925">&lt;/p>
&lt;h2 id="配置">配置&lt;/h2>
&lt;blockquote>
&lt;p>再次编辑刚创建的任务&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203154136.png?imageslim" alt="image-20210203154135859">&lt;/p>
&lt;h3 id="描述">描述&lt;/h3>
&lt;p>对你的项目进行描述，可以写如下信息。&lt;/p>
&lt;ol>
&lt;li>项目名称&lt;/li>
&lt;li>部署的IP地址&lt;/li>
&lt;li>部署远程的目录&lt;/li>
&lt;li>日志路径&lt;/li>
&lt;li>配置目录及文件名称&lt;/li>
&lt;li>启动服务&lt;/li>
&lt;li>停止服务&lt;/li>
&lt;li>重启服务&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171058.png?imageslim" alt="image-20210203171056828">&lt;/p>
&lt;h2 id="job-notifications">Job Notifications&lt;/h2>
&lt;p>参数化构建过程&lt;/p>
&lt;blockquote>
&lt;p>构选： 参数化构建过程&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>GIT参数
&lt;ol>
&lt;li>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171234.png?imageslim" alt="image-20210203171232726">&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>选项参数
&lt;ol>
&lt;li>配置“构建” 和 “回滚” 参数。供构建时选择&lt;/li>
&lt;li>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171307.png?imageslim" alt="image-20210203171306056">&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>字符参数
&lt;ol>
&lt;li>设置填写构建ID号。&lt;/li>
&lt;li>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171415.png?imageslim" alt="image-20210203171413932">&lt;/li>
&lt;li>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171504.png?imageslim" alt="image-20210203171503041">&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="源码管理">源码管理&lt;/h3>
&lt;p>一般使用GIT，在 branches to build 指定分支使用变量 &lt;code>${GIT_COMMIT}&lt;/code>,即参数化构建过程那一步使用的GIT参数名称&lt;/p>
&lt;p>&lt;strong>填写有效的 GIT 地址。并使用授权的用户帐号，保证可以访问仓库代码。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171635.png?imageslim" alt="image-20210203171635027">&lt;/p>
&lt;h3 id="构建">构建&lt;/h3>
&lt;p>会用到以下二个选项：&lt;/p>
&lt;ol>
&lt;li>执行Shell&lt;/li>
&lt;li>Send files or execute commands over SSH&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203171834.png?imageslim" alt="image-20210203171832703">&lt;/p>
&lt;h3 id="构建项目的shell">构建项目的SHELL&lt;/h3>
&lt;ol>
&lt;li>定义变量&lt;/li>
&lt;li>删除或创建目录&lt;/li>
&lt;li>判断用户是“构建”还是“回滚”进行区别操作&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203172046.png?imageslim" alt="image-20210203172045718">&lt;/p>
&lt;p>源码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">set&lt;/span> -x
&lt;span class="c1"># 定义名称&lt;/span>
&lt;span class="nv">program_name&lt;/span>&lt;span class="o">=&lt;/span>go_test
&lt;span class="c1"># 项目压缩名称&lt;/span>
&lt;span class="nv">program_filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">program_name&lt;/span>&lt;span class="si">}&lt;/span>.tar.gz
&lt;span class="c1"># 项目路径 &lt;/span>
&lt;span class="nv">target_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">WORKSPACE&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/target/&amp;#34;&lt;/span>
&lt;span class="c1"># 备份路径&lt;/span>
&lt;span class="nv">back_path&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">WORKSPACE&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/bak/&amp;#34;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">back_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">back_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="k">fi&lt;/span>
ls -l &lt;span class="nv">$back_path&lt;/span>
&lt;span class="c1"># 当前构建ID的路径&lt;/span>
&lt;span class="nv">back_path_num&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">back_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">BUILD_NUMBER&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># 删除前必须判断是否存在&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
rm -rf &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> 删除成功&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 备份路径不存在则创建&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="si">${&lt;/span>&lt;span class="nv">back_path_num&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
mkdir -p &lt;span class="nv">$back_path_num&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$back_path_num&lt;/span>&lt;span class="s2"> 创建成功&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 项目路径不存在则创建&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> ! -d &lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
mkdir -p &lt;span class="nv">$target_path&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$target_path&lt;/span>&lt;span class="s2"> 创建成功&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 配置 Go 环境&lt;/span>
&lt;span class="nb">set&lt;/span> &lt;span class="nv">CGO_ENABLED&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;span class="nb">set&lt;/span> &lt;span class="nv">GOARCH&lt;/span>&lt;span class="o">=&lt;/span>amd64
&lt;span class="nb">set&lt;/span> &lt;span class="nv">GOOS&lt;/span>&lt;span class="o">=&lt;/span>linux
&lt;span class="nb">export&lt;/span> &lt;span class="nv">GO111MODULE&lt;/span>&lt;span class="o">=&lt;/span>on
&lt;span class="nb">export&lt;/span> &lt;span class="nv">GOPROXY&lt;/span>&lt;span class="o">=&lt;/span>https://goproxy.cn,direct
&lt;span class="k">case&lt;/span> &lt;span class="nv">$status&lt;/span> in
deploy&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;开始构建项目...&amp;#34;&lt;/span>
&lt;span class="c1"># 生成可执行文件&lt;/span>
/usr/local/go/bin/go build -mod&lt;span class="o">=&lt;/span>vendor -tags&lt;span class="o">=&lt;/span>jsoniter -o &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">program_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> .
&lt;span class="c1"># 压缩打包&lt;/span>
tar -czf &lt;span class="si">${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span> --exclude&lt;span class="o">=&lt;/span>docs &lt;span class="si">${&lt;/span>&lt;span class="nv">program_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 将压缩好的程序复制到备份文件夹里&lt;/span>
cp -f &lt;span class="si">${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">back_path_num&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 将压缩好的程序复制到 target 文件里&lt;/span>
cp -f &lt;span class="si">${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 将其删除压缩包和二进制文件&lt;/span>
rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">program_filename&lt;/span>&lt;span class="si">}&lt;/span>
rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">program_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;构建完成&amp;#34;&lt;/span>
&lt;span class="p">;;&lt;/span>
rollback&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;版本回滚.回滚至 &lt;/span>&lt;span class="nv">$version&lt;/span>&lt;span class="s2"> 版本&amp;#34;&lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">back_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">version&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># 将历史版本的文件复到项目目录里&lt;/span>
cp -f * &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">target_path&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="c1"># 回滚的版本也复制到当前版本的文件夹里，方便下次回滚。&lt;/span>
cp -f * &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">back_path_num&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="p">;;&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="复制到远程机器-shell">复制到远程机器 SHELL&lt;/h3>
&lt;p>将 jenkins 打包好的文件复制到远程机器上。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203172125.png?imageslim" alt="image-20210203172124561">&lt;/p>
&lt;p>&lt;em>注意： Source files，填写 &lt;code>target/go_test.tar.gz&lt;/code>， 即 target目录下的文件。&lt;/em>&lt;/p>
&lt;p>源码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nb">set&lt;/span> -x
&lt;span class="c1"># 项目名称&lt;/span>
&lt;span class="nv">app_name&lt;/span>&lt;span class="o">=&lt;/span>go_test
&lt;span class="nv">app_name_tar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">app_name&lt;/span>&lt;span class="si">}&lt;/span>.tar.gz
&lt;span class="c1"># 项目路径&lt;/span>
&lt;span class="nv">app_path&lt;/span>&lt;span class="o">=&lt;/span>/data/work/
&lt;span class="c1"># 源文件目录&lt;/span>
&lt;span class="nv">origin_path&lt;/span>&lt;span class="o">=&lt;/span>/root/target/
&lt;span class="c1"># 源文件&lt;/span>
&lt;span class="nv">origin_filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">origin_path&lt;/span>&lt;span class="si">}${&lt;/span>&lt;span class="nv">app_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1">#解压之前删除掉源文件&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="nv">$origin_filename&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">origin_filename&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">origin_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> delete success.&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 进入到源文件目录 &lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">origin_path&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 解压文件&lt;/span>
tar -xzvf &lt;span class="si">${&lt;/span>&lt;span class="nv">app_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 添加执行权限&lt;/span>
chmod +x &lt;span class="si">${&lt;/span>&lt;span class="nv">app_name&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 将执行文件复制到项目路径下&lt;/span>
cp &lt;span class="si">${&lt;/span>&lt;span class="nv">app_name&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">app_path&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="c1"># 复制完后，删除源始文件&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">origin_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
rm -f &lt;span class="si">${&lt;/span>&lt;span class="nv">origin_filename&lt;/span>&lt;span class="si">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">origin_filename&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> delete success&amp;#34;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 写上你启动程序的代码。&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;completed&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="维护备份-shell">维护备份 SHELL&lt;/h3>
&lt;p>jenkins 里的备份不可能无限的使用，否则磁盘会无法使用。必须对备份的目录进行维护。&lt;/p>
&lt;p>我们可以设置保留 10 个版本的数据。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203172415.png?imageslim" alt="image-20210203172414790">&lt;/p>
&lt;p>源码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 项目备份不可能无限备份。保留 10 个版本的历史数据。&lt;/span>
&lt;span class="nv">reserved_num&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">10&lt;/span> &lt;span class="c1">#保留文件数&lt;/span>
&lt;span class="nv">file_dir&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">WORKSPACE&lt;/span>&lt;span class="si">}&lt;/span>/bak/
&lt;span class="nv">date&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>date &lt;span class="s2">&amp;#34;+%Y%m%d-%H%M%S&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nb">cd&lt;/span> &lt;span class="nv">$file_dir&lt;/span> &lt;span class="c1">#进入备份目录&lt;/span>
&lt;span class="nv">file_num&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ls -l &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;^d&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> wc -l&lt;span class="k">)&lt;/span> &lt;span class="c1">#当前有几个文件夹，即几个备份&lt;/span>
&lt;span class="k">while&lt;/span>&lt;span class="o">((&lt;/span> &lt;span class="nv">$file_num&lt;/span> &amp;gt; &lt;span class="nv">$reserved_num&lt;/span> &lt;span class="o">))&lt;/span>
&lt;span class="k">do&lt;/span>
&lt;span class="nv">old_file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>ls -rt &lt;span class="p">|&lt;/span> head -1&lt;span class="k">)&lt;/span> &lt;span class="c1">#获取最旧的那个备份文件夹&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$date&lt;/span> &lt;span class="s2">&amp;#34;Delete File:&amp;#34;&lt;/span>&lt;span class="nv">$old_file&lt;/span>
rm -rf &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">file_dir&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="nv">$old_file&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">let&lt;/span> &lt;span class="s2">&amp;#34;file_num--&amp;#34;&lt;/span>
&lt;span class="k">done&lt;/span>
ls -l &lt;span class="nv">$file_dir&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="发布操作">发布操作&lt;/h2>
&lt;h3 id="构建-1">构建&lt;/h3>
&lt;ol>
&lt;li>选择: Build with Parameters&lt;/li>
&lt;li>选择分支&lt;/li>
&lt;li>选择 status&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203172707.png?imageslim" alt="image-20210203172706624">&lt;/p>
&lt;h3 id="回滚">回滚&lt;/h3>
&lt;ol>
&lt;li>选择: Build with Parameters&lt;/li>
&lt;li>选择 status: rollback&lt;/li>
&lt;li>设置 version 版本号&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210203172930.png?imageslim" alt="image-20210203172929159">&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>Jenkins 保证了项目的持续集成与构建，加速了项目构建过程，保证人为干扰。&lt;/p>
&lt;p>版本回滚对于线上的业务是必不可少的一个功能，一旦线上异常需要马上回滚版本。容不得任何时间耽搁。&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="空树之空">&lt;/p></description></item><item><title>如何阅读一本书(二)</title><link>/how-to-read-a-book-2.html</link><pubDate>Thu, 28 Jan 2021 10:24:09 +0800</pubDate><guid>/how-to-read-a-book-2.html</guid><description>&lt;h2 id="纲要">纲要&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210128211229.png?imageslim" alt="阅读的层次">&lt;/p>
&lt;h2 id="基础阅读">基础阅读&lt;/h2>
&lt;blockquote>
&lt;p>从一个孩童的视角切入。共四个阶段，循序渐进。&lt;/p>
&lt;/blockquote>
&lt;h3 id="阅读准备阶段">阅读准备阶段&lt;/h3>
&lt;ol>
&lt;li>身体方面的准备
&lt;ol>
&lt;li>良好的视力和听力。&lt;/li>
&lt;li>起码的认知能力。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>语言上的准备
&lt;ol>
&lt;li>口齿清晰。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>个人的准备
&lt;ol>
&lt;li>与其它人一起学习时，保持注意力。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="读一些简单的读物">读一些简单的读物&lt;/h3>
&lt;ol>
&lt;li>看图识字。&lt;/li>
&lt;li>字句的使用， 词名的含意，字句的发音等等。&lt;/li>
&lt;/ol>
&lt;h3 id="快速建立词汇能力">快速建立词汇能力&lt;/h3>
&lt;ol>
&lt;li>阅读不同领域的书籍，像科学，社会学，语言艺术等等。&lt;/li>
&lt;li>保持开放的心灵与好奇心，不断扩大自己的视野，增进阅读量。&lt;/li>
&lt;/ol>
&lt;h3 id="精练与增进所学的技巧">精练与增进所学的技巧&lt;/h3>
&lt;blockquote>
&lt;p>此阶段为阅读的成熟阶段&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>开始消化阅读的经验
&lt;ol>
&lt;li>从一本书所提出来的一个观点转化到另一个观点。&lt;/li>
&lt;li>在同一个主题上，对不同的作者所提出来的观点作比较。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h2 id="检视阅读">检视阅读&lt;/h2>
&lt;blockquote>
&lt;p>检视阅读，才算是真正进入阅读的层次。&lt;/p>
&lt;p>必须精通基础阅读，否则没法进入检视阅读层次。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>略读的作用：&lt;/strong>&lt;/p>
&lt;p>略读的目标是发现这本书值不值得花时间仔细阅读， 略读也能告诉你许多这本书有关的事。&lt;/p>
&lt;h3 id="略读的阅读">略读的阅读&lt;/h3>
&lt;blockquote>
&lt;p>这是一种非常主动的阅读，需要集中精神来阅读。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>先看书名页， 然后看序
&lt;ol>
&lt;li>特别注意副标题。&lt;/li>
&lt;li>序囊括了这本书大部分的观点与内容。&lt;/li>
&lt;li>在大脑里给这本书归个类。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>研究目录页
&lt;ol>
&lt;li>对这本书的基本架构做概括性的理解。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>检阅书中附有的索引
&lt;ol>
&lt;li>判断出这本书里的重要词汇，关系到作者的意图与态度。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>了解下出版社和作者的背景
&lt;ol>
&lt;li>一个好的出版社会对他出版的图书背书的。&lt;/li>
&lt;li>作者的背景与经历决定着这本书的高度。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>挑几个看来跟主题息息相关的篇章来看
&lt;ol>
&lt;li>检阅这本书写得如何。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>把书打开来，东翻翻西翻翻，念上一两段，有时候连续读几页，但不要太多
&lt;ol>
&lt;li>随时寻找主要论点的讯号，留意主题的基本脉动。&lt;/li>
&lt;li>不要忽略最后的两三页，代表着一本书的收尾。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 通过以上步骤有系统地略读过一本书，完成第一种型态的检视阅读。时间控制在一小时内完成。最后决定这本书是否值得继续投下时间与注意。&lt;/em>&lt;/p>
&lt;h3 id="粗浅的阅读">粗浅的阅读&lt;/h3>
&lt;p>&lt;strong>对于一本难懂的书，阅读的规则：&lt;/strong>&lt;/p>
&lt;p>头一次面对一本难讲的书的时候，从头到尾先读完一遍，碰到不懂的地方不要停下来查询或思索。&lt;/p>
&lt;ol>
&lt;li>略过那些不懂的部分，直到读到你看得懂的地方，集中精神在这个部分，继续这样读下去。&lt;/li>
&lt;li>将全书读完，不要被一个看不懂的章节，注解，评论或参考资料阻挠或泄气。&lt;/li>
&lt;li>如果你让自己被困住了，如果你容许自己被某个顽固的段落绑住了，你就是被打败了。&lt;/li>
&lt;li>在读第二遍的时候，你对那个地方的了解可能会多一些，但是在那之前，你必须至少将这本书先从头到尾读一遍才行。&lt;/li>
&lt;li>从头到尾读一遍之后比你让自己在一碰上困难的地方就停止要好很多，后者让你对这本书真的一无所知。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>阅读的速度：&lt;/strong>&lt;/p>
&lt;p>​ 检视阅读是一种训练有素的快速阅读。懂得能快速读，也能用不同速度来阅读。&lt;/p>
&lt;p>&lt;em>tip: 每一本书，不论是多么难读的书，在无关紧要的间隙部分就可以读快一点。而一本好书，总会包含一些比较困难的内容，应该慢慢阅读内容。&lt;/em>&lt;/p>
&lt;p>&lt;strong>逗留与倒退：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>
&lt;p>许多人会从最初学会阅读之后，多年一直使用“半出声(sub-vocalize)”的方式来阅读。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此外还有些阅读者，在阅读一行字的时候会在五六个地方发生“逗留(fix-ate)”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更糟的是，不熟练的阅读者在每看过两三行之后，眼睛就自然地“倒退”到先前读过的句子上去。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>以上这些现象或习惯不但浪费时间而且降低阅读的速度。&lt;/p>
&lt;p>我们的头脑跟眼睛不一样，并不需要一次只“读”一个字或一个句子。我们的头脑是个惊人的工具，可以在“一瞥”之间掌握住一个句子或段落。&lt;/p>
&lt;p>&lt;strong>矫正眼睛逗留的有效方法：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>利用双手训练自己的眼睛，跟着章节段落移动得越来越快。&lt;/li>
&lt;li>将大拇指与食指，中指合并在一起，用这个“指针”顺着一行一行的字移动下去，速度要比你眼睛感觉的还要快一点。&lt;/li>
&lt;li>强迫自己的眼睛跟着手部的动作移动。不断增快手的动作，你的速度比以前要快两三倍了。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>理解的问题：&lt;/strong>&lt;/p>
&lt;p>增进阅读速度之后，我们节省很多时间。我们手就像是个计时器，不只负责增进阅读速度，也能帮助你专注所阅读的东西上。也不再打瞌睡和胡思乱想了。&lt;/p>
&lt;p>&lt;strong>检视阅读的摘要：&lt;/strong>&lt;/p>
&lt;p>在第一次阅读一本难读的书时，不要企图了解每一个字句。这是最最重要的一个规则。&lt;/p>
&lt;p>就算是最难读的书也快快地读一遍。当你再读第二次时，你已经准备好要读这本书了。&lt;/p>
&lt;p>&lt;strong>总结&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>第一阶段的检视阅读，即系统略读，帮助你了解本书的架构。&lt;/li>
&lt;li>第二阶段的检视阅读，即粗浅阅读，帮助你了解全书内容。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 阅读的本质是一种活动。想要读得好，一个主动，自我要求的读者，就得采取一些行动。&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="big-white">&lt;/p></description></item><item><title>如何阅读一本书(一)</title><link>/how-to-read-a-book.html</link><pubDate>Wed, 27 Jan 2021 19:53:05 +0800</pubDate><guid>/how-to-read-a-book.html</guid><description>&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/how-book.png?imageslim" alt="img">&lt;/p>
&lt;h2 id="阅读的艺术">阅读的艺术&lt;/h2>
&lt;blockquote>
&lt;p>阅读是一件主动的事，而非被动。&lt;/p>
&lt;/blockquote>
&lt;h3 id="阅读的误区">阅读的误区&lt;/h3>
&lt;blockquote>
&lt;p>太多的资讯就如同太少的资讯一样, 都是一种对理解力的阻碍.&lt;/p>
&lt;/blockquote>
&lt;p>我们在这个互联网上接触的到的音频,视频及文章等等, 都是一些经过太精心的设计, 使得思考形同没有需要了, 长期接受这样的信息会对我们的理解力产生阻碍.&lt;/p>
&lt;p>&lt;em>tip: 远离二手信息, 直击源头知识.&lt;/em>&lt;/p>
&lt;h3 id="主动的阅读">主动的阅读&lt;/h3>
&lt;blockquote>
&lt;p>阅读越主动, 效果越好.&lt;/p>
&lt;/blockquote>
&lt;p>任务一种阅读都是一种活动, 那就必须要有一些主动的活力. 完全被动, 就阅读不了&amp;ndash; 我们不可能在双眼停滞, 头脑昏睡的状况下阅读.&lt;/p>
&lt;ol>
&lt;li>第一提醒读者: 阅读可以是一件主动的事.&lt;/li>
&lt;li>第二提醒读者: 阅读越主动, 效果越好.&lt;/li>
&lt;/ol>
&lt;p>一个读者更主动一些, 在阅读的世界里探索能就更强一些, 收获更多一些, 因而也更高明一些.&lt;/p>
&lt;p>读者对他自己, 以及面前的书籍, 要求的越多, 获得的就越多.&lt;/p>
&lt;h3 id="阅读的目标">阅读的目标&lt;/h3>
&lt;blockquote>
&lt;p>以获得知识而读, 以及为求得理解而读.&lt;/p>
&lt;/blockquote>
&lt;p>一本书摆在你面前, 想要与你沟通一些想法. 你要能成功地阅读这本书, 完全看你能接获多少作者要要传达的讯息.&lt;/p>
&lt;p>&lt;strong>只有一种方式是真正地在阅读:&lt;/strong>&lt;/p>
&lt;p>没有任何外力的帮助, 你就是要读这本书. 你什么都没有, 只凭着内心的力量, 玩味着眼前的字句, 慢慢地提升自己,从只有模糊的概念到更清楚地理解为止. 这样的一种提升, 是在阅读时的一种脑力活动, 也是更高的阅读技巧. 这种阅读就是让一本书向你即有的理解力做挑战。&lt;/p>
&lt;p>&lt;strong>两种不同意义的阅读:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>第一种：阅读网文, 杂志, 公众号等, 凭我们的阅读技巧与聪明才智, 一下子便融会贯通. 这样的读物能增加我们的资讯, 却不能增进我们的理解力。
&lt;ol>
&lt;li>因为在开始阅读之前， 我们的理解力就已经与他们完全相当了。 否则我们一路读下去会被卡壳的。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>第二种：试着读某样一开始并不怎么了解的东西。这个东西的水平就是比阅读的人高上一截。这个作者想要表达的东西， 能增进读者的理解力。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>增进理解而阅读的两种状况：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>第一是一开始时不相等的理解程度。&lt;/li>
&lt;li>其次，阅读的人一定要把不相等的理解力克服到一定程度之内。一旦达到相同的理解程序，就完成了清楚的沟通。&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 我们只能从比我们&amp;quot;更高&amp;quot;的人身上学习。我们一定要知道他们是谁， 如何跟他们学习。&lt;/em>&lt;/p>
&lt;h3 id="阅读就是学习">阅读就是学习&lt;/h3>
&lt;blockquote>
&lt;p>蒙田：初学者的无知在于未学， 而学者的无知在于学后。&lt;/p>
&lt;/blockquote>
&lt;p>思考只是主动阅读的一部分， 一个人还必须运用他的感觉和想象力。&lt;/p>
&lt;p>一个人必须观察，记忆，在看不到的地方运用想象力。&lt;/p>
&lt;h2 id="阅读的层次">阅读的层次&lt;/h2>
&lt;blockquote>
&lt;p>阅读层次共分为四种，阅读的层次是激进的。&lt;/p>
&lt;/blockquote>
&lt;h3 id="基础阅读">基础阅读&lt;/h3>
&lt;blockquote>
&lt;p>elementary reading&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>能识字断句，明白这个句子在说什么。&lt;/li>
&lt;/ol>
&lt;h3 id="检视阅读">检视阅读&lt;/h3>
&lt;blockquote>
&lt;p>inspectional reading&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>特点在强调时间&lt;/li>
&lt;li>在一定时间之内，抓出一本书的重点．&lt;/li>
&lt;li>检视阅读是系统化的略读的一门艺术．&lt;/li>
&lt;li>这本书在谈什么？或这本书包含哪些部分&lt;/li>
&lt;/ol>
&lt;h3 id="分析阅读">分析阅读&lt;/h3>
&lt;blockquote>
&lt;p>analytical reading&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>是全盘的阅读，完整的阅读或优质的阅读．&lt;/li>
&lt;li>在无限的时间里，完整阅读．&lt;/li>
&lt;li>提出许多有系统性的问题．&lt;/li>
&lt;li>分析阅读永远是一种专注的活动．&lt;/li>
&lt;li>分析阅读就是特别在追寻理解的．&lt;/li>
&lt;/ol>
&lt;h3 id="主题阅读">主题阅读&lt;/h3>
&lt;blockquote>
&lt;p>syntopical reading&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>最复杂也最系统化的阅读&lt;/li>
&lt;li>也称比较阅读，阅读者会读很多书，而不是一本书，并列出这些书之间相关之处，提出一个所有书都谈到的主题．&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="big-white">&lt;/p></description></item><item><title>设计模式-SOLID五大原则(十)</title><link>/gof-solid.html</link><pubDate>Mon, 25 Jan 2021 21:03:38 +0800</pubDate><guid>/gof-solid.html</guid><description>&lt;p>[TOC]&lt;/p>
&lt;blockquote>
&lt;p>SOLID原则包括单一职责，开闭原则，里氏替换原则，接口隔离原则，依赖倒置原则。&lt;/p>
&lt;/blockquote>
&lt;h2 id="单一职责原则srp">单一职责原则(SRP)&lt;/h2>
&lt;blockquote>
&lt;p>SRP: Single Responsibility Principle&lt;/p>
&lt;p>A class or module should have a single reponsilibility.一个类或者模块只负责完成一个职责(或者功能)&lt;/p>
&lt;/blockquote>
&lt;p>一个类只负责完成一个职责或功能, 也就是说, 不要设计大而全的类, 要设计粒度小, 功能单一的类.&lt;/p>
&lt;p>换个角度来讲就是. 一个类包含了两个或两个以上业务不相干的功能, 我们就说它的职责不够单一, 应该将它拆分成多个功能更加单一, 粒度更细的类.&lt;/p>
&lt;h3 id="如何判断类是否单一">如何判断类是否单一&lt;/h3>
&lt;ol>
&lt;li>类中的代码行数,函数或者属性过多.&lt;/li>
&lt;li>类依赖的其它类过多, 或者依赖类的其它类过多, 不符合高内聚, 低耦合的设计思想.&lt;/li>
&lt;li>私有方法过多&lt;/li>
&lt;li>比较难给类起一个合适的名字&lt;/li>
&lt;li>类中大量的方法都是集中操作类中的某几个属性.&lt;/li>
&lt;/ol>
&lt;h3 id="如何设计单一类">如何设计单一类&lt;/h3>
&lt;blockquote>
&lt;p>技巧: 持续重构. 没有一尘不变的设计&lt;/p>
&lt;/blockquote>
&lt;p>单一职责原则通过避免设计大而全的类, 避免将不相关的功能耦合在一起, 来提高类的内聚性. 同时类职责单一, 类依赖和被依赖的其它类也会变少, 减少了代码的耦合性, 以此来实现代码的高内聚, 低耦合.&lt;/p>
&lt;p>但是, 如果拆分得过细, 实际上会适得其反, 反倒会降低内聚性, 也会影响代码的可维护性.&lt;/p>
&lt;h2 id="开闭原则ocp">开闭原则(OCP)&lt;/h2>
&lt;blockquote>
&lt;p>OCP: Open Closed Priciple&lt;/p>
&lt;p>Software entities (modules, classes, functions, etc.) should be open for extension, but closed for modification.&lt;/p>
&lt;p>软件实体(模块, 类, 方法等) 应该对扩展开放, 对修改关闭&lt;/p>
&lt;/blockquote>
&lt;p>扩展性是代码质量最重要的衡量标准之一. 在23种经典设计模式中, 大部门设计模式都是为了解决代码的扩展性问题而存在的, 主要遵从的设计原则就是&lt;strong>开闭原则&lt;/strong>&lt;/p>
&lt;h3 id="对扩展开放对修改关闭">对扩展开放,对修改关闭&lt;/h3>
&lt;p>添加一个新的功能,应该是通过已用的代码基础上扩展代码(新增模块, 类, 方法, 属性等), 而非修改已有代码(修改模块, 类, 方法, 属性等)的方式来完成.&lt;/p>
&lt;ol>
&lt;li>开闭原则则并不是说完全杜绝修改, 而是以最小的修改代码的代价来完成新功能的开发&lt;/li>
&lt;li>同样的代码改动, 在粗代码粒度下, 可能被认定为&amp;quot;修改&amp;quot;; 在细代码粒度下, 可能又被认定为&amp;quot;扩展&amp;quot;&lt;/li>
&lt;/ol>
&lt;h3 id="提高代码扩展性的方法">提高代码扩展性的方法&lt;/h3>
&lt;blockquote>
&lt;p>底层逻辑: 对扩展开放, 对修改关闭&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>多态&lt;/li>
&lt;li>依赖注入&lt;/li>
&lt;li>基于接口而非实现编程&lt;/li>
&lt;li>设计模式
&lt;ol>
&lt;li>装饰器模式&lt;/li>
&lt;li>模板模式&lt;/li>
&lt;li>职责链模式&lt;/li>
&lt;li>状态模式&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3 id="如何灵活应用开闭原则">如何灵活应用开闭原则&lt;/h3>
&lt;blockquote>
&lt;p>唯一不变的只有变化本身&lt;/p>
&lt;/blockquote>
&lt;p>开发一般分为&lt;/p>
&lt;ol>
&lt;li>
&lt;p>业务导向系统&lt;/p>
&lt;ol>
&lt;li>金融系统, 电商系统, 物流系统等.&lt;/li>
&lt;li>分析:
&lt;ol>
&lt;li>识别出尽可能多的扩展点, 对业务有足够的了解.&lt;/li>
&lt;li>能够知道当及未来可能要支持的业务需求.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>通用,偏底层的系统&lt;/p>
&lt;ol>
&lt;li>
&lt;p>如框架, 组件, 类库等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分析&lt;/p>
&lt;ol>
&lt;li>
&lt;p>会被如何使用?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>今后打算添加哪些功能?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>未来会有哪些更多的功能需求?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>Tip: 扩展性是有代价的, 会牺牲可读性. 我们需要在扩展性与可读性之间做平衡.&lt;/p>
&lt;ol>
&lt;li>某些场景下,代码的扩展性很重要, 可以适当牺牲一些代码的可读性.&lt;/li>
&lt;li>另一些场景下, 代码的可读性更加重要, 可以适当牺牲一些代码的可扩展性.&lt;/li>
&lt;/ol>
&lt;h3 id="为什么要做开闭原则">为什么要做开闭原则&lt;/h3>
&lt;p>对扩展开放是为了应对变化(需求), 对修改关闭是为了保证已用代码的稳定性, 最终是为了让系统更有弹性.&lt;/p>
&lt;p>&lt;strong>很多设计原则, 设计思想, 设计模式都是以提高代码的扩展性为最终目的的&lt;/strong>&lt;/p>
&lt;h2 id="里氏替换原则lsp">里氏替换原则(LSP)&lt;/h2>
&lt;blockquote>
&lt;p>LSP: Liskov Substitution Principle&lt;/p>
&lt;/blockquote>
&lt;p>Barbara Liskov:&lt;/p>
&lt;blockquote>
&lt;p>If S is a subtype of T, then object of type T may be replaced with objects of type S, without breaking the program&lt;/p>
&lt;/blockquote>
&lt;p>如果S是T的子类型，则类型T的对象可以替换为类型S的对象，而不会破坏程序&lt;/p>
&lt;p>Robert Martin:&lt;/p>
&lt;blockquote>
&lt;p>Functions that use pointers of references to base classes must be able to use objects of derived classes without knowing it.&lt;/p>
&lt;/blockquote>
&lt;p>使用基类引用指针的函数必须能够在不知情的情况下使用派生类的对象。&lt;/p>
&lt;p>综合两者的描述：子类对象能够替换程序中父类对象出现的任何地方，并且保证原来程序的逻辑行为不变及正确性不被破坏。&lt;/p>
&lt;p>&lt;strong>一种更接地气的描述： Design By Contract. 按照协议来设计&lt;/strong>&lt;/p>
&lt;h3 id="违反里氏替换原则">违反里氏替换原则&lt;/h3>
&lt;ol>
&lt;li>子类违背父类声明要实现的功能。&lt;/li>
&lt;li>子类违背父类对输入，输出，异常的约定。&lt;/li>
&lt;li>子类违背父类注释中所罗列的任何特殊说明&lt;/li>
&lt;/ol>
&lt;p>遵守协议，保证一致性，即符合里氏替换原则。&lt;/p>
&lt;p>&lt;em>tip: 小窍门，拿父类的单元测试去验证子类代码，验证里否符合里氏替换原则。&lt;/em>&lt;/p>
&lt;h2 id="接口隔离原则isp">接口隔离原则(ISP)&lt;/h2>
&lt;blockquote>
&lt;p>ISP: Interface Segregation Principle&lt;/p>
&lt;p>Clients should not be forced to depend upon interface that they do not use.&lt;/p>
&lt;p>客户端不应该强迫依赖它不需要的接口。”客户端“可理解为接口的调用者或使用者。&lt;/p>
&lt;/blockquote>
&lt;p>接口可以理解为三种不同情况下的接口概念。&lt;/p>
&lt;ol>
&lt;li>一组 API 接口集合&lt;/li>
&lt;li>单个 API 接口或函数&lt;/li>
&lt;li>OOP 中的接口概念&lt;/li>
&lt;/ol>
&lt;h3 id="一组-api-接口集合">一组 API 接口集合&lt;/h3>
&lt;p>如设计微服务或类库接口的时候，如果部分只被部分调用者使用，那我们就需要将这部分接口隔离出来，单独给对应的调用者使用，而不是强迫其他调用者也依赖这部分不会被使用到的接口。&lt;/p>
&lt;p>&lt;em>tip: 使用者需要几个接口就提供几个接口，不提供不使用的接口。&lt;/em>&lt;/p>
&lt;h3 id="单个-api-接口或函数">单个 API 接口或函数&lt;/h3>
&lt;p>把接口理解为单个接口或函数。那接口隔离原则就可以理解为：函数的设计要功能单一，不要将多个不同的功能逻辑在一个函数中实现。&lt;/p>
&lt;p>&lt;em>tip: 一个函数只实现一种逻辑的代码。&lt;/em>&lt;/p>
&lt;p>与单一原则的区别：单一职责则针对是模块，类，接口的设计。&lt;/p>
&lt;h3 id="oop-中的接口概念">OOP 中的接口概念&lt;/h3>
&lt;p>理解为面向对象的接口语法。则接口的设计要尽量单一，不要让接口的实现类和调用者，依赖不需要的接口函数。&lt;/p>
&lt;h2 id="依赖倒置原则dip">依赖倒置原则(DIP)&lt;/h2>
&lt;h3 id="控制反转ioc">控制反转(IOC)&lt;/h3>
&lt;blockquote>
&lt;p>Inversion Of Control&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>
&lt;p>“控制”是指对程序执行流程的控制&lt;/p>
&lt;/li>
&lt;li>
&lt;p>”反转“ 指没有使用框架之前，程序员自己控制整个程序的执行。在使用框架之后，整个程序的执行流程可以通过框架来控制。流程的控制权从程序员”反转“到了框架。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 控制反转是指对程序执行流程的控制权交给框架完成。&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://www.sgfoot.com/gof-ioc-code.html">Go代码实现控制反转实例代码&lt;/a>&lt;/p>
&lt;h3 id="依赖注入di">依赖注入(DI)&lt;/h3>
&lt;blockquote>
&lt;p>Dependency Injection&lt;/p>
&lt;/blockquote>
&lt;p>不通过 new() 的方式在类内部创建依赖类对象，而是将依赖的类对象在外部创建好之后，通过构造函数，函数参数等方式传递（或注入）给类使用。&lt;/p>
&lt;p>&lt;em>tip: 基于接口而非实现编程&lt;/em>&lt;/p>
&lt;p>&lt;a href="https://www.sgfoot.com/gof-di-code.html">Go代码实现依赖注入实例代码&lt;/a>&lt;/p>
&lt;h3 id="依赖反转原则dip">依赖反转原则(DIP)&lt;/h3>
&lt;blockquote>
&lt;p>Dependency Inversion Principly&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>高层模块不要依赖低层模块。&lt;/li>
&lt;li>高层模块和低层模块应该通过抽象来互相依赖。&lt;/li>
&lt;li>除此之外，抽象不要依赖具体实现细节，具体实现细节依赖抽象&lt;/li>
&lt;/ol>
&lt;p>&lt;em>tip: 都是基于开闭原则，提高代码扩展性。&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="big-white">&lt;/p></description></item><item><title>GitHub 徽章制作</title><link>/badge.html</link><pubDate>Fri, 22 Jan 2021 14:23:07 +0800</pubDate><guid>/badge.html</guid><description>&lt;blockquote>
&lt;p>很早前写过一篇关于&lt;a href="https://www.sgfoot.com/golang-travis.html">Golang持续集成服务之Travis教程&lt;/a>, 今天再写写关于 github 上常见的徽章是如何制作的. 让你的开源项目更高大上, 让你的代码也更健壮.&lt;/p>
&lt;/blockquote>
&lt;h2 id="徽章的含意">徽章的含意&lt;/h2>
&lt;blockquote>
&lt;p>当你浏览一个开源项目时,看到各种徽章, 有些徽章是直接反应这个开源库的质量和完整性等等.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122143123.png?imageslim" alt="image-20210122143122198">&lt;/p>
&lt;p>如上图所示&lt;/p>
&lt;ol>
&lt;li>第一个徽章即 Github 自带的 &lt;a href="https://docs.github.com/en/packages/guides/using-github-packages-with-github-actions">workflow&lt;/a> 提供的持续集成(CI)和持续部署(CD), 官方称之为 Actions, 图示显示为 CI, CD 是否通过&lt;/li>
&lt;li>第二个徽章即 &lt;a href="https://codecov.io/">Codecov&lt;/a> 是一个测试结果分析工具, 图标显示测试覆盖率.&lt;/li>
&lt;li>第三个徽章即 &lt;a href="https://shields.io/">shields.io&lt;/a> 一个可以自定义徽章的网站&lt;/li>
&lt;li>第四个徽章即 &lt;a href="https://goreportcard.com/">goreportcard&lt;/a> 是一个项目综合评分网站&lt;/li>
&lt;li>第五个徽章即 &lt;a href="https://gitter.im/">gitter&lt;/a> 自定义讨论组的网站&lt;/li>
&lt;/ol>
&lt;h2 id="cicd-徽章">CI&amp;amp;CD 徽章&lt;/h2>
&lt;blockquote>
&lt;p>github 于2018. 10月推荐 GitHub Actions 持续集成服务, 在此之前大家都是使用 &lt;a href="https://travis-ci.org/">https://travis-ci.org/&lt;/a> 持续集成服务, 之前我也写过相关文章. &lt;a href="https://www.sgfoot.com/golang-travis.html">Golang持续集成服务之Travis教程&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>持续集成和持续部署目前 github 官方自带支持, 官方称之为 GitHub Actions.&lt;/p>
&lt;p>只要你在 github 上创建一个开源项目仓库就自带 Actions 功能, 支持各种语言. 还可以自动发布 GitHub Pages 等功能, 十分强大.&lt;/p>
&lt;p>如何使用可以参考阮一峰写的&lt;a href="http://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html">GitHub Actions 入门教程&lt;/a>&lt;/p>
&lt;p>&lt;strong>关于GO的持续集成服务模板参考:&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>使用 GitHub Actions 后会在你的项目里自带生成一个&lt;code>.github&lt;/code>文件夹, 即&lt;code>.github/workflows/go.yml&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Go&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用语言&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 监听动作&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 监听 push 动作&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 监听哪个分支 branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 工作 job&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 构建动作&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 基于 ubuntu 系统&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Set up Go &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/setup-go@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">go-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.15&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 构建项目&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">go build -v ./...&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 运行用例&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">go test -v .&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>徽章的制作.&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://github.com/yezihack/e/actions?query=workflow%3AGo">&lt;img src="https://github.com/yezihack/e/workflows/Go/badge.svg" alt="workflows">&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">https://github.com/yezihack/e/workflows/Go/badge.svg
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;code>https://github.com/yezihack/e&lt;/code> 是项目的地址&lt;/li>
&lt;li>&lt;code>workflows/Go/badge.svg&lt;/code> 中间的&lt;code>Go&lt;/code> 是 &lt;a href="https://github.com/yezihack/e/actions?query=workflow%3AGo">https://github.com/yezihack/e/actions?query=workflow%3AGo&lt;/a> 下的名称. 需要注意区分大小写&lt;/li>
&lt;/ol>
&lt;h2 id="测试覆盖率-徽章">测试覆盖率 徽章&lt;/h2>
&lt;p>登陆官网 &lt;a href="https://codecov.io/">https://codecov.io/&lt;/a> 使用 GitHub 帐号登陆, 授权导出你的项目.&lt;/p>
&lt;p>在项目的根目录新建&lt;code>.travis.yml&lt;/code> 文件&lt;/p>
&lt;p>实例文件参考&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="nt">language&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">go&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用语言.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">go&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="m">1.15.6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 版本号, 支持多种版本号&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">sudo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">required # &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#有定制化开发环境需要，默认false，不开启容器，编译效率高 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="l">os: # 使用的操作系统 &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">linux&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">osx&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">notifications&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 邮箱通知&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">email&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">freeit@126.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">go_import_path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用Go需要导入的包. &lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">github.com/gin-gonic/gin&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">github.com/pkg/errors&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">github.com/smartystreets/goconvey&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">before_install&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 主要安装一些系统依赖,&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">go mod tidy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">install&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 安装, true跳过&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 脚本执行.&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;run&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">go test -race -coverprofile=coverage.txt -covermode=atomic&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">go test -v ./...&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">after_success&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 上传测试报告&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">bash &amp;lt;(curl -s https://codecov.io/bash)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>徽章制作&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://codecov.io/gh/yezihack/e">&lt;img src="https://codecov.io/gh/yezihack/e/branch/main/graph/badge.svg?token=QZSV2DZM60" alt="codecov">&lt;/a>&lt;/p>
&lt;p>点击Settings -&amp;gt; Badge&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122160150.png?imageslim" alt="image-20210122160148601">&lt;/p>
&lt;h2 id="文档徽章">文档徽章&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://pkg.go.dev/">https://pkg.go.dev/&lt;/a> 只针对Golang语言自动生成文档&lt;/p>
&lt;/blockquote>
&lt;p>打开网站直接输入你项目的访问地址, 自带生成.&lt;/p>
&lt;p>如 &lt;a href="https://github.com/yezihack/e">https://github.com/yezihack/e&lt;/a>&lt;/p>
&lt;p>文档地址即: &lt;a href="https://pkg.go.dev/github.com/yezihack/e">https://pkg.go.dev/github.com/yezihack/e&lt;/a>&lt;/p>
&lt;p>&lt;strong>徽章制作&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">https://img.shields.io/badge/go.dev-reference-brightgreen?logo&lt;span class="o">=&lt;/span>go&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">logoColor&lt;/span>&lt;span class="o">=&lt;/span>white&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="nv">style&lt;/span>&lt;span class="o">=&lt;/span>flat
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">[![Go doc](https://img.shields.io/badge/go.dev-reference-brightgreen?logo=go&amp;amp;logoColor=white&amp;amp;style=flat)](https://pkg.go.dev/github.com/yezihack/e)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://pkg.go.dev/github.com/yezihack/e">&lt;img src="https://img.shields.io/badge/go.dev-reference-brightgreen?logo=go&amp;amp;logoColor=white&amp;amp;style=flat" alt="Go doc">&lt;/a>&lt;/p>
&lt;h2 id="综合报告徽章">综合报告徽章&lt;/h2>
&lt;p>打开 &lt;a href="https://goreportcard.com/">https://goreportcard.com/&lt;/a> 直接填写你的项目访问地址即可.&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122161752.png?imageslim" alt="image-20210122161750380">&lt;/p>
&lt;p>&lt;strong>徽章制作&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">https://goreportcard.com/badge/github.com/yezihack/e
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://goreportcard.com/report/github.com/yezihack/e">&lt;img src="https://goreportcard.com/badge/github.com/yezihack/e" alt="Go Report Card">&lt;/a>&lt;/p>
&lt;h2 id="讨论组徽章">讨论组徽章&lt;/h2>
&lt;p>打开 &lt;a href="https://gitter.im/">https://gitter.im/&lt;/a> 注册, 创建一个小组, 可以邀请开发者一起讨论.&lt;/p>
&lt;p>创建小组时最好以你的用户名+仓库名 命名. 这样方便识别.&lt;/p>
&lt;p>&lt;strong>徽章制作&lt;/strong>&lt;/p>
&lt;p>获取你的讨论组的地址, 然后在 &lt;a href="https://shields.io/category/chat">https://shields.io/category/chat&lt;/a> 选择 Gitter即可. 填写你的用户名和仓库名信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">![Gitter](https://img.shields.io/gitter/room/yezihack/e)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://gitter.im/yezihack-e/community">&lt;img src="https://img.shields.io/gitter/room/yezihack/e" alt="Gitter">&lt;/a>&lt;/p>
&lt;h2 id="其它徽章">其它徽章&lt;/h2>
&lt;p>打开 &lt;a href="https://shields.io">https://shields.io&lt;/a> 可以自定义很多个性的图标, 让你的项目更专业.&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122162326.png?imageslim" alt="image-20210122162326038">&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/yezihack/assets/b/20210122112114.png?imageslim" alt="big-white">&lt;/p></description></item></channel></rss>